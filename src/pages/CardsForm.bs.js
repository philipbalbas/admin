// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as Antd from "antd";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Js_math from "bs-platform/lib/es6/js_math.js";
import * as ForEditor from "for-editor";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as Utils$ReactHooksTemplate from "../Utils.bs.js";
import * as ForEditor$ReactHooksTemplate from "../bindings/ForEditor.bs.js";

function CardsForm(Props) {
  var match = React.useState((function () {
          return "";
        }));
  var match$1 = React.useState((function () {
          return "";
        }));
  var match$2 = React.useState((function () {
          return false;
        }));
  var setAlertIsOpen = match$2[1];
  var match$3 = React.useReducer((function (state, action) {
          switch (action.tag | 0) {
            case /* EditTempContent */0 :
                return {
                        choices: state.choices,
                        tempChoiceContent: action[0]
                      };
            case /* Delete */1 :
                return {
                        choices: state.choices,
                        tempChoiceContent: state.tempChoiceContent
                      };
            case /* Add */2 :
                return {
                        choices: List.append(state.choices, /* :: */[
                              action[0],
                              /* [] */0
                            ]),
                        tempChoiceContent: ""
                      };
            
          }
        }), {
        choices: /* [] */0,
        tempChoiceContent: ""
      });
  var dispatch = match$3[1];
  var match$4 = match$3[0];
  var tempChoiceContent = match$4.tempChoiceContent;
  var handleTempChoiceChange = function ($$event) {
    return Curry._1(dispatch, /* EditTempContent */Block.__(0, [$$event.target.value]));
  };
  var addChoice = function (param) {
    var num = Js_math.random_int(1, 100);
    var choice_id = String(num);
    var choice = {
      id: choice_id,
      content: tempChoiceContent
    };
    return Curry._1(dispatch, /* Add */Block.__(2, [choice]));
  };
  var choicesList = $$Array.map((function (ch) {
          return React.createElement("div", {
                      key: ch.id
                    }, Utils$ReactHooksTemplate.str(ch.content));
        }), $$Array.of_list(match$4.choices));
  return React.createElement("div", undefined, match$2[0] ? React.createElement(Antd.Alert, {
                    closable: true,
                    message: "Card Saved",
                    type: "success",
                    onClose: (function (param) {
                        return Curry._1(setAlertIsOpen, (function (param) {
                                      return false;
                                    }));
                      })
                  }) : null, React.createElement("div", {
                  className: "text-xl font-bold pb-3"
                }, Utils$ReactHooksTemplate.str("Create Card")), React.createElement("div", {
                  className: "mt-3"
                }, React.createElement("label", undefined, Utils$ReactHooksTemplate.str("Question")), React.createElement(ForEditor.default, {
                      value: match[0],
                      onChange: match[1],
                      language: "en",
                      toolbar: ForEditor$ReactHooksTemplate.defaultOption
                    })), React.createElement("div", undefined, React.createElement("div", undefined, Utils$ReactHooksTemplate.str("Choices")), React.createElement("div", {
                      className: "flex"
                    }, React.createElement(Antd.Input, {
                          placeholder: "Create Choice",
                          value: tempChoiceContent,
                          onChange: handleTempChoiceChange
                        }), React.createElement(Antd.Button, {
                          icon: "plus",
                          onClick: addChoice
                        }))), choicesList, React.createElement("div", {
                  className: "mt-3"
                }, React.createElement("label", undefined, Utils$ReactHooksTemplate.str("Rationale")), React.createElement(ForEditor.default, {
                      value: match$1[0],
                      onChange: match$1[1],
                      language: "en",
                      toolbar: ForEditor$ReactHooksTemplate.defaultOption
                    })), React.createElement("button", {
                  className: "rounded px-3 py-2 bg-green-500 text-white rounded-lg",
                  onClick: (function (param) {
                      return Curry._1(setAlertIsOpen, (function (param) {
                                    return true;
                                  }));
                    })
                }, Utils$ReactHooksTemplate.str("Save")));
}

var make = CardsForm;

export {
  make ,
  
}
/* antd Not a pure module */
