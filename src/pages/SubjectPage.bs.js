// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonUrql from "reason-urql/src/ReasonUrql.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Utils$ReactHooksTemplate from "../Utils.bs.js";
import * as Queries$ReactHooksTemplate from "../graphql/Queries.bs.js";

function SubjectPage(Props) {
  var id = Props.id;
  var request = Queries$ReactHooksTemplate.GetSubject[/* make */3](id, /* () */0);
  var match = Curry._4(ReasonUrql.Hooks[/* useQuery */1], request, undefined, undefined, /* () */0);
  var response = match[0][/* response */3];
  if (typeof response === "number") {
    if (response === 0) {
      return Utils$ReactHooksTemplate.str("Fetching");
    } else {
      return Utils$ReactHooksTemplate.str("No Data");
    }
  } else if (response.tag) {
    return Utils$ReactHooksTemplate.str("Error");
  } else {
    var match$1 = response[0].subject;
    if (match$1 !== undefined) {
      var subject = Caml_option.valFromOption(match$1);
      var description = Belt_Option.mapWithDefault(subject.description, "Missing name", (function (txt) {
              return txt;
            }));
      var name = Belt_Option.mapWithDefault(subject.name, "Missing description", (function (txt) {
              return txt;
            }));
      var topicsList = $$Array.map((function (topic) {
              if (topic !== undefined) {
                var topic$1 = Caml_option.valFromOption(topic);
                var match = topic$1.id;
                var match$1 = topic$1.name;
                if (match !== undefined && match$1 !== undefined) {
                  var id = match;
                  return React.createElement("div", undefined, React.createElement("button", {
                                  onClick: (function (param) {
                                      return Utils$ReactHooksTemplate.push("/subjects/" + (String(id) + ""));
                                    })
                                }, React.createElement("div", {
                                      className: "text-indigo-900 cursor-pointer hover:text-purple-600"
                                    }, Utils$ReactHooksTemplate.str(match$1))));
                } else {
                  return null;
                }
              } else {
                return Utils$ReactHooksTemplate.str("No item");
              }
            }), Belt_Option.getWithDefault(subject.topics, /* array */[]));
      return React.createElement("div", undefined, React.createElement("div", {
                      className: "text-4xl font-semibold text-indigo-800"
                    }, Utils$ReactHooksTemplate.str(name)), React.createElement("div", {
                      className: "text-lg font-semibold text-indigo-600"
                    }, Utils$ReactHooksTemplate.str(description)), React.createElement("div", {
                      className: "mt-6"
                    }, React.createElement("div", {
                          className: "text-lg"
                        }, Utils$ReactHooksTemplate.str("Topics:")), React.createElement("div", undefined, topicsList)));
    } else {
      return Utils$ReactHooksTemplate.str("No Subject");
    }
  }
}

var make = SubjectPage;

export {
  make ,
  
}
/* react Not a pure module */
