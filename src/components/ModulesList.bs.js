// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ModuleCard$ReactHooksTemplate from "./ModuleCard.bs.js";

function str(prim) {
  return prim;
}

import styled from "@emotion/styled"
;

import css from "@styled-system/css"
;

var wrapper = (
      styled.div(css({
        fontSize: 3,
        color: 1,
      }))
    );

function ModulesList$Wrapper(Props) {
  var children = Props.children;
  return React.createElement(wrapper, {
              children: children
            });
}

var Wrapper = /* module */[
  /* wrapper */wrapper,
  /* make */ModulesList$Wrapper
];

function ModulesList(Props) {
  var modules = Props.modules;
  var modulesList = $$Array.map((function (module_) {
          if (module_ !== undefined) {
            var module_$1 = Caml_option.valFromOption(module_);
            var match = module_$1.name;
            var match$1 = module_$1.id;
            if (match !== undefined && match$1 !== undefined) {
              var id = match$1;
              return React.createElement(ModuleCard$ReactHooksTemplate.make, {
                          name: match,
                          id: id,
                          key: id
                        });
            } else {
              return "No Name";
            }
          } else {
            return "None";
          }
        }), modules);
  return React.createElement(ModulesList$Wrapper, {
              children: modulesList
            });
}

var make = ModulesList;

export {
  str ,
  Wrapper ,
  make ,
  
}
/*  Not a pure module */
