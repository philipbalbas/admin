// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Antd from "antd";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonUrql from "reason-urql/src/ReasonUrql.bs.js";
import * as Utils$ReactHooksTemplate from "../Utils.bs.js";
import * as Queries$ReactHooksTemplate from "../graphql/Queries.bs.js";

function CategorySelect(Props) {
  var request = Queries$ReactHooksTemplate.ListCategories.make(/* () */0);
  var match = Curry._5(ReasonUrql.Hooks.useQuery, request, undefined, undefined, undefined, /* () */0);
  var response = match[0].response;
  if (typeof response === "number") {
    if (response === /* Fetching */0) {
      return Utils$ReactHooksTemplate.str("Fetching");
    } else {
      return Utils$ReactHooksTemplate.str("No Data");
    }
  } else if (response.tag) {
    return Utils$ReactHooksTemplate.str("Error");
  } else {
    var match$1 = response[0].listCategories;
    if (match$1 !== undefined) {
      var itemsList = $$Array.mapi((function (i, cat) {
              return React.createElement(Antd.Select.Option, {
                          key: String(i),
                          value: cat.id,
                          children: Utils$ReactHooksTemplate.str(cat.name)
                        });
            }), match$1);
      return React.createElement(Antd.Select, {
                  className: "w-40",
                  children: itemsList
                });
    } else {
      return Utils$ReactHooksTemplate.str("No Items");
    }
  }
}

var make = CategorySelect;

export {
  make ,
  
}
/* antd Not a pure module */
