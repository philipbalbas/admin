// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ModuleCard$ReactHooksTemplate from "./ModuleCard.bs.js";

function str(prim) {
  return prim;
}

import styled from "@emotion/styled"
;

import css from "@styled-system/css"
;

var wrapper = (
      styled.div(css({
        fontSize: 3,
        color: 1,
      }))
    );

function List$Wrapper(Props) {
  var children = Props.children;
  return React.createElement(wrapper, {
              children: children
            });
}

var Wrapper = /* module */[
  /* wrapper */wrapper,
  /* make */List$Wrapper
];

function List(Props) {
  var items = Props.items;
  var entity = Props.entity;
  var itemsList = $$Array.map((function (item) {
          if (item !== undefined) {
            var item$1 = Caml_option.valFromOption(item);
            var match = item$1.name;
            var match$1 = item$1.id;
            if (match !== undefined && match$1 !== undefined) {
              var id = match$1;
              return React.createElement(ModuleCard$ReactHooksTemplate.make, {
                          name: match,
                          id: id,
                          entity: entity,
                          key: id
                        });
            } else {
              return "No Name";
            }
          } else {
            return "None";
          }
        }), items);
  return React.createElement(List$Wrapper, {
              children: itemsList
            });
}

var make = List;

export {
  str ,
  Wrapper ,
  make ,
  
}
/*  Not a pure module */
