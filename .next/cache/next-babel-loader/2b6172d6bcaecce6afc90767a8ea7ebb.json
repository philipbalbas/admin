{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as Antd from \"antd\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Link from \"next/link\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as EntityProvider$NextjsDefault from \"../common/EntityProvider.bs.js\";\nimport * as CategoryListQuery_graphql$NextjsDefault from \"../common/__generated__/CategoryListQuery_graphql.bs.js\";\nvar convertResponse = CategoryListQuery_graphql$NextjsDefault.Internal.convertResponse;\nvar convertVariables = CategoryListQuery_graphql$NextjsDefault.Internal.convertVariables;\nvar UseQuery = ReasonRelay.MakeUseQuery({\n  query: CategoryListQuery_graphql$NextjsDefault.node,\n  convertResponse: convertResponse,\n  convertVariables: convertVariables\n});\nvar use = UseQuery.use;\nvar Query_fetch = UseQuery.$$fetch;\nvar Query_fetchPromised = UseQuery.fetchPromised;\nvar Query_preload = UseQuery.preload;\nvar Query_usePreloaded = UseQuery.usePreloaded;\nvar Query = {\n  Operation: undefined,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction CategoryList(Props) {\n  _s();\n\n  var queryData = Curry._6(use, undefined, undefined, undefined, undefined, undefined, undefined);\n\n  EntityProvider$NextjsDefault.useEntity(undefined);\n  var categories = queryData.listCategories;\n  var content = categories !== undefined ? $$Array.mapi(function (i, cat) {\n    var id = cat.id;\n    return React.createElement(Antd.Card, {\n      children: cat.name,\n      extra: React.createElement(Link[\"default\"], {\n        href: \"/[categoryId]\",\n        as: \"/\" + (String(id) + \"\"),\n        children: React.createElement(\"a\", {\n          className: \"cursor-pointer\",\n          onClick: function onClick(param) {\n            console.log(\"Click\");\n          }\n        }, \"Select\")\n      }),\n      hoverable: true,\n      title: cat.name,\n      key: String(i)\n    });\n  }, categories) : React.createElement(Antd.Card, {\n    children: \"Nada\"\n  });\n  return React.createElement(\"div\", {\n    className: \"grid grid-cols-3 gap-4\"\n  }, content);\n}\n\n_s(CategoryList, \"ShdqUcuNhyM+SsKCr1B29AeiPwk=\", false, function () {\n  return [EntityProvider$NextjsDefault.useEntity];\n});\n\n_c = CategoryList;\nvar make = CategoryList;\nexport { Query, make };\n/* UseQuery Not a pure module */\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/components/CategoryList.bs.js"],"names":["Antd","$$Array","Curry","React","Link","ReasonRelay","EntityProvider$NextjsDefault","CategoryListQuery_graphql$NextjsDefault","convertResponse","Internal","convertVariables","UseQuery","MakeUseQuery","query","node","use","Query_fetch","$$fetch","Query_fetchPromised","fetchPromised","Query_preload","preload","Query_usePreloaded","usePreloaded","Query","Operation","undefined","Types","CategoryList","Props","queryData","_6","useEntity","categories","listCategories","content","mapi","i","cat","id","createElement","Card","children","name","extra","href","as","String","className","onClick","param","console","log","hoverable","title","key","make"],"mappings":"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","sourcesContent":["\n\nimport * as Antd from \"antd\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Link from \"next/link\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as EntityProvider$NextjsDefault from \"../common/EntityProvider.bs.js\";\nimport * as CategoryListQuery_graphql$NextjsDefault from \"../common/__generated__/CategoryListQuery_graphql.bs.js\";\n\nvar convertResponse = CategoryListQuery_graphql$NextjsDefault.Internal.convertResponse;\n\nvar convertVariables = CategoryListQuery_graphql$NextjsDefault.Internal.convertVariables;\n\nvar UseQuery = ReasonRelay.MakeUseQuery({\n      query: CategoryListQuery_graphql$NextjsDefault.node,\n      convertResponse: convertResponse,\n      convertVariables: convertVariables\n    });\n\nvar use = UseQuery.use;\n\nvar Query_fetch = UseQuery.$$fetch;\n\nvar Query_fetchPromised = UseQuery.fetchPromised;\n\nvar Query_preload = UseQuery.preload;\n\nvar Query_usePreloaded = UseQuery.usePreloaded;\n\nvar Query = {\n  Operation: undefined,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction CategoryList(Props) {\n  var queryData = Curry._6(use, undefined, undefined, undefined, undefined, undefined, undefined);\n  EntityProvider$NextjsDefault.useEntity(undefined);\n  var categories = queryData.listCategories;\n  var content = categories !== undefined ? $$Array.mapi((function (i, cat) {\n            var id = cat.id;\n            return React.createElement(Antd.Card, {\n                        children: cat.name,\n                        extra: React.createElement(Link.default, {\n                              href: \"/[categoryId]\",\n                              as: \"/\" + (String(id) + \"\"),\n                              children: React.createElement(\"a\", {\n                                    className: \"cursor-pointer\",\n                                    onClick: (function (param) {\n                                        console.log(\"Click\");\n                                        \n                                      })\n                                  }, \"Select\")\n                            }),\n                        hoverable: true,\n                        title: cat.name,\n                        key: String(i)\n                      });\n          }), categories) : React.createElement(Antd.Card, {\n          children: \"Nada\"\n        });\n  return React.createElement(\"div\", {\n              className: \"grid grid-cols-3 gap-4\"\n            }, content);\n}\n\nvar make = CategoryList;\n\nexport {\n  Query ,\n  make ,\n  \n}\n/* UseQuery Not a pure module */\n"]},"metadata":{},"sourceType":"module"}