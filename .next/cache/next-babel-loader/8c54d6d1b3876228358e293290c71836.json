{"ast":null,"code":"import * as Antd from \"antd\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as CategorySelectQuery_graphql$NextjsDefault from \"../common/__generated__/CategorySelectQuery_graphql.bs.js\";\nvar convertResponse = CategorySelectQuery_graphql$NextjsDefault.Internal.convertResponse;\nvar convertVariables = CategorySelectQuery_graphql$NextjsDefault.Internal.convertVariables;\nvar UseQuery = ReasonRelay.MakeUseQuery({\n  query: CategorySelectQuery_graphql$NextjsDefault.node,\n  convertResponse: convertResponse,\n  convertVariables: convertVariables\n});\nvar use = UseQuery.use;\nvar Query_fetch = UseQuery.$$fetch;\nvar Query_fetchPromised = UseQuery.fetchPromised;\nvar Query_preload = UseQuery.preload;\nvar Query_usePreloaded = UseQuery.usePreloaded;\nvar Query = {\n  Operation: undefined,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction CategorySelect(Props) {\n  var queryData = Curry._6(use, undefined, undefined, undefined, undefined, undefined, undefined);\n\n  var categories = queryData.listCategories;\n  var content = categories !== undefined ? $$Array.mapi(function (i, cat) {\n    return React.createElement(Antd.Select.Option, {\n      key: String(i),\n      value: cat.id,\n      children: cat.name\n    });\n  }, categories) : React.createElement(Antd.Select.Option, {\n    key: \"0\",\n    value: \"0\",\n    children: \"Nada\"\n  });\n  return React.createElement(Antd.Select, {\n    className: \"w-40\",\n    children: content\n  });\n}\n\nvar make = CategorySelect;\nexport { Query, make };\n/* UseQuery Not a pure module */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/components/CategorySelect.bs.js"],"names":["Antd","$$Array","Curry","React","ReasonRelay","CategorySelectQuery_graphql$NextjsDefault","convertResponse","Internal","convertVariables","UseQuery","MakeUseQuery","query","node","use","Query_fetch","$$fetch","Query_fetchPromised","fetchPromised","Query_preload","preload","Query_usePreloaded","usePreloaded","Query","Operation","undefined","Types","CategorySelect","Props","queryData","_6","categories","listCategories","content","mapi","i","cat","createElement","Select","Option","key","String","value","id","children","name","className","make"],"mappings":"AAEA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,8BAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;AACA,OAAO,KAAKC,yCAAZ,MAA2D,2DAA3D;AAEA,IAAIC,eAAe,GAAGD,yCAAyC,CAACE,QAA1C,CAAmDD,eAAzE;AAEA,IAAIE,gBAAgB,GAAGH,yCAAyC,CAACE,QAA1C,CAAmDC,gBAA1E;AAEA,IAAIC,QAAQ,GAAGL,WAAW,CAACM,YAAZ,CAAyB;AAClCC,EAAAA,KAAK,EAAEN,yCAAyC,CAACO,IADf;AAElCN,EAAAA,eAAe,EAAEA,eAFiB;AAGlCE,EAAAA,gBAAgB,EAAEA;AAHgB,CAAzB,CAAf;AAMA,IAAIK,GAAG,GAAGJ,QAAQ,CAACI,GAAnB;AAEA,IAAIC,WAAW,GAAGL,QAAQ,CAACM,OAA3B;AAEA,IAAIC,mBAAmB,GAAGP,QAAQ,CAACQ,aAAnC;AAEA,IAAIC,aAAa,GAAGT,QAAQ,CAACU,OAA7B;AAEA,IAAIC,kBAAkB,GAAGX,QAAQ,CAACY,YAAlC;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAEC,SADD;AAEVC,EAAAA,KAAK,EAAED,SAFG;AAGVf,EAAAA,QAAQ,EAAEA,QAHA;AAIVI,EAAAA,GAAG,EAAEA,GAJK;AAKVE,EAAAA,OAAO,EAAED,WALC;AAMVG,EAAAA,aAAa,EAAED,mBANL;AAOVG,EAAAA,OAAO,EAAED,aAPC;AAQVG,EAAAA,YAAY,EAAED;AARJ,CAAZ;;AAWA,SAASM,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,SAAS,GAAG1B,KAAK,CAAC2B,EAAN,CAAShB,GAAT,EAAcW,SAAd,EAAyBA,SAAzB,EAAoCA,SAApC,EAA+CA,SAA/C,EAA0DA,SAA1D,EAAqEA,SAArE,CAAhB;;AACA,MAAIM,UAAU,GAAGF,SAAS,CAACG,cAA3B;AACA,MAAIC,OAAO,GAAGF,UAAU,KAAKN,SAAf,GAA2BvB,OAAO,CAACgC,IAAR,CAAc,UAAUC,CAAV,EAAaC,GAAb,EAAkB;AAC/D,WAAOhC,KAAK,CAACiC,aAAN,CAAoBpC,IAAI,CAACqC,MAAL,CAAYC,MAAhC,EAAwC;AACnCC,MAAAA,GAAG,EAAEC,MAAM,CAACN,CAAD,CADwB;AAEnCO,MAAAA,KAAK,EAAEN,GAAG,CAACO,EAFwB;AAGnCC,MAAAA,QAAQ,EAAER,GAAG,CAACS;AAHqB,KAAxC,CAAP;AAKD,GANgC,EAM7Bd,UAN6B,CAA3B,GAMY3B,KAAK,CAACiC,aAAN,CAAoBpC,IAAI,CAACqC,MAAL,CAAYC,MAAhC,EAAwC;AAC1DC,IAAAA,GAAG,EAAE,GADqD;AAE1DE,IAAAA,KAAK,EAAE,GAFmD;AAG1DE,IAAAA,QAAQ,EAAE;AAHgD,GAAxC,CAN1B;AAWA,SAAOxC,KAAK,CAACiC,aAAN,CAAoBpC,IAAI,CAACqC,MAAzB,EAAiC;AAC5BQ,IAAAA,SAAS,EAAE,MADiB;AAE5BF,IAAAA,QAAQ,EAAEX;AAFkB,GAAjC,CAAP;AAID;;AAED,IAAIc,IAAI,GAAGpB,cAAX;AAEA,SACEJ,KADF,EAEEwB,IAFF;AAKA","sourcesContent":["\n\nimport * as Antd from \"antd\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as CategorySelectQuery_graphql$NextjsDefault from \"../common/__generated__/CategorySelectQuery_graphql.bs.js\";\n\nvar convertResponse = CategorySelectQuery_graphql$NextjsDefault.Internal.convertResponse;\n\nvar convertVariables = CategorySelectQuery_graphql$NextjsDefault.Internal.convertVariables;\n\nvar UseQuery = ReasonRelay.MakeUseQuery({\n      query: CategorySelectQuery_graphql$NextjsDefault.node,\n      convertResponse: convertResponse,\n      convertVariables: convertVariables\n    });\n\nvar use = UseQuery.use;\n\nvar Query_fetch = UseQuery.$$fetch;\n\nvar Query_fetchPromised = UseQuery.fetchPromised;\n\nvar Query_preload = UseQuery.preload;\n\nvar Query_usePreloaded = UseQuery.usePreloaded;\n\nvar Query = {\n  Operation: undefined,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction CategorySelect(Props) {\n  var queryData = Curry._6(use, undefined, undefined, undefined, undefined, undefined, undefined);\n  var categories = queryData.listCategories;\n  var content = categories !== undefined ? $$Array.mapi((function (i, cat) {\n            return React.createElement(Antd.Select.Option, {\n                        key: String(i),\n                        value: cat.id,\n                        children: cat.name\n                      });\n          }), categories) : React.createElement(Antd.Select.Option, {\n          key: \"0\",\n          value: \"0\",\n          children: \"Nada\"\n        });\n  return React.createElement(Antd.Select, {\n              className: \"w-40\",\n              children: content\n            });\n}\n\nvar make = CategorySelect;\n\nexport {\n  Query ,\n  make ,\n  \n}\n/* UseQuery Not a pure module */\n"]},"metadata":{},"sourceType":"module"}