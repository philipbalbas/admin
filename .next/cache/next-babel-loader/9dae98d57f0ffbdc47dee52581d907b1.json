{"ast":null,"code":"import * as Curry from \"./curry.js\";\nimport * as Caml_io from \"./caml_io.js\";\nimport * as Caml_sys from \"./caml_sys.js\";\nimport * as Caml_bytes from \"./caml_bytes.js\";\nimport * as Caml_format from \"./caml_format.js\";\nimport * as Caml_string from \"./caml_string.js\";\nimport * as Caml_exceptions from \"./caml_exceptions.js\";\nimport * as Caml_js_exceptions from \"./caml_js_exceptions.js\";\nimport * as Caml_external_polyfill from \"./caml_external_polyfill.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\nimport * as CamlinternalFormatBasics from \"./camlinternalFormatBasics.js\";\n\nfunction failwith(s) {\n  throw [Caml_builtin_exceptions.failure, s];\n}\n\nfunction invalid_arg(s) {\n  throw [Caml_builtin_exceptions.invalid_argument, s];\n}\n\nvar Exit = Caml_exceptions.create(\"Pervasives.Exit\");\n\nfunction abs(x) {\n  if (x >= 0) {\n    return x;\n  } else {\n    return -x | 0;\n  }\n}\n\nfunction lnot(x) {\n  return x ^ -1;\n}\n\nvar min_int = -2147483648;\n\nfunction classify_float(x) {\n  if (isFinite(x)) {\n    if (Math.abs(x) >= 2.22507385850720138e-308) {\n      return (\n        /* FP_normal */\n        0\n      );\n    } else if (x !== 0) {\n      return (\n        /* FP_subnormal */\n        1\n      );\n    } else {\n      return (\n        /* FP_zero */\n        2\n      );\n    }\n  } else if (isNaN(x)) {\n    return (\n      /* FP_nan */\n      4\n    );\n  } else {\n    return (\n      /* FP_infinite */\n      3\n    );\n  }\n}\n\nfunction char_of_int(n) {\n  if (n < 0 || n > 255) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"char_of_int\"];\n  }\n\n  return n;\n}\n\nfunction string_of_bool(b) {\n  if (b) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction bool_of_string(param) {\n  switch (param) {\n    case \"false\":\n      return false;\n\n    case \"true\":\n      return true;\n\n    default:\n      throw [Caml_builtin_exceptions.invalid_argument, \"bool_of_string\"];\n  }\n}\n\nfunction bool_of_string_opt(param) {\n  switch (param) {\n    case \"false\":\n      return false;\n\n    case \"true\":\n      return true;\n\n    default:\n      return;\n  }\n}\n\nfunction int_of_string_opt(s) {\n  try {\n    return Caml_format.caml_int_of_string(s);\n  } catch (raw_exn) {\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n\n    if (exn[0] === Caml_builtin_exceptions.failure) {\n      return;\n    }\n\n    throw exn;\n  }\n}\n\nfunction valid_float_lexem(s) {\n  var l = s.length;\n  var _i = 0;\n\n  while (true) {\n    var i = _i;\n\n    if (i >= l) {\n      return s + \".\";\n    }\n\n    var match = Caml_string.get(s, i);\n\n    if (match >= 48) {\n      if (match >= 58) {\n        return s;\n      }\n\n      _i = i + 1 | 0;\n      continue;\n    }\n\n    if (match !== 45) {\n      return s;\n    }\n\n    _i = i + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction string_of_float(f) {\n  return valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f));\n}\n\nfunction float_of_string_opt(s) {\n  try {\n    return Caml_format.caml_float_of_string(s);\n  } catch (raw_exn) {\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n\n    if (exn[0] === Caml_builtin_exceptions.failure) {\n      return;\n    }\n\n    throw exn;\n  }\n}\n\nfunction $at(l1, l2) {\n  if (l1) {\n    return (\n      /* :: */\n      [l1[0], $at(l1[1], l2)]\n    );\n  } else {\n    return l2;\n  }\n}\n\nvar stdin = Caml_io.stdin;\nvar stdout = Caml_io.stdout;\nvar stderr = Caml_io.stderr;\n\nfunction open_out_gen(mode, perm, name) {\n  var c = Caml_external_polyfill.resolve(\"caml_ml_open_descriptor_out\")(Caml_external_polyfill.resolve(\"caml_sys_open\")(name, mode, perm));\n  Caml_external_polyfill.resolve(\"caml_ml_set_channel_name\")(c, name);\n  return c;\n}\n\nfunction open_out(name) {\n  return open_out_gen(\n  /* :: */\n  [\n  /* Open_wronly */\n  1,\n  /* :: */\n  [\n  /* Open_creat */\n  3,\n  /* :: */\n  [\n  /* Open_trunc */\n  4,\n  /* :: */\n  [\n  /* Open_text */\n  7,\n  /* [] */\n  0]]]], 438, name);\n}\n\nfunction open_out_bin(name) {\n  return open_out_gen(\n  /* :: */\n  [\n  /* Open_wronly */\n  1,\n  /* :: */\n  [\n  /* Open_creat */\n  3,\n  /* :: */\n  [\n  /* Open_trunc */\n  4,\n  /* :: */\n  [\n  /* Open_binary */\n  6,\n  /* [] */\n  0]]]], 438, name);\n}\n\nfunction flush_all(param) {\n  var _param = Caml_io.caml_ml_out_channels_list(undefined);\n\n  while (true) {\n    var param$1 = _param;\n\n    if (!param$1) {\n      return;\n    }\n\n    try {\n      Caml_io.caml_ml_flush(param$1[0]);\n    } catch (raw_exn) {\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n\n      if (exn[0] !== Caml_builtin_exceptions.sys_error) {\n        throw exn;\n      }\n    }\n\n    _param = param$1[1];\n    continue;\n  }\n\n  ;\n}\n\nfunction output_bytes(oc, s) {\n  return Caml_external_polyfill.resolve(\"caml_ml_output_bytes\")(oc, s, 0, s.length);\n}\n\nfunction output_string(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"output\"];\n  }\n\n  return Caml_external_polyfill.resolve(\"caml_ml_output_bytes\")(oc, s, ofs, len);\n}\n\nfunction output_substring(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"output_substring\"];\n  }\n\n  return Caml_io.caml_ml_output(oc, s, ofs, len);\n}\n\nfunction output_value(chan, v) {\n  return Caml_external_polyfill.resolve(\"caml_output_value\")(chan, v,\n  /* [] */\n  0);\n}\n\nfunction close_out(oc) {\n  Caml_io.caml_ml_flush(oc);\n  return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(oc);\n}\n\nfunction close_out_noerr(oc) {\n  try {\n    Caml_io.caml_ml_flush(oc);\n  } catch (exn) {}\n\n  try {\n    return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(oc);\n  } catch (exn$1) {\n    return;\n  }\n}\n\nfunction open_in_gen(mode, perm, name) {\n  var c = Caml_external_polyfill.resolve(\"caml_ml_open_descriptor_in\")(Caml_external_polyfill.resolve(\"caml_sys_open\")(name, mode, perm));\n  Caml_external_polyfill.resolve(\"caml_ml_set_channel_name\")(c, name);\n  return c;\n}\n\nfunction open_in(name) {\n  return open_in_gen(\n  /* :: */\n  [\n  /* Open_rdonly */\n  0,\n  /* :: */\n  [\n  /* Open_text */\n  7,\n  /* [] */\n  0]], 0, name);\n}\n\nfunction open_in_bin(name) {\n  return open_in_gen(\n  /* :: */\n  [\n  /* Open_rdonly */\n  0,\n  /* :: */\n  [\n  /* Open_binary */\n  6,\n  /* [] */\n  0]], 0, name);\n}\n\nfunction input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"input\"];\n  }\n\n  return Caml_external_polyfill.resolve(\"caml_ml_input\")(ic, s, ofs, len);\n}\n\nfunction unsafe_really_input(ic, s, _ofs, _len) {\n  while (true) {\n    var len = _len;\n    var ofs = _ofs;\n\n    if (len <= 0) {\n      return;\n    }\n\n    var r = Caml_external_polyfill.resolve(\"caml_ml_input\")(ic, s, ofs, len);\n\n    if (r === 0) {\n      throw Caml_builtin_exceptions.end_of_file;\n    }\n\n    _len = len - r | 0;\n    _ofs = ofs + r | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction really_input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"really_input\"];\n  }\n\n  return unsafe_really_input(ic, s, ofs, len);\n}\n\nfunction really_input_string(ic, len) {\n  var s = Caml_bytes.caml_create_bytes(len);\n  really_input(ic, s, 0, len);\n  return Caml_bytes.bytes_to_string(s);\n}\n\nfunction input_line(chan) {\n  var build_result = function (buf, _pos, _param) {\n    while (true) {\n      var param = _param;\n      var pos = _pos;\n\n      if (!param) {\n        return buf;\n      }\n\n      var hd = param[0];\n      var len = hd.length;\n      Caml_bytes.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);\n      _param = param[1];\n      _pos = pos - len | 0;\n      continue;\n    }\n\n    ;\n  };\n\n  var scan = function (_accu, _len) {\n    while (true) {\n      var len = _len;\n      var accu = _accu;\n      var n = Caml_external_polyfill.resolve(\"caml_ml_input_scan_line\")(chan);\n\n      if (n === 0) {\n        if (accu) {\n          return build_result(Caml_bytes.caml_create_bytes(len), len, accu);\n        }\n\n        throw Caml_builtin_exceptions.end_of_file;\n      }\n\n      if (n > 0) {\n        var res = Caml_bytes.caml_create_bytes(n - 1 | 0);\n        Caml_external_polyfill.resolve(\"caml_ml_input\")(chan, res, 0, n - 1 | 0);\n        Caml_external_polyfill.resolve(\"caml_ml_input_char\")(chan);\n\n        if (!accu) {\n          return res;\n        }\n\n        var len$1 = (len + n | 0) - 1 | 0;\n        return build_result(Caml_bytes.caml_create_bytes(len$1), len$1,\n        /* :: */\n        [res, accu]);\n      }\n\n      var beg = Caml_bytes.caml_create_bytes(-n | 0);\n      Caml_external_polyfill.resolve(\"caml_ml_input\")(chan, beg, 0, -n | 0);\n      _len = len - n | 0;\n      _accu =\n      /* :: */\n      [beg, accu];\n      continue;\n    }\n\n    ;\n  };\n\n  return Caml_bytes.bytes_to_string(scan(\n  /* [] */\n  0, 0));\n}\n\nfunction close_in_noerr(ic) {\n  try {\n    return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(ic);\n  } catch (exn) {\n    return;\n  }\n}\n\nfunction print_char(c) {\n  return Caml_io.caml_ml_output_char(stdout, c);\n}\n\nfunction print_string(s) {\n  return output_string(stdout, s);\n}\n\nfunction print_bytes(s) {\n  return output_bytes(stdout, s);\n}\n\nfunction print_int(i) {\n  return output_string(stdout, String(i));\n}\n\nfunction print_float(f) {\n  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction print_newline(param) {\n  Caml_io.caml_ml_output_char(stdout,\n  /* \"\\n\" */\n  10);\n  return Caml_io.caml_ml_flush(stdout);\n}\n\nfunction prerr_char(c) {\n  return Caml_io.caml_ml_output_char(stderr, c);\n}\n\nfunction prerr_string(s) {\n  return output_string(stderr, s);\n}\n\nfunction prerr_bytes(s) {\n  return output_bytes(stderr, s);\n}\n\nfunction prerr_int(i) {\n  return output_string(stderr, String(i));\n}\n\nfunction prerr_float(f) {\n  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction prerr_newline(param) {\n  Caml_io.caml_ml_output_char(stderr,\n  /* \"\\n\" */\n  10);\n  return Caml_io.caml_ml_flush(stderr);\n}\n\nfunction read_line(param) {\n  Caml_io.caml_ml_flush(stdout);\n  return input_line(stdin);\n}\n\nfunction read_int(param) {\n  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_int_opt(param) {\n  return int_of_string_opt((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float(param) {\n  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float_opt(param) {\n  return float_of_string_opt((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction string_of_format(param) {\n  return param[1];\n}\n\nfunction $caret$caret(param, param$1) {\n  return (\n    /* Format */\n    [CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]), param[1] + (\"%,\" + param$1[1])]\n  );\n}\n\nvar exit_function = {\n  contents: flush_all\n};\n\nfunction at_exit(f) {\n  var g = exit_function.contents;\n\n  exit_function.contents = function (param) {\n    Curry._1(f, undefined);\n\n    return Curry._1(g, undefined);\n  };\n}\n\nfunction do_at_exit(param) {\n  return Curry._1(exit_function.contents, undefined);\n}\n\nfunction exit(retcode) {\n  do_at_exit(undefined);\n  return Caml_sys.caml_sys_exit(retcode);\n}\n\nvar max_int = 2147483647;\nvar infinity = Infinity;\nvar neg_infinity = -Infinity;\nvar max_float = 1.79769313486231571e+308;\nvar min_float = 2.22507385850720138e-308;\nvar epsilon_float = 2.22044604925031308e-16;\nvar flush = Caml_io.caml_ml_flush;\nvar output_char = Caml_io.caml_ml_output_char;\nvar output_byte = Caml_io.caml_ml_output_char;\n\nfunction output_binary_int(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_output_int\")(prim, prim$1);\n}\n\nfunction seek_out(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_out\")(prim, prim$1);\n}\n\nfunction pos_out(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_out\")(prim);\n}\n\nfunction out_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size\")(prim);\n}\n\nfunction set_binary_mode_out(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_set_binary_mode\")(prim, prim$1);\n}\n\nfunction input_char(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_input_char\")(prim);\n}\n\nfunction input_byte(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_input_char\")(prim);\n}\n\nfunction input_binary_int(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_input_int\")(prim);\n}\n\nfunction input_value(prim) {\n  return Caml_external_polyfill.resolve(\"caml_input_value\")(prim);\n}\n\nfunction seek_in(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_in\")(prim, prim$1);\n}\n\nfunction pos_in(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_in\")(prim);\n}\n\nfunction in_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size\")(prim);\n}\n\nfunction close_in(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(prim);\n}\n\nfunction set_binary_mode_in(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_set_binary_mode\")(prim, prim$1);\n}\n\nfunction LargeFile_seek_out(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_out_64\")(prim, prim$1);\n}\n\nfunction LargeFile_pos_out(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_out_64\")(prim);\n}\n\nfunction LargeFile_out_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size_64\")(prim);\n}\n\nfunction LargeFile_seek_in(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_in_64\")(prim, prim$1);\n}\n\nfunction LargeFile_pos_in(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_in_64\")(prim);\n}\n\nfunction LargeFile_in_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size_64\")(prim);\n}\n\nvar LargeFile = {\n  seek_out: LargeFile_seek_out,\n  pos_out: LargeFile_pos_out,\n  out_channel_length: LargeFile_out_channel_length,\n  seek_in: LargeFile_seek_in,\n  pos_in: LargeFile_pos_in,\n  in_channel_length: LargeFile_in_channel_length\n};\nexport { invalid_arg, failwith, Exit, abs, max_int, min_int, lnot, infinity, neg_infinity, max_float, min_float, epsilon_float, classify_float, char_of_int, string_of_bool, bool_of_string, bool_of_string_opt, int_of_string_opt, string_of_float, float_of_string_opt, $at, stdin, stdout, stderr, print_char, print_string, print_bytes, print_int, print_float, print_newline, prerr_char, prerr_string, prerr_bytes, prerr_int, prerr_float, prerr_newline, read_line, read_int, read_int_opt, read_float, read_float_opt, open_out, open_out_bin, open_out_gen, flush, flush_all, output_char, output_string, output_bytes, output, output_substring, output_byte, output_binary_int, output_value, seek_out, pos_out, out_channel_length, close_out, close_out_noerr, set_binary_mode_out, open_in, open_in_bin, open_in_gen, input_char, input_line, input, really_input, really_input_string, input_byte, input_binary_int, input_value, seek_in, pos_in, in_channel_length, close_in, close_in_noerr, set_binary_mode_in, LargeFile, string_of_format, $caret$caret, exit, at_exit, valid_float_lexem, unsafe_really_input, do_at_exit };\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/es6/pervasives.js"],"names":["Curry","Caml_io","Caml_sys","Caml_bytes","Caml_format","Caml_string","Caml_exceptions","Caml_js_exceptions","Caml_external_polyfill","Caml_builtin_exceptions","CamlinternalFormatBasics","failwith","s","failure","invalid_arg","invalid_argument","Exit","create","abs","x","lnot","min_int","classify_float","isFinite","Math","isNaN","char_of_int","n","string_of_bool","b","bool_of_string","param","bool_of_string_opt","int_of_string_opt","caml_int_of_string","raw_exn","exn","internalToOCamlException","valid_float_lexem","l","length","_i","i","match","get","string_of_float","f","caml_format_float","float_of_string_opt","caml_float_of_string","$at","l1","l2","stdin","stdout","stderr","open_out_gen","mode","perm","name","c","resolve","open_out","open_out_bin","flush_all","_param","caml_ml_out_channels_list","undefined","param$1","caml_ml_flush","sys_error","output_bytes","oc","output_string","caml_ml_output","output","ofs","len","output_substring","output_value","chan","v","close_out","close_out_noerr","exn$1","open_in_gen","open_in","open_in_bin","input","ic","unsafe_really_input","_ofs","_len","r","end_of_file","really_input","really_input_string","caml_create_bytes","bytes_to_string","input_line","build_result","buf","_pos","pos","hd","caml_blit_bytes","scan","_accu","accu","res","len$1","beg","close_in_noerr","print_char","caml_ml_output_char","print_string","print_bytes","print_int","String","print_float","print_newline","prerr_char","prerr_string","prerr_bytes","prerr_int","prerr_float","prerr_newline","read_line","read_int","read_int_opt","read_float","read_float_opt","string_of_format","$caret$caret","concat_fmt","exit_function","contents","at_exit","g","_1","do_at_exit","exit","retcode","caml_sys_exit","max_int","infinity","Infinity","neg_infinity","max_float","min_float","epsilon_float","flush","output_char","output_byte","output_binary_int","prim","prim$1","seek_out","pos_out","out_channel_length","set_binary_mode_out","input_char","input_byte","input_binary_int","input_value","seek_in","pos_in","in_channel_length","close_in","set_binary_mode_in","LargeFile_seek_out","LargeFile_pos_out","LargeFile_out_channel_length","LargeFile_seek_in","LargeFile_pos_in","LargeFile_in_channel_length","LargeFile"],"mappings":"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","sourcesContent":["\n\nimport * as Curry from \"./curry.js\";\nimport * as Caml_io from \"./caml_io.js\";\nimport * as Caml_sys from \"./caml_sys.js\";\nimport * as Caml_bytes from \"./caml_bytes.js\";\nimport * as Caml_format from \"./caml_format.js\";\nimport * as Caml_string from \"./caml_string.js\";\nimport * as Caml_exceptions from \"./caml_exceptions.js\";\nimport * as Caml_js_exceptions from \"./caml_js_exceptions.js\";\nimport * as Caml_external_polyfill from \"./caml_external_polyfill.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\nimport * as CamlinternalFormatBasics from \"./camlinternalFormatBasics.js\";\n\nfunction failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction invalid_arg(s) {\n  throw [\n        Caml_builtin_exceptions.invalid_argument,\n        s\n      ];\n}\n\nvar Exit = Caml_exceptions.create(\"Pervasives.Exit\");\n\nfunction abs(x) {\n  if (x >= 0) {\n    return x;\n  } else {\n    return -x | 0;\n  }\n}\n\nfunction lnot(x) {\n  return x ^ -1;\n}\n\nvar min_int = -2147483648;\n\nfunction classify_float(x) {\n  if (isFinite(x)) {\n    if (Math.abs(x) >= 2.22507385850720138e-308) {\n      return /* FP_normal */0;\n    } else if (x !== 0) {\n      return /* FP_subnormal */1;\n    } else {\n      return /* FP_zero */2;\n    }\n  } else if (isNaN(x)) {\n    return /* FP_nan */4;\n  } else {\n    return /* FP_infinite */3;\n  }\n}\n\nfunction char_of_int(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"char_of_int\"\n        ];\n  }\n  return n;\n}\n\nfunction string_of_bool(b) {\n  if (b) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction bool_of_string(param) {\n  switch (param) {\n    case \"false\" :\n        return false;\n    case \"true\" :\n        return true;\n    default:\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"bool_of_string\"\n          ];\n  }\n}\n\nfunction bool_of_string_opt(param) {\n  switch (param) {\n    case \"false\" :\n        return false;\n    case \"true\" :\n        return true;\n    default:\n      return ;\n  }\n}\n\nfunction int_of_string_opt(s) {\n  try {\n    return Caml_format.caml_int_of_string(s);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn[0] === Caml_builtin_exceptions.failure) {\n      return ;\n    }\n    throw exn;\n  }\n}\n\nfunction valid_float_lexem(s) {\n  var l = s.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= l) {\n      return s + \".\";\n    }\n    var match = Caml_string.get(s, i);\n    if (match >= 48) {\n      if (match >= 58) {\n        return s;\n      }\n      _i = i + 1 | 0;\n      continue ;\n    }\n    if (match !== 45) {\n      return s;\n    }\n    _i = i + 1 | 0;\n    continue ;\n  };\n}\n\nfunction string_of_float(f) {\n  return valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f));\n}\n\nfunction float_of_string_opt(s) {\n  try {\n    return Caml_format.caml_float_of_string(s);\n  }\n  catch (raw_exn){\n    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n    if (exn[0] === Caml_builtin_exceptions.failure) {\n      return ;\n    }\n    throw exn;\n  }\n}\n\nfunction $at(l1, l2) {\n  if (l1) {\n    return /* :: */[\n            l1[0],\n            $at(l1[1], l2)\n          ];\n  } else {\n    return l2;\n  }\n}\n\nvar stdin = Caml_io.stdin;\n\nvar stdout = Caml_io.stdout;\n\nvar stderr = Caml_io.stderr;\n\nfunction open_out_gen(mode, perm, name) {\n  var c = Caml_external_polyfill.resolve(\"caml_ml_open_descriptor_out\")(Caml_external_polyfill.resolve(\"caml_sys_open\")(name, mode, perm));\n  Caml_external_polyfill.resolve(\"caml_ml_set_channel_name\")(c, name);\n  return c;\n}\n\nfunction open_out(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_text */7,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction open_out_bin(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_binary */6,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction flush_all(param) {\n  var _param = Caml_io.caml_ml_out_channels_list(undefined);\n  while(true) {\n    var param$1 = _param;\n    if (!param$1) {\n      return ;\n    }\n    try {\n      Caml_io.caml_ml_flush(param$1[0]);\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] !== Caml_builtin_exceptions.sys_error) {\n        throw exn;\n      }\n      \n    }\n    _param = param$1[1];\n    continue ;\n  };\n}\n\nfunction output_bytes(oc, s) {\n  return Caml_external_polyfill.resolve(\"caml_ml_output_bytes\")(oc, s, 0, s.length);\n}\n\nfunction output_string(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output\"\n        ];\n  }\n  return Caml_external_polyfill.resolve(\"caml_ml_output_bytes\")(oc, s, ofs, len);\n}\n\nfunction output_substring(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output_substring\"\n        ];\n  }\n  return Caml_io.caml_ml_output(oc, s, ofs, len);\n}\n\nfunction output_value(chan, v) {\n  return Caml_external_polyfill.resolve(\"caml_output_value\")(chan, v, /* [] */0);\n}\n\nfunction close_out(oc) {\n  Caml_io.caml_ml_flush(oc);\n  return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(oc);\n}\n\nfunction close_out_noerr(oc) {\n  try {\n    Caml_io.caml_ml_flush(oc);\n  }\n  catch (exn){\n    \n  }\n  try {\n    return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(oc);\n  }\n  catch (exn$1){\n    return ;\n  }\n}\n\nfunction open_in_gen(mode, perm, name) {\n  var c = Caml_external_polyfill.resolve(\"caml_ml_open_descriptor_in\")(Caml_external_polyfill.resolve(\"caml_sys_open\")(name, mode, perm));\n  Caml_external_polyfill.resolve(\"caml_ml_set_channel_name\")(c, name);\n  return c;\n}\n\nfunction open_in(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_text */7,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction open_in_bin(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_binary */6,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"input\"\n        ];\n  }\n  return Caml_external_polyfill.resolve(\"caml_ml_input\")(ic, s, ofs, len);\n}\n\nfunction unsafe_really_input(ic, s, _ofs, _len) {\n  while(true) {\n    var len = _len;\n    var ofs = _ofs;\n    if (len <= 0) {\n      return ;\n    }\n    var r = Caml_external_polyfill.resolve(\"caml_ml_input\")(ic, s, ofs, len);\n    if (r === 0) {\n      throw Caml_builtin_exceptions.end_of_file;\n    }\n    _len = len - r | 0;\n    _ofs = ofs + r | 0;\n    continue ;\n  };\n}\n\nfunction really_input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"really_input\"\n        ];\n  }\n  return unsafe_really_input(ic, s, ofs, len);\n}\n\nfunction really_input_string(ic, len) {\n  var s = Caml_bytes.caml_create_bytes(len);\n  really_input(ic, s, 0, len);\n  return Caml_bytes.bytes_to_string(s);\n}\n\nfunction input_line(chan) {\n  var build_result = function (buf, _pos, _param) {\n    while(true) {\n      var param = _param;\n      var pos = _pos;\n      if (!param) {\n        return buf;\n      }\n      var hd = param[0];\n      var len = hd.length;\n      Caml_bytes.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);\n      _param = param[1];\n      _pos = pos - len | 0;\n      continue ;\n    };\n  };\n  var scan = function (_accu, _len) {\n    while(true) {\n      var len = _len;\n      var accu = _accu;\n      var n = Caml_external_polyfill.resolve(\"caml_ml_input_scan_line\")(chan);\n      if (n === 0) {\n        if (accu) {\n          return build_result(Caml_bytes.caml_create_bytes(len), len, accu);\n        }\n        throw Caml_builtin_exceptions.end_of_file;\n      }\n      if (n > 0) {\n        var res = Caml_bytes.caml_create_bytes(n - 1 | 0);\n        Caml_external_polyfill.resolve(\"caml_ml_input\")(chan, res, 0, n - 1 | 0);\n        Caml_external_polyfill.resolve(\"caml_ml_input_char\")(chan);\n        if (!accu) {\n          return res;\n        }\n        var len$1 = (len + n | 0) - 1 | 0;\n        return build_result(Caml_bytes.caml_create_bytes(len$1), len$1, /* :: */[\n                    res,\n                    accu\n                  ]);\n      }\n      var beg = Caml_bytes.caml_create_bytes(-n | 0);\n      Caml_external_polyfill.resolve(\"caml_ml_input\")(chan, beg, 0, -n | 0);\n      _len = len - n | 0;\n      _accu = /* :: */[\n        beg,\n        accu\n      ];\n      continue ;\n    };\n  };\n  return Caml_bytes.bytes_to_string(scan(/* [] */0, 0));\n}\n\nfunction close_in_noerr(ic) {\n  try {\n    return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(ic);\n  }\n  catch (exn){\n    return ;\n  }\n}\n\nfunction print_char(c) {\n  return Caml_io.caml_ml_output_char(stdout, c);\n}\n\nfunction print_string(s) {\n  return output_string(stdout, s);\n}\n\nfunction print_bytes(s) {\n  return output_bytes(stdout, s);\n}\n\nfunction print_int(i) {\n  return output_string(stdout, String(i));\n}\n\nfunction print_float(f) {\n  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction print_newline(param) {\n  Caml_io.caml_ml_output_char(stdout, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stdout);\n}\n\nfunction prerr_char(c) {\n  return Caml_io.caml_ml_output_char(stderr, c);\n}\n\nfunction prerr_string(s) {\n  return output_string(stderr, s);\n}\n\nfunction prerr_bytes(s) {\n  return output_bytes(stderr, s);\n}\n\nfunction prerr_int(i) {\n  return output_string(stderr, String(i));\n}\n\nfunction prerr_float(f) {\n  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction prerr_newline(param) {\n  Caml_io.caml_ml_output_char(stderr, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stderr);\n}\n\nfunction read_line(param) {\n  Caml_io.caml_ml_flush(stdout);\n  return input_line(stdin);\n}\n\nfunction read_int(param) {\n  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_int_opt(param) {\n  return int_of_string_opt((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float(param) {\n  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float_opt(param) {\n  return float_of_string_opt((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction string_of_format(param) {\n  return param[1];\n}\n\nfunction $caret$caret(param, param$1) {\n  return /* Format */[\n          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),\n          param[1] + (\"%,\" + param$1[1])\n        ];\n}\n\nvar exit_function = {\n  contents: flush_all\n};\n\nfunction at_exit(f) {\n  var g = exit_function.contents;\n  exit_function.contents = (function (param) {\n      Curry._1(f, undefined);\n      return Curry._1(g, undefined);\n    });\n  \n}\n\nfunction do_at_exit(param) {\n  return Curry._1(exit_function.contents, undefined);\n}\n\nfunction exit(retcode) {\n  do_at_exit(undefined);\n  return Caml_sys.caml_sys_exit(retcode);\n}\n\nvar max_int = 2147483647;\n\nvar infinity = Infinity;\n\nvar neg_infinity = -Infinity;\n\nvar max_float = 1.79769313486231571e+308;\n\nvar min_float = 2.22507385850720138e-308;\n\nvar epsilon_float = 2.22044604925031308e-16;\n\nvar flush = Caml_io.caml_ml_flush;\n\nvar output_char = Caml_io.caml_ml_output_char;\n\nvar output_byte = Caml_io.caml_ml_output_char;\n\nfunction output_binary_int(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_output_int\")(prim, prim$1);\n}\n\nfunction seek_out(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_out\")(prim, prim$1);\n}\n\nfunction pos_out(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_out\")(prim);\n}\n\nfunction out_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size\")(prim);\n}\n\nfunction set_binary_mode_out(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_set_binary_mode\")(prim, prim$1);\n}\n\nfunction input_char(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_input_char\")(prim);\n}\n\nfunction input_byte(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_input_char\")(prim);\n}\n\nfunction input_binary_int(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_input_int\")(prim);\n}\n\nfunction input_value(prim) {\n  return Caml_external_polyfill.resolve(\"caml_input_value\")(prim);\n}\n\nfunction seek_in(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_in\")(prim, prim$1);\n}\n\nfunction pos_in(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_in\")(prim);\n}\n\nfunction in_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size\")(prim);\n}\n\nfunction close_in(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_close_channel\")(prim);\n}\n\nfunction set_binary_mode_in(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_set_binary_mode\")(prim, prim$1);\n}\n\nfunction LargeFile_seek_out(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_out_64\")(prim, prim$1);\n}\n\nfunction LargeFile_pos_out(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_out_64\")(prim);\n}\n\nfunction LargeFile_out_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size_64\")(prim);\n}\n\nfunction LargeFile_seek_in(prim, prim$1) {\n  return Caml_external_polyfill.resolve(\"caml_ml_seek_in_64\")(prim, prim$1);\n}\n\nfunction LargeFile_pos_in(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_pos_in_64\")(prim);\n}\n\nfunction LargeFile_in_channel_length(prim) {\n  return Caml_external_polyfill.resolve(\"caml_ml_channel_size_64\")(prim);\n}\n\nvar LargeFile = {\n  seek_out: LargeFile_seek_out,\n  pos_out: LargeFile_pos_out,\n  out_channel_length: LargeFile_out_channel_length,\n  seek_in: LargeFile_seek_in,\n  pos_in: LargeFile_pos_in,\n  in_channel_length: LargeFile_in_channel_length\n};\n\nexport {\n  invalid_arg ,\n  failwith ,\n  Exit ,\n  abs ,\n  max_int ,\n  min_int ,\n  lnot ,\n  infinity ,\n  neg_infinity ,\n  max_float ,\n  min_float ,\n  epsilon_float ,\n  classify_float ,\n  char_of_int ,\n  string_of_bool ,\n  bool_of_string ,\n  bool_of_string_opt ,\n  int_of_string_opt ,\n  string_of_float ,\n  float_of_string_opt ,\n  $at ,\n  stdin ,\n  stdout ,\n  stderr ,\n  print_char ,\n  print_string ,\n  print_bytes ,\n  print_int ,\n  print_float ,\n  print_newline ,\n  prerr_char ,\n  prerr_string ,\n  prerr_bytes ,\n  prerr_int ,\n  prerr_float ,\n  prerr_newline ,\n  read_line ,\n  read_int ,\n  read_int_opt ,\n  read_float ,\n  read_float_opt ,\n  open_out ,\n  open_out_bin ,\n  open_out_gen ,\n  flush ,\n  flush_all ,\n  output_char ,\n  output_string ,\n  output_bytes ,\n  output ,\n  output_substring ,\n  output_byte ,\n  output_binary_int ,\n  output_value ,\n  seek_out ,\n  pos_out ,\n  out_channel_length ,\n  close_out ,\n  close_out_noerr ,\n  set_binary_mode_out ,\n  open_in ,\n  open_in_bin ,\n  open_in_gen ,\n  input_char ,\n  input_line ,\n  input ,\n  really_input ,\n  really_input_string ,\n  input_byte ,\n  input_binary_int ,\n  input_value ,\n  seek_in ,\n  pos_in ,\n  in_channel_length ,\n  close_in ,\n  close_in_noerr ,\n  set_binary_mode_in ,\n  LargeFile ,\n  string_of_format ,\n  $caret$caret ,\n  exit ,\n  at_exit ,\n  valid_float_lexem ,\n  unsafe_really_input ,\n  do_at_exit ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}