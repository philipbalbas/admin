{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Block = require(\"bs-platform/lib/js/block.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar React = require(\"react\");\n\nvar Utils = require(\"./utils\");\n\nvar $$Promise = require(\"reason-promise/src/js/promise.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar ReactRelay = require(\"react-relay\");\n\nvar RelayRuntime = require(\"relay-runtime\");\n\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar Hooks = require(\"react-relay/hooks\");\n\nvar RelayExperimental = require(\"react-relay/lib/relay-experimental\");\n\nfunction generateClientID(dataId, storageKey, index, param) {\n  return RelayRuntime.generateClientID(dataId, storageKey, index);\n}\n\nvar _cleanObjectFromUndefined = function cleanObj(obj) {\n  var newObj = {};\n  Object.keys(obj).forEach(function (key) {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n};\n\nvar _cleanVariables = function cleanVariables(variables) {\n  if (typeof variables !== \"object\" || variables == null) {\n    return {};\n  }\n\n  return variables;\n};\n\nfunction _convertObj(prim, prim$1, prim$2, prim$3) {\n  return Utils.traverser(prim, prim$1, prim$2, prim$3);\n}\n\nfunction copyFieldsFrom(t, sourceRecord) {\n  t.copyFieldsFrom(sourceRecord);\n}\n\nfunction getDataId(t) {\n  return t.getDataID();\n}\n\nfunction getLinkedRecord(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getLinkedRecord(name, $$arguments));\n}\n\nfunction getLinkedRecords(t, name, $$arguments, param) {\n  var records = t.getLinkedRecords(name, $$arguments);\n\n  if (!(records == null)) {\n    return $$Array.map(function (v) {\n      if (v == null) {\n        return;\n      } else {\n        return Caml_option.some(v);\n      }\n    }, records == null ? undefined : Caml_option.some(records));\n  }\n}\n\nfunction getOrCreateLinkedRecord(t, name, typeName, $$arguments, param) {\n  return t.getOrCreateLinkedRecord(name, typeName, $$arguments);\n}\n\nfunction getType(t) {\n  return t.getType();\n}\n\nfunction _getValueArr(t, name, $$arguments) {\n  var arr = t.getValue(name, $$arguments);\n\n  if (!(arr == null)) {\n    return $$Array.map(function (value) {\n      if (value == null) {\n        return;\n      } else {\n        return Caml_option.some(value);\n      }\n    }, arr);\n  }\n}\n\nfunction getValueString(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueStringArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction getValueInt(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueIntArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction getValueFloat(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueFloatArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction getValueBool(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueBoolArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction setLinkedRecord(t, record, name, $$arguments, param) {\n  return t.setLinkedRecord(record, name, $$arguments);\n}\n\nfunction unsetLinkedRecord(t, name, unsetValue, $$arguments, param) {\n  if (unsetValue) {\n    return t.setLinkedRecord(undefined, name, $$arguments);\n  } else {\n    return t.setLinkedRecord(null, name, $$arguments);\n  }\n}\n\nfunction setLinkedRecords(t, records, name, $$arguments, param) {\n  return t.setLinkedRecords(records, name, $$arguments);\n}\n\nfunction unsetLinkedRecords(t, name, unsetValue, $$arguments, param) {\n  if (unsetValue) {\n    return t.setLinkedRecords(undefined, name, $$arguments);\n  } else {\n    return t.setLinkedRecords(null, name, $$arguments);\n  }\n}\n\nfunction unsetValue(t, name, unsetValue$1, $$arguments, param) {\n  if (unsetValue$1) {\n    return t.setValue(undefined, name, $$arguments);\n  } else {\n    return t.setValue(null, name, $$arguments);\n  }\n}\n\nfunction setValueString(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueStringArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueInt(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueIntArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueFloat(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueFloatArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueBool(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueBoolArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction create(t, dataId, typeName) {\n  return t.create(dataId, typeName);\n}\n\nfunction $$delete(t, dataId) {\n  t.delete(dataId);\n}\n\nfunction get(t, dataId) {\n  return Caml_option.nullable_to_opt(t.get(dataId));\n}\n\nfunction getRootField(t, fieldName) {\n  return Caml_option.nullable_to_opt(t.getRootField(fieldName));\n}\n\nfunction getPluralRootField(t, fieldName) {\n  var arr = t.getPluralRootField(fieldName);\n\n  if (!(arr == null)) {\n    return $$Array.map(function (v) {\n      if (v == null) {\n        return;\n      } else {\n        return Caml_option.some(v);\n      }\n    }, arr == null ? undefined : Caml_option.some(arr));\n  }\n}\n\nfunction create$1(t, dataId, typeName) {\n  return t.create(dataId, typeName);\n}\n\nfunction $$delete$1(t, dataId) {\n  t.delete(dataId);\n}\n\nfunction get$1(t, dataId) {\n  return Caml_option.nullable_to_opt(t.get(dataId));\n}\n\nfunction getConnection(record, key, filters, param) {\n  return Caml_option.nullable_to_opt(RelayRuntime.ConnectionHandler.getConnection(record, key, filters));\n}\n\nfunction createEdge(store, connection, node, edgeType) {\n  return RelayRuntime.ConnectionHandler.createEdge(store, connection, node, edgeType);\n}\n\nfunction insertEdgeBefore(connection, newEdge, cursor, param) {\n  RelayRuntime.ConnectionHandler.insertEdgeBefore(connection, newEdge, cursor);\n}\n\nfunction insertEdgeAfter(connection, newEdge, cursor, param) {\n  RelayRuntime.ConnectionHandler.insertEdgeAfter(connection, newEdge, cursor);\n}\n\nfunction deleteNode(connection, nodeId) {\n  RelayRuntime.ConnectionHandler.deleteNode(connection, nodeId);\n}\n\nvar ConnectionHandler = {\n  getConnection: getConnection,\n  createEdge: createEdge,\n  insertEdgeBefore: insertEdgeBefore,\n  insertEdgeAfter: insertEdgeAfter,\n  deleteNode: deleteNode\n};\n\nfunction make(sinkFn) {\n  return RelayRuntime.Observable.create(function (s) {\n    Curry._1(sinkFn, {\n      next: s.next,\n      error: s.error,\n      completed: s.completed,\n      closed: s.closed\n    });\n  });\n}\n\nvar Observable = {\n  make: make\n};\n\nfunction makePromiseBased(fetchFunction, subscriptionFunction, param) {\n  return RelayRuntime.Network.create(fetchFunction, subscriptionFunction);\n}\n\nfunction makeObservableBased(observableFunction, subscriptionFunction, param) {\n  return RelayRuntime.Network.create(observableFunction, subscriptionFunction);\n}\n\nvar Network = {\n  makePromiseBased: makePromiseBased,\n  makeObservableBased: makeObservableBased\n};\n\nfunction make$1(records, param) {\n  return new RelayRuntime.RecordSource(records);\n}\n\nfunction make$2(source, gcReleaseBufferSize, param) {\n  return new RelayRuntime.Store(source, {\n    gcReleaseBufferSize: gcReleaseBufferSize\n  });\n}\n\nfunction mapRenderPolicy(param) {\n  if (param !== undefined) {\n    if (param) {\n      return \"partial\";\n    } else {\n      return \"full\";\n    }\n  }\n}\n\nfunction make$3(network, store, getDataID, defaultRenderPolicy, param) {\n  return new RelayRuntime.Environment({\n    network: network,\n    store: store,\n    UNSTABLE_DO_NOT_USE_getDataID: getDataID !== undefined ? Curry.__2(getDataID) : undefined,\n    UNSTABLE_defaultRenderPolicy: mapRenderPolicy(defaultRenderPolicy)\n  });\n}\n\nvar provider = ReactRelay.ReactRelayContext.Provider;\n\nfunction ReasonRelay$Context$Provider(Props) {\n  var environment = Props.environment;\n  var children = Props.children;\n  return React.createElement(provider, {\n    value: {\n      environment: environment\n    },\n    children: children\n  });\n}\n\nfunction useConvertedValue(convert, v) {\n  return React.useMemo(function () {\n    return Curry._1(convert, v);\n  }, [v]);\n}\n\nvar EnvironmentNotFoundInContext = Caml_exceptions.create(\"ReasonRelay.EnvironmentNotFoundInContext\");\n\nfunction useEnvironmentFromContext(param) {\n  var context = React.useContext(ReactRelay.ReactRelayContext);\n\n  if (context !== undefined) {\n    return Caml_option.valFromOption(context).environment;\n  }\n\n  throw EnvironmentNotFoundInContext;\n}\n\nfunction mapFetchPolicy(param) {\n  if (param === undefined) {\n    return;\n  }\n\n  switch (param) {\n    case\n    /* StoreOnly */\n    0:\n      return \"store-only\";\n\n    case\n    /* StoreOrNetwork */\n    1:\n      return \"store-or-network\";\n\n    case\n    /* StoreAndNetwork */\n    2:\n      return \"store-and-network\";\n\n    case\n    /* NetworkOnly */\n    3:\n      return \"network-only\";\n  }\n}\n\nfunction MakePreloadQuery(C) {\n  var preload = function (environment, variables, fetchPolicy, fetchKey, networkCacheConfig, param) {\n    return Hooks.preloadQuery(environment, C.query, Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)), {\n      fetchKey: fetchKey,\n      fetchPolicy: mapFetchPolicy(fetchPolicy),\n      networkCacheConfig: networkCacheConfig\n    });\n  };\n\n  return {\n    preload: preload\n  };\n}\n\nfunction MakeUseFragment(C) {\n  var use = function (fr) {\n    var data = Hooks.useFragment(C.fragmentSpec, fr);\n    return useConvertedValue(C.convertFragment, data);\n  };\n\n  return {\n    use: use\n  };\n}\n\nfunction makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete) {\n  return {\n    fetchPolicy: mapFetchPolicy(fetchPolicy),\n    UNSTABLE_renderPolicy: mapRenderPolicy(renderPolicy),\n    onComplete: function (maybeExn) {\n      var match = maybeExn == null ? undefined : Caml_option.some(maybeExn);\n\n      if (onComplete !== undefined) {\n        return Curry._1(onComplete, match);\n      }\n    }\n  };\n}\n\nfunction MakeUseRefetchableFragment(C) {\n  var useRefetchable = function (fr) {\n    var match = Hooks.useRefetchableFragment(C.fragmentSpec, fr);\n    var refetchFn = match[1];\n    var data = useConvertedValue(C.convertFragment, match[0]);\n    return (\n      /* tuple */\n      [data, function (variables, fetchPolicy, renderPolicy, onComplete, param) {\n        return Curry._2(refetchFn, Curry._1(_cleanObjectFromUndefined, Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables))), makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete));\n      }]\n    );\n  };\n\n  return {\n    useRefetchable: useRefetchable\n  };\n}\n\nfunction MakeUsePaginationFragment(C) {\n  var useBlockingPagination = function (fr) {\n    var p = Hooks.useBlockingPaginationFragment(C.fragmentSpec, fr);\n    var data = useConvertedValue(C.convertFragment, p.data);\n    return {\n      data: data,\n      loadNext: function (count, onComplete, param) {\n        return p.loadNext(count, {\n          onComplete: onComplete\n        });\n      },\n      loadPrevious: function (count, onComplete, param) {\n        return p.loadPrevious(count, {\n          onComplete: onComplete\n        });\n      },\n      hasNext: p.hasNext,\n      hasPrevious: p.hasPrevious,\n      refetch: function (variables, fetchPolicy, renderPolicy, onComplete, param) {\n        return p.refetch(Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)), makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete));\n      }\n    };\n  };\n\n  var usePagination = function (fr) {\n    var p = Hooks.usePaginationFragment(C.fragmentSpec, fr);\n    var data = useConvertedValue(C.convertFragment, p.data);\n    return {\n      data: data,\n      loadNext: function (count, onComplete, param) {\n        return p.loadNext(count, {\n          onComplete: onComplete\n        });\n      },\n      loadPrevious: function (count, onComplete, param) {\n        return p.loadPrevious(count, {\n          onComplete: onComplete\n        });\n      },\n      hasNext: p.hasNext,\n      hasPrevious: p.hasPrevious,\n      isLoadingNext: p.isLoadingNext,\n      isLoadingPrevious: p.isLoadingPrevious,\n      refetch: function (variables, fetchPolicy, renderPolicy, onComplete, param) {\n        return p.refetch(Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)), makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete));\n      }\n    };\n  };\n\n  return {\n    useBlockingPagination: useBlockingPagination,\n    usePagination: usePagination\n  };\n}\n\nvar Mutation_failed = Caml_exceptions.create(\"ReasonRelay.Mutation_failed\");\n\nfunction MakeUseMutation(C) {\n  var use = function (param) {\n    var match = RelayExperimental.useMutation(C.node);\n    var mutate = match[0];\n    return (\n      /* tuple */\n      [function (onError, onCompleted, onUnsubscribe, optimisticResponse, optimisticUpdater, updater, variables, param) {\n        return Curry._1(mutate, {\n          onError: onError,\n          onCompleted: onCompleted !== undefined ? function (r, errors) {\n            return Curry._2(onCompleted, Curry._1(C.convertResponse, r), errors == null ? undefined : Caml_option.some(errors));\n          } : undefined,\n          onUnsubscribe: onUnsubscribe,\n          optimisticResponse: optimisticResponse !== undefined ? Caml_option.some(Curry._1(C.wrapResponse, Caml_option.valFromOption(optimisticResponse))) : undefined,\n          optimisticUpdater: optimisticUpdater,\n          updater: updater !== undefined ? function (store, r) {\n            return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n          } : undefined,\n          variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables))\n        });\n      }, match[1]]\n    );\n  };\n\n  return {\n    use: use\n  };\n}\n\nfunction MakeCommitMutation(C) {\n  var commitMutation = function (environment, variables, optimisticUpdater, optimisticResponse, updater, onCompleted, onError, param) {\n    return RelayRuntime.commitMutation(environment, {\n      mutation: C.node,\n      variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)),\n      onCompleted: function (res, err) {\n        if (onCompleted !== undefined) {\n          return Curry._2(onCompleted, !(res == null) ? Caml_option.some(Curry._1(C.convertResponse, res)) : undefined, err == null ? undefined : Caml_option.some(err));\n        }\n      },\n      onError: function (err) {\n        if (onError !== undefined) {\n          return Curry._1(onError, err == null ? undefined : Caml_option.some(err));\n        }\n      },\n      optimisticResponse: optimisticResponse !== undefined ? Caml_option.some(Curry._1(C.wrapResponse, Caml_option.valFromOption(optimisticResponse))) : undefined,\n      optimisticUpdater: optimisticUpdater,\n      updater: updater !== undefined ? function (store, r) {\n        return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n      } : undefined\n    });\n  };\n\n  var commitMutationPromised = function (environment, variables, optimisticUpdater, optimisticResponse, updater, param) {\n    var match = $$Promise.pending(undefined);\n    var resolve = match[1];\n    RelayRuntime.commitMutation(environment, {\n      mutation: C.node,\n      variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)),\n      onCompleted: function (res, err) {\n        return Curry._1(resolve,\n        /* Ok */\n        Block.__(0, [\n        /* tuple */\n        [!(res == null) ? Caml_option.some(Curry._1(C.convertResponse, res)) : undefined, err == null ? undefined : Caml_option.some(err)]]));\n      },\n      onError: function (err) {\n        return Curry._1(resolve,\n        /* Error */\n        Block.__(1, [err == null ? undefined : Caml_option.some(err)]));\n      },\n      optimisticResponse: optimisticResponse !== undefined ? Caml_option.some(Curry._1(C.wrapResponse, Caml_option.valFromOption(optimisticResponse))) : undefined,\n      optimisticUpdater: optimisticUpdater,\n      updater: updater !== undefined ? function (store, r) {\n        return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n      } : undefined\n    });\n    return match[0];\n  };\n\n  return {\n    commitMutation: commitMutation,\n    commitMutationPromised: commitMutationPromised\n  };\n}\n\nfunction commitLocalUpdate(environment, updater) {\n  RelayRuntime.commitLocalUpdate(environment, updater);\n}\n\nfunction MakeUseSubscription(C) {\n  var subscribe = function (environment, variables, onCompleted, onError, onNext, updater, param) {\n    return RelayRuntime.requestSubscription(environment, {\n      subscription: C.node,\n      variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)),\n      onCompleted: onCompleted,\n      onError: onError,\n      onNext: onNext !== undefined ? function (r) {\n        return Curry._1(onNext, Curry._1(C.convertResponse, r));\n      } : undefined,\n      updater: updater !== undefined ? function (store, r) {\n        return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n      } : undefined\n    });\n  };\n\n  return {\n    subscribe: subscribe\n  };\n}\n\nfunction dataIdToString(prim) {\n  return prim;\n}\n\nfunction makeDataId(prim) {\n  return prim;\n}\n\nfunction makeArguments(prim) {\n  return prim;\n}\n\nfunction generateUniqueClientID(prim) {\n  return RelayRuntime.generateUniqueClientID();\n}\n\nfunction isClientID(prim) {\n  return RelayRuntime.isClientID(prim);\n}\n\nvar storeRootId = RelayRuntime.ROOT_ID;\nvar storeRootType = RelayRuntime.ROOT_TYPE;\n\nfunction RecordProxy_invalidateRecord(prim) {\n  prim.invalidateRecord();\n}\n\nvar RecordProxy = {\n  copyFieldsFrom: copyFieldsFrom,\n  getDataId: getDataId,\n  getLinkedRecord: getLinkedRecord,\n  getLinkedRecords: getLinkedRecords,\n  getOrCreateLinkedRecord: getOrCreateLinkedRecord,\n  getType: getType,\n  getValueString: getValueString,\n  getValueStringArray: getValueStringArray,\n  getValueInt: getValueInt,\n  getValueIntArray: getValueIntArray,\n  getValueFloat: getValueFloat,\n  getValueFloatArray: getValueFloatArray,\n  getValueBool: getValueBool,\n  getValueBoolArray: getValueBoolArray,\n  setLinkedRecord: setLinkedRecord,\n  setLinkedRecords: setLinkedRecords,\n  setValueString: setValueString,\n  setValueStringArray: setValueStringArray,\n  setValueInt: setValueInt,\n  setValueIntArray: setValueIntArray,\n  setValueFloat: setValueFloat,\n  setValueFloatArray: setValueFloatArray,\n  setValueBool: setValueBool,\n  setValueBoolArray: setValueBoolArray,\n  unsetValue: unsetValue,\n  unsetLinkedRecord: unsetLinkedRecord,\n  unsetLinkedRecords: unsetLinkedRecords,\n  invalidateRecord: RecordProxy_invalidateRecord\n};\n\nfunction RecordSourceSelectorProxy_getRoot(prim) {\n  return prim.getRoot();\n}\n\nfunction RecordSourceSelectorProxy_invalidateStore(prim) {\n  prim.invalidateStore();\n}\n\nvar RecordSourceSelectorProxy = {\n  create: create,\n  $$delete: $$delete,\n  get: get,\n  getRoot: RecordSourceSelectorProxy_getRoot,\n  getRootField: getRootField,\n  getPluralRootField: getPluralRootField,\n  invalidateStore: RecordSourceSelectorProxy_invalidateStore\n};\n\nfunction RecordSourceProxy_getRoot(prim) {\n  return prim.getRoot();\n}\n\nfunction RecordSourceProxy_invalidateStore(prim) {\n  prim.invalidateStore();\n}\n\nvar RecordSourceProxy = {\n  create: create$1,\n  $$delete: $$delete$1,\n  get: get$1,\n  getRoot: RecordSourceProxy_getRoot,\n  invalidateStore: RecordSourceProxy_invalidateStore\n};\n\nfunction RecordSource_toJSON(prim) {\n  return prim.toJSON();\n}\n\nvar RecordSource = {\n  make: make$1,\n  toJSON: RecordSource_toJSON\n};\n\nfunction Store_getSource(prim) {\n  return prim.getSource();\n}\n\nvar Store = {\n  make: make$2,\n  getSource: Store_getSource\n};\n\nfunction Environment_getStore(prim) {\n  return prim.getStore();\n}\n\nvar Environment = {\n  make: make$3,\n  getStore: Environment_getStore\n};\nvar Disposable = {\n  dispose: function (prim) {\n    prim.dispose();\n  }\n};\n\nfunction MakeUseQuery(funarg) {\n  var use = function (variables, fetchPolicy, renderPolicy, fetchKey, networkCacheConfig, param) {\n    var data = Hooks.useLazyLoadQuery(funarg.query, Curry._1(_cleanObjectFromUndefined, Curry._1(funarg.convertVariables, Curry._1(_cleanVariables, variables))), {\n      fetchKey: fetchKey,\n      fetchPolicy: mapFetchPolicy(fetchPolicy),\n      UNSTABLE_renderPolicy: mapRenderPolicy(renderPolicy),\n      networkCacheConfig: networkCacheConfig\n    });\n    return useConvertedValue(funarg.convertResponse, data);\n  };\n\n  var preload = function (environment, variables, fetchPolicy, fetchKey, networkCacheConfig, param) {\n    return Hooks.preloadQuery(environment, funarg.query, Curry._1(_cleanVariables, Curry._1(funarg.convertVariables, variables)), {\n      fetchKey: fetchKey,\n      fetchPolicy: mapFetchPolicy(fetchPolicy),\n      networkCacheConfig: networkCacheConfig\n    });\n  };\n\n  var usePreloaded = function (token, renderPolicy, param) {\n    var data = Hooks.usePreloadedQuery(funarg.query, token, renderPolicy !== undefined ? {\n      UNSTABLE_renderPolicy: mapRenderPolicy(renderPolicy)\n    } : undefined);\n    return useConvertedValue(funarg.convertResponse, data);\n  };\n\n  var $$fetch = function (environment, variables, onResult) {\n    RelayRuntime.fetchQuery(environment, funarg.query, Curry._1(funarg.convertVariables, variables)).then(function (res) {\n      Curry._1(onResult,\n      /* Ok */\n      Block.__(0, [Curry._1(funarg.convertResponse, res)]));\n\n      return Promise.resolve(undefined);\n    }).catch(function (err) {\n      Curry._1(onResult,\n      /* Error */\n      Block.__(1, [err]));\n\n      return Promise.resolve(undefined);\n    });\n  };\n\n  var fetchPromised = function (environment, variables) {\n    var match = $$Promise.pending(undefined);\n    var resolve = match[1];\n    RelayRuntime.fetchQuery(environment, funarg.query, Curry._1(funarg.convertVariables, variables)).then(function (res) {\n      Curry._1(resolve,\n      /* Ok */\n      Block.__(0, [Curry._1(funarg.convertResponse, res)]));\n\n      return Promise.resolve(undefined);\n    }).catch(function (err) {\n      Curry._1(resolve,\n      /* Error */\n      Block.__(1, [err]));\n\n      return Promise.resolve(undefined);\n    });\n    return match[0];\n  };\n\n  return {\n    use: use,\n    $$fetch: $$fetch,\n    fetchPromised: fetchPromised,\n    preload: preload,\n    usePreloaded: usePreloaded\n  };\n}\n\nvar Context_Provider = {\n  makeProps: function (prim, prim$1, prim$2, prim$3) {\n    var tmp = {\n      environment: prim,\n      children: prim$1\n    };\n\n    if (prim$2 !== undefined) {\n      tmp.key = Caml_option.valFromOption(prim$2);\n    }\n\n    return tmp;\n  },\n  make: ReasonRelay$Context$Provider\n};\nvar Context = {\n  context: ReactRelay.ReactRelayContext,\n  Provider: Context_Provider\n};\n\nfunction fetchQuery(prim, prim$1, prim$2) {\n  return RelayRuntime.fetchQuery(prim, prim$1, prim$2);\n}\n\nexports.dataIdToString = dataIdToString;\nexports.makeDataId = makeDataId;\nexports.makeArguments = makeArguments;\nexports.generateClientID = generateClientID;\nexports.generateUniqueClientID = generateUniqueClientID;\nexports.isClientID = isClientID;\nexports.storeRootId = storeRootId;\nexports.storeRootType = storeRootType;\nexports._cleanObjectFromUndefined = _cleanObjectFromUndefined;\nexports._cleanVariables = _cleanVariables;\nexports._convertObj = _convertObj;\nexports.RecordProxy = RecordProxy;\nexports.RecordSourceSelectorProxy = RecordSourceSelectorProxy;\nexports.RecordSourceProxy = RecordSourceProxy;\nexports.ConnectionHandler = ConnectionHandler;\nexports.Observable = Observable;\nexports.Network = Network;\nexports.RecordSource = RecordSource;\nexports.Store = Store;\nexports.Environment = Environment;\nexports.Disposable = Disposable;\nexports.mapFetchPolicy = mapFetchPolicy;\nexports.MakeUseQuery = MakeUseQuery;\nexports.MakePreloadQuery = MakePreloadQuery;\nexports.MakeUseFragment = MakeUseFragment;\nexports.MakeUseRefetchableFragment = MakeUseRefetchableFragment;\nexports.MakeUsePaginationFragment = MakeUsePaginationFragment;\nexports.MakeUseMutation = MakeUseMutation;\nexports.Context = Context;\nexports.EnvironmentNotFoundInContext = EnvironmentNotFoundInContext;\nexports.useEnvironmentFromContext = useEnvironmentFromContext;\nexports.Mutation_failed = Mutation_failed;\nexports.MakeCommitMutation = MakeCommitMutation;\nexports.commitLocalUpdate = commitLocalUpdate;\nexports.fetchQuery = fetchQuery;\nexports.MakeUseSubscription = MakeUseSubscription;\n/* _cleanObjectFromUndefined Not a pure module */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/reason-relay/src/ReasonRelay.bs.js"],"names":["$$Array","require","Block","Curry","React","Utils","$$Promise","Caml_option","ReactRelay","RelayRuntime","Caml_exceptions","Hooks","RelayExperimental","generateClientID","dataId","storageKey","index","param","_cleanObjectFromUndefined","cleanObj","obj","newObj","Object","keys","forEach","key","_cleanVariables","cleanVariables","variables","_convertObj","prim","prim$1","prim$2","prim$3","traverser","copyFieldsFrom","t","sourceRecord","getDataId","getDataID","getLinkedRecord","name","$$arguments","nullable_to_opt","getLinkedRecords","records","map","v","some","undefined","getOrCreateLinkedRecord","typeName","getType","_getValueArr","arr","getValue","value","getValueString","getValueStringArray","getValueInt","getValueIntArray","getValueFloat","getValueFloatArray","getValueBool","getValueBoolArray","setLinkedRecord","record","unsetLinkedRecord","unsetValue","setLinkedRecords","unsetLinkedRecords","unsetValue$1","setValue","setValueString","setValueStringArray","setValueInt","setValueIntArray","setValueFloat","setValueFloatArray","setValueBool","setValueBoolArray","create","$$delete","delete","get","getRootField","fieldName","getPluralRootField","create$1","$$delete$1","get$1","getConnection","filters","ConnectionHandler","createEdge","store","connection","node","edgeType","insertEdgeBefore","newEdge","cursor","insertEdgeAfter","deleteNode","nodeId","make","sinkFn","Observable","s","_1","next","error","completed","closed","makePromiseBased","fetchFunction","subscriptionFunction","Network","makeObservableBased","observableFunction","make$1","RecordSource","make$2","source","gcReleaseBufferSize","Store","mapRenderPolicy","make$3","network","defaultRenderPolicy","Environment","UNSTABLE_DO_NOT_USE_getDataID","__2","UNSTABLE_defaultRenderPolicy","provider","ReactRelayContext","Provider","ReasonRelay$Context$Provider","Props","environment","children","createElement","useConvertedValue","convert","useMemo","EnvironmentNotFoundInContext","useEnvironmentFromContext","context","useContext","valFromOption","mapFetchPolicy","MakePreloadQuery","C","preload","fetchPolicy","fetchKey","networkCacheConfig","preloadQuery","query","convertVariables","MakeUseFragment","use","fr","data","useFragment","fragmentSpec","convertFragment","makeRefetchableFnOpts","renderPolicy","onComplete","UNSTABLE_renderPolicy","maybeExn","match","MakeUseRefetchableFragment","useRefetchable","useRefetchableFragment","refetchFn","_2","MakeUsePaginationFragment","useBlockingPagination","p","useBlockingPaginationFragment","loadNext","count","loadPrevious","hasNext","hasPrevious","refetch","usePagination","usePaginationFragment","isLoadingNext","isLoadingPrevious","Mutation_failed","MakeUseMutation","useMutation","mutate","onError","onCompleted","onUnsubscribe","optimisticResponse","optimisticUpdater","updater","r","errors","convertResponse","wrapResponse","MakeCommitMutation","commitMutation","mutation","res","err","commitMutationPromised","pending","resolve","__","commitLocalUpdate","MakeUseSubscription","subscribe","onNext","requestSubscription","subscription","dataIdToString","makeDataId","makeArguments","generateUniqueClientID","isClientID","storeRootId","ROOT_ID","storeRootType","ROOT_TYPE","RecordProxy_invalidateRecord","invalidateRecord","RecordProxy","RecordSourceSelectorProxy_getRoot","getRoot","RecordSourceSelectorProxy_invalidateStore","invalidateStore","RecordSourceSelectorProxy","RecordSourceProxy_getRoot","RecordSourceProxy_invalidateStore","RecordSourceProxy","RecordSource_toJSON","toJSON","Store_getSource","getSource","Environment_getStore","getStore","Disposable","dispose","MakeUseQuery","funarg","useLazyLoadQuery","usePreloaded","token","usePreloadedQuery","$$fetch","onResult","fetchQuery","then","Promise","catch","fetchPromised","Context_Provider","makeProps","tmp","Context","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Block = require(\"bs-platform/lib/js/block.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Utils = require(\"./utils\");\nvar $$Promise = require(\"reason-promise/src/js/promise.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar ReactRelay = require(\"react-relay\");\nvar RelayRuntime = require(\"relay-runtime\");\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\nvar Hooks = require(\"react-relay/hooks\");\nvar RelayExperimental = require(\"react-relay/lib/relay-experimental\");\n\nfunction generateClientID(dataId, storageKey, index, param) {\n  return RelayRuntime.generateClientID(dataId, storageKey, index);\n}\n\nvar _cleanObjectFromUndefined = (function cleanObj(obj) {\n    var newObj = {};\n\n    Object.keys(obj).forEach(function(key) {\n      if (typeof obj[key] !== 'undefined') {\n        newObj[key] = obj[key];\n      }\n    });\n\n    return newObj;\n  });\n\nvar _cleanVariables = (function cleanVariables(variables) {\n    if (typeof variables !== \"object\" || variables == null) {\n      return {};\n    }\n\n    return variables;\n  });\n\nfunction _convertObj(prim, prim$1, prim$2, prim$3) {\n  return Utils.traverser(prim, prim$1, prim$2, prim$3);\n}\n\nfunction copyFieldsFrom(t, sourceRecord) {\n  t.copyFieldsFrom(sourceRecord);\n  \n}\n\nfunction getDataId(t) {\n  return t.getDataID();\n}\n\nfunction getLinkedRecord(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getLinkedRecord(name, $$arguments));\n}\n\nfunction getLinkedRecords(t, name, $$arguments, param) {\n  var records = t.getLinkedRecords(name, $$arguments);\n  if (!(records == null)) {\n    return $$Array.map((function (v) {\n                  if (v == null) {\n                    return ;\n                  } else {\n                    return Caml_option.some(v);\n                  }\n                }), (records == null) ? undefined : Caml_option.some(records));\n  }\n  \n}\n\nfunction getOrCreateLinkedRecord(t, name, typeName, $$arguments, param) {\n  return t.getOrCreateLinkedRecord(name, typeName, $$arguments);\n}\n\nfunction getType(t) {\n  return t.getType();\n}\n\nfunction _getValueArr(t, name, $$arguments) {\n  var arr = t.getValue(name, $$arguments);\n  if (!(arr == null)) {\n    return $$Array.map((function (value) {\n                  if (value == null) {\n                    return ;\n                  } else {\n                    return Caml_option.some(value);\n                  }\n                }), arr);\n  }\n  \n}\n\nfunction getValueString(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueStringArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction getValueInt(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueIntArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction getValueFloat(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueFloatArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction getValueBool(t, name, $$arguments, param) {\n  return Caml_option.nullable_to_opt(t.getValue(name, $$arguments));\n}\n\nfunction getValueBoolArray(t, name, $$arguments, param) {\n  return _getValueArr(t, name, $$arguments);\n}\n\nfunction setLinkedRecord(t, record, name, $$arguments, param) {\n  return t.setLinkedRecord(record, name, $$arguments);\n}\n\nfunction unsetLinkedRecord(t, name, unsetValue, $$arguments, param) {\n  if (unsetValue) {\n    return t.setLinkedRecord(undefined, name, $$arguments);\n  } else {\n    return t.setLinkedRecord(null, name, $$arguments);\n  }\n}\n\nfunction setLinkedRecords(t, records, name, $$arguments, param) {\n  return t.setLinkedRecords(records, name, $$arguments);\n}\n\nfunction unsetLinkedRecords(t, name, unsetValue, $$arguments, param) {\n  if (unsetValue) {\n    return t.setLinkedRecords(undefined, name, $$arguments);\n  } else {\n    return t.setLinkedRecords(null, name, $$arguments);\n  }\n}\n\nfunction unsetValue(t, name, unsetValue$1, $$arguments, param) {\n  if (unsetValue$1) {\n    return t.setValue(undefined, name, $$arguments);\n  } else {\n    return t.setValue(null, name, $$arguments);\n  }\n}\n\nfunction setValueString(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueStringArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueInt(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueIntArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueFloat(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueFloatArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueBool(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction setValueBoolArray(t, value, name, $$arguments, param) {\n  return t.setValue(value, name, $$arguments);\n}\n\nfunction create(t, dataId, typeName) {\n  return t.create(dataId, typeName);\n}\n\nfunction $$delete(t, dataId) {\n  t.delete(dataId);\n  \n}\n\nfunction get(t, dataId) {\n  return Caml_option.nullable_to_opt(t.get(dataId));\n}\n\nfunction getRootField(t, fieldName) {\n  return Caml_option.nullable_to_opt(t.getRootField(fieldName));\n}\n\nfunction getPluralRootField(t, fieldName) {\n  var arr = t.getPluralRootField(fieldName);\n  if (!(arr == null)) {\n    return $$Array.map((function (v) {\n                  if (v == null) {\n                    return ;\n                  } else {\n                    return Caml_option.some(v);\n                  }\n                }), (arr == null) ? undefined : Caml_option.some(arr));\n  }\n  \n}\n\nfunction create$1(t, dataId, typeName) {\n  return t.create(dataId, typeName);\n}\n\nfunction $$delete$1(t, dataId) {\n  t.delete(dataId);\n  \n}\n\nfunction get$1(t, dataId) {\n  return Caml_option.nullable_to_opt(t.get(dataId));\n}\n\nfunction getConnection(record, key, filters, param) {\n  return Caml_option.nullable_to_opt(RelayRuntime.ConnectionHandler.getConnection(record, key, filters));\n}\n\nfunction createEdge(store, connection, node, edgeType) {\n  return RelayRuntime.ConnectionHandler.createEdge(store, connection, node, edgeType);\n}\n\nfunction insertEdgeBefore(connection, newEdge, cursor, param) {\n  RelayRuntime.ConnectionHandler.insertEdgeBefore(connection, newEdge, cursor);\n  \n}\n\nfunction insertEdgeAfter(connection, newEdge, cursor, param) {\n  RelayRuntime.ConnectionHandler.insertEdgeAfter(connection, newEdge, cursor);\n  \n}\n\nfunction deleteNode(connection, nodeId) {\n  RelayRuntime.ConnectionHandler.deleteNode(connection, nodeId);\n  \n}\n\nvar ConnectionHandler = {\n  getConnection: getConnection,\n  createEdge: createEdge,\n  insertEdgeBefore: insertEdgeBefore,\n  insertEdgeAfter: insertEdgeAfter,\n  deleteNode: deleteNode\n};\n\nfunction make(sinkFn) {\n  return RelayRuntime.Observable.create((function (s) {\n                Curry._1(sinkFn, {\n                      next: s.next,\n                      error: s.error,\n                      completed: s.completed,\n                      closed: s.closed\n                    });\n                \n              }));\n}\n\nvar Observable = {\n  make: make\n};\n\nfunction makePromiseBased(fetchFunction, subscriptionFunction, param) {\n  return RelayRuntime.Network.create(fetchFunction, subscriptionFunction);\n}\n\nfunction makeObservableBased(observableFunction, subscriptionFunction, param) {\n  return RelayRuntime.Network.create(observableFunction, subscriptionFunction);\n}\n\nvar Network = {\n  makePromiseBased: makePromiseBased,\n  makeObservableBased: makeObservableBased\n};\n\nfunction make$1(records, param) {\n  return new RelayRuntime.RecordSource(records);\n}\n\nfunction make$2(source, gcReleaseBufferSize, param) {\n  return new RelayRuntime.Store(source, {\n              gcReleaseBufferSize: gcReleaseBufferSize\n            });\n}\n\nfunction mapRenderPolicy(param) {\n  if (param !== undefined) {\n    if (param) {\n      return \"partial\";\n    } else {\n      return \"full\";\n    }\n  }\n  \n}\n\nfunction make$3(network, store, getDataID, defaultRenderPolicy, param) {\n  return new RelayRuntime.Environment({\n              network: network,\n              store: store,\n              UNSTABLE_DO_NOT_USE_getDataID: getDataID !== undefined ? Curry.__2(getDataID) : undefined,\n              UNSTABLE_defaultRenderPolicy: mapRenderPolicy(defaultRenderPolicy)\n            });\n}\n\nvar provider = ReactRelay.ReactRelayContext.Provider;\n\nfunction ReasonRelay$Context$Provider(Props) {\n  var environment = Props.environment;\n  var children = Props.children;\n  return React.createElement(provider, {\n              value: {\n                environment: environment\n              },\n              children: children\n            });\n}\n\nfunction useConvertedValue(convert, v) {\n  return React.useMemo((function () {\n                return Curry._1(convert, v);\n              }), [v]);\n}\n\nvar EnvironmentNotFoundInContext = Caml_exceptions.create(\"ReasonRelay.EnvironmentNotFoundInContext\");\n\nfunction useEnvironmentFromContext(param) {\n  var context = React.useContext(ReactRelay.ReactRelayContext);\n  if (context !== undefined) {\n    return Caml_option.valFromOption(context).environment;\n  }\n  throw EnvironmentNotFoundInContext;\n}\n\nfunction mapFetchPolicy(param) {\n  if (param === undefined) {\n    return ;\n  }\n  switch (param) {\n    case /* StoreOnly */0 :\n        return \"store-only\";\n    case /* StoreOrNetwork */1 :\n        return \"store-or-network\";\n    case /* StoreAndNetwork */2 :\n        return \"store-and-network\";\n    case /* NetworkOnly */3 :\n        return \"network-only\";\n    \n  }\n}\n\nfunction MakePreloadQuery(C) {\n  var preload = function (environment, variables, fetchPolicy, fetchKey, networkCacheConfig, param) {\n    return Hooks.preloadQuery(environment, C.query, Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)), {\n                fetchKey: fetchKey,\n                fetchPolicy: mapFetchPolicy(fetchPolicy),\n                networkCacheConfig: networkCacheConfig\n              });\n  };\n  return {\n          preload: preload\n        };\n}\n\nfunction MakeUseFragment(C) {\n  var use = function (fr) {\n    var data = Hooks.useFragment(C.fragmentSpec, fr);\n    return useConvertedValue(C.convertFragment, data);\n  };\n  return {\n          use: use\n        };\n}\n\nfunction makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete) {\n  return {\n          fetchPolicy: mapFetchPolicy(fetchPolicy),\n          UNSTABLE_renderPolicy: mapRenderPolicy(renderPolicy),\n          onComplete: (function (maybeExn) {\n              var match = (maybeExn == null) ? undefined : Caml_option.some(maybeExn);\n              if (onComplete !== undefined) {\n                return Curry._1(onComplete, match);\n              }\n              \n            })\n        };\n}\n\nfunction MakeUseRefetchableFragment(C) {\n  var useRefetchable = function (fr) {\n    var match = Hooks.useRefetchableFragment(C.fragmentSpec, fr);\n    var refetchFn = match[1];\n    var data = useConvertedValue(C.convertFragment, match[0]);\n    return /* tuple */[\n            data,\n            (function (variables, fetchPolicy, renderPolicy, onComplete, param) {\n                return Curry._2(refetchFn, Curry._1(_cleanObjectFromUndefined, Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables))), makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete));\n              })\n          ];\n  };\n  return {\n          useRefetchable: useRefetchable\n        };\n}\n\nfunction MakeUsePaginationFragment(C) {\n  var useBlockingPagination = function (fr) {\n    var p = Hooks.useBlockingPaginationFragment(C.fragmentSpec, fr);\n    var data = useConvertedValue(C.convertFragment, p.data);\n    return {\n            data: data,\n            loadNext: (function (count, onComplete, param) {\n                return p.loadNext(count, {\n                            onComplete: onComplete\n                          });\n              }),\n            loadPrevious: (function (count, onComplete, param) {\n                return p.loadPrevious(count, {\n                            onComplete: onComplete\n                          });\n              }),\n            hasNext: p.hasNext,\n            hasPrevious: p.hasPrevious,\n            refetch: (function (variables, fetchPolicy, renderPolicy, onComplete, param) {\n                return p.refetch(Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)), makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete));\n              })\n          };\n  };\n  var usePagination = function (fr) {\n    var p = Hooks.usePaginationFragment(C.fragmentSpec, fr);\n    var data = useConvertedValue(C.convertFragment, p.data);\n    return {\n            data: data,\n            loadNext: (function (count, onComplete, param) {\n                return p.loadNext(count, {\n                            onComplete: onComplete\n                          });\n              }),\n            loadPrevious: (function (count, onComplete, param) {\n                return p.loadPrevious(count, {\n                            onComplete: onComplete\n                          });\n              }),\n            hasNext: p.hasNext,\n            hasPrevious: p.hasPrevious,\n            isLoadingNext: p.isLoadingNext,\n            isLoadingPrevious: p.isLoadingPrevious,\n            refetch: (function (variables, fetchPolicy, renderPolicy, onComplete, param) {\n                return p.refetch(Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)), makeRefetchableFnOpts(fetchPolicy, renderPolicy, onComplete));\n              })\n          };\n  };\n  return {\n          useBlockingPagination: useBlockingPagination,\n          usePagination: usePagination\n        };\n}\n\nvar Mutation_failed = Caml_exceptions.create(\"ReasonRelay.Mutation_failed\");\n\nfunction MakeUseMutation(C) {\n  var use = function (param) {\n    var match = RelayExperimental.useMutation(C.node);\n    var mutate = match[0];\n    return /* tuple */[\n            (function (onError, onCompleted, onUnsubscribe, optimisticResponse, optimisticUpdater, updater, variables, param) {\n                return Curry._1(mutate, {\n                            onError: onError,\n                            onCompleted: onCompleted !== undefined ? (function (r, errors) {\n                                  return Curry._2(onCompleted, Curry._1(C.convertResponse, r), (errors == null) ? undefined : Caml_option.some(errors));\n                                }) : undefined,\n                            onUnsubscribe: onUnsubscribe,\n                            optimisticResponse: optimisticResponse !== undefined ? Caml_option.some(Curry._1(C.wrapResponse, Caml_option.valFromOption(optimisticResponse))) : undefined,\n                            optimisticUpdater: optimisticUpdater,\n                            updater: updater !== undefined ? (function (store, r) {\n                                  return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n                                }) : undefined,\n                            variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables))\n                          });\n              }),\n            match[1]\n          ];\n  };\n  return {\n          use: use\n        };\n}\n\nfunction MakeCommitMutation(C) {\n  var commitMutation = function (environment, variables, optimisticUpdater, optimisticResponse, updater, onCompleted, onError, param) {\n    return RelayRuntime.commitMutation(environment, {\n                mutation: C.node,\n                variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)),\n                onCompleted: (function (res, err) {\n                    if (onCompleted !== undefined) {\n                      return Curry._2(onCompleted, !(res == null) ? Caml_option.some(Curry._1(C.convertResponse, res)) : undefined, (err == null) ? undefined : Caml_option.some(err));\n                    }\n                    \n                  }),\n                onError: (function (err) {\n                    if (onError !== undefined) {\n                      return Curry._1(onError, (err == null) ? undefined : Caml_option.some(err));\n                    }\n                    \n                  }),\n                optimisticResponse: optimisticResponse !== undefined ? Caml_option.some(Curry._1(C.wrapResponse, Caml_option.valFromOption(optimisticResponse))) : undefined,\n                optimisticUpdater: optimisticUpdater,\n                updater: updater !== undefined ? (function (store, r) {\n                      return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n                    }) : undefined\n              });\n  };\n  var commitMutationPromised = function (environment, variables, optimisticUpdater, optimisticResponse, updater, param) {\n    var match = $$Promise.pending(undefined);\n    var resolve = match[1];\n    RelayRuntime.commitMutation(environment, {\n          mutation: C.node,\n          variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)),\n          onCompleted: (function (res, err) {\n              return Curry._1(resolve, /* Ok */Block.__(0, [/* tuple */[\n                              !(res == null) ? Caml_option.some(Curry._1(C.convertResponse, res)) : undefined,\n                              (err == null) ? undefined : Caml_option.some(err)\n                            ]]));\n            }),\n          onError: (function (err) {\n              return Curry._1(resolve, /* Error */Block.__(1, [(err == null) ? undefined : Caml_option.some(err)]));\n            }),\n          optimisticResponse: optimisticResponse !== undefined ? Caml_option.some(Curry._1(C.wrapResponse, Caml_option.valFromOption(optimisticResponse))) : undefined,\n          optimisticUpdater: optimisticUpdater,\n          updater: updater !== undefined ? (function (store, r) {\n                return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n              }) : undefined\n        });\n    return match[0];\n  };\n  return {\n          commitMutation: commitMutation,\n          commitMutationPromised: commitMutationPromised\n        };\n}\n\nfunction commitLocalUpdate(environment, updater) {\n  RelayRuntime.commitLocalUpdate(environment, updater);\n  \n}\n\nfunction MakeUseSubscription(C) {\n  var subscribe = function (environment, variables, onCompleted, onError, onNext, updater, param) {\n    return RelayRuntime.requestSubscription(environment, {\n                subscription: C.node,\n                variables: Curry._1(_cleanVariables, Curry._1(C.convertVariables, variables)),\n                onCompleted: onCompleted,\n                onError: onError,\n                onNext: onNext !== undefined ? (function (r) {\n                      return Curry._1(onNext, Curry._1(C.convertResponse, r));\n                    }) : undefined,\n                updater: updater !== undefined ? (function (store, r) {\n                      return Curry._2(updater, store, Curry._1(C.convertResponse, r));\n                    }) : undefined\n              });\n  };\n  return {\n          subscribe: subscribe\n        };\n}\n\nfunction dataIdToString(prim) {\n  return prim;\n}\n\nfunction makeDataId(prim) {\n  return prim;\n}\n\nfunction makeArguments(prim) {\n  return prim;\n}\n\nfunction generateUniqueClientID(prim) {\n  return RelayRuntime.generateUniqueClientID();\n}\n\nfunction isClientID(prim) {\n  return RelayRuntime.isClientID(prim);\n}\n\nvar storeRootId = RelayRuntime.ROOT_ID;\n\nvar storeRootType = RelayRuntime.ROOT_TYPE;\n\nfunction RecordProxy_invalidateRecord(prim) {\n  prim.invalidateRecord();\n  \n}\n\nvar RecordProxy = {\n  copyFieldsFrom: copyFieldsFrom,\n  getDataId: getDataId,\n  getLinkedRecord: getLinkedRecord,\n  getLinkedRecords: getLinkedRecords,\n  getOrCreateLinkedRecord: getOrCreateLinkedRecord,\n  getType: getType,\n  getValueString: getValueString,\n  getValueStringArray: getValueStringArray,\n  getValueInt: getValueInt,\n  getValueIntArray: getValueIntArray,\n  getValueFloat: getValueFloat,\n  getValueFloatArray: getValueFloatArray,\n  getValueBool: getValueBool,\n  getValueBoolArray: getValueBoolArray,\n  setLinkedRecord: setLinkedRecord,\n  setLinkedRecords: setLinkedRecords,\n  setValueString: setValueString,\n  setValueStringArray: setValueStringArray,\n  setValueInt: setValueInt,\n  setValueIntArray: setValueIntArray,\n  setValueFloat: setValueFloat,\n  setValueFloatArray: setValueFloatArray,\n  setValueBool: setValueBool,\n  setValueBoolArray: setValueBoolArray,\n  unsetValue: unsetValue,\n  unsetLinkedRecord: unsetLinkedRecord,\n  unsetLinkedRecords: unsetLinkedRecords,\n  invalidateRecord: RecordProxy_invalidateRecord\n};\n\nfunction RecordSourceSelectorProxy_getRoot(prim) {\n  return prim.getRoot();\n}\n\nfunction RecordSourceSelectorProxy_invalidateStore(prim) {\n  prim.invalidateStore();\n  \n}\n\nvar RecordSourceSelectorProxy = {\n  create: create,\n  $$delete: $$delete,\n  get: get,\n  getRoot: RecordSourceSelectorProxy_getRoot,\n  getRootField: getRootField,\n  getPluralRootField: getPluralRootField,\n  invalidateStore: RecordSourceSelectorProxy_invalidateStore\n};\n\nfunction RecordSourceProxy_getRoot(prim) {\n  return prim.getRoot();\n}\n\nfunction RecordSourceProxy_invalidateStore(prim) {\n  prim.invalidateStore();\n  \n}\n\nvar RecordSourceProxy = {\n  create: create$1,\n  $$delete: $$delete$1,\n  get: get$1,\n  getRoot: RecordSourceProxy_getRoot,\n  invalidateStore: RecordSourceProxy_invalidateStore\n};\n\nfunction RecordSource_toJSON(prim) {\n  return prim.toJSON();\n}\n\nvar RecordSource = {\n  make: make$1,\n  toJSON: RecordSource_toJSON\n};\n\nfunction Store_getSource(prim) {\n  return prim.getSource();\n}\n\nvar Store = {\n  make: make$2,\n  getSource: Store_getSource\n};\n\nfunction Environment_getStore(prim) {\n  return prim.getStore();\n}\n\nvar Environment = {\n  make: make$3,\n  getStore: Environment_getStore\n};\n\nvar Disposable = {\n  dispose: (function (prim) {\n      prim.dispose();\n      \n    })\n};\n\nfunction MakeUseQuery(funarg) {\n  var use = function (variables, fetchPolicy, renderPolicy, fetchKey, networkCacheConfig, param) {\n    var data = Hooks.useLazyLoadQuery(funarg.query, Curry._1(_cleanObjectFromUndefined, Curry._1(funarg.convertVariables, Curry._1(_cleanVariables, variables))), {\n          fetchKey: fetchKey,\n          fetchPolicy: mapFetchPolicy(fetchPolicy),\n          UNSTABLE_renderPolicy: mapRenderPolicy(renderPolicy),\n          networkCacheConfig: networkCacheConfig\n        });\n    return useConvertedValue(funarg.convertResponse, data);\n  };\n  var preload = function (environment, variables, fetchPolicy, fetchKey, networkCacheConfig, param) {\n    return Hooks.preloadQuery(environment, funarg.query, Curry._1(_cleanVariables, Curry._1(funarg.convertVariables, variables)), {\n                fetchKey: fetchKey,\n                fetchPolicy: mapFetchPolicy(fetchPolicy),\n                networkCacheConfig: networkCacheConfig\n              });\n  };\n  var usePreloaded = function (token, renderPolicy, param) {\n    var data = Hooks.usePreloadedQuery(funarg.query, token, renderPolicy !== undefined ? ({\n              UNSTABLE_renderPolicy: mapRenderPolicy(renderPolicy)\n            }) : undefined);\n    return useConvertedValue(funarg.convertResponse, data);\n  };\n  var $$fetch = function (environment, variables, onResult) {\n    RelayRuntime.fetchQuery(environment, funarg.query, Curry._1(funarg.convertVariables, variables)).then((function (res) {\n              Curry._1(onResult, /* Ok */Block.__(0, [Curry._1(funarg.convertResponse, res)]));\n              return Promise.resolve(undefined);\n            })).catch((function (err) {\n            Curry._1(onResult, /* Error */Block.__(1, [err]));\n            return Promise.resolve(undefined);\n          }));\n    \n  };\n  var fetchPromised = function (environment, variables) {\n    var match = $$Promise.pending(undefined);\n    var resolve = match[1];\n    RelayRuntime.fetchQuery(environment, funarg.query, Curry._1(funarg.convertVariables, variables)).then((function (res) {\n              Curry._1(resolve, /* Ok */Block.__(0, [Curry._1(funarg.convertResponse, res)]));\n              return Promise.resolve(undefined);\n            })).catch((function (err) {\n            Curry._1(resolve, /* Error */Block.__(1, [err]));\n            return Promise.resolve(undefined);\n          }));\n    return match[0];\n  };\n  return {\n          use: use,\n          $$fetch: $$fetch,\n          fetchPromised: fetchPromised,\n          preload: preload,\n          usePreloaded: usePreloaded\n        };\n}\n\nvar Context_Provider = {\n  makeProps: (function (prim, prim$1, prim$2, prim$3) {\n      var tmp = {\n        environment: prim,\n        children: prim$1\n      };\n      if (prim$2 !== undefined) {\n        tmp.key = Caml_option.valFromOption(prim$2);\n      }\n      return tmp;\n    }),\n  make: ReasonRelay$Context$Provider\n};\n\nvar Context = {\n  context: ReactRelay.ReactRelayContext,\n  Provider: Context_Provider\n};\n\nfunction fetchQuery(prim, prim$1, prim$2) {\n  return RelayRuntime.fetchQuery(prim, prim$1, prim$2);\n}\n\nexports.dataIdToString = dataIdToString;\nexports.makeDataId = makeDataId;\nexports.makeArguments = makeArguments;\nexports.generateClientID = generateClientID;\nexports.generateUniqueClientID = generateUniqueClientID;\nexports.isClientID = isClientID;\nexports.storeRootId = storeRootId;\nexports.storeRootType = storeRootType;\nexports._cleanObjectFromUndefined = _cleanObjectFromUndefined;\nexports._cleanVariables = _cleanVariables;\nexports._convertObj = _convertObj;\nexports.RecordProxy = RecordProxy;\nexports.RecordSourceSelectorProxy = RecordSourceSelectorProxy;\nexports.RecordSourceProxy = RecordSourceProxy;\nexports.ConnectionHandler = ConnectionHandler;\nexports.Observable = Observable;\nexports.Network = Network;\nexports.RecordSource = RecordSource;\nexports.Store = Store;\nexports.Environment = Environment;\nexports.Disposable = Disposable;\nexports.mapFetchPolicy = mapFetchPolicy;\nexports.MakeUseQuery = MakeUseQuery;\nexports.MakePreloadQuery = MakePreloadQuery;\nexports.MakeUseFragment = MakeUseFragment;\nexports.MakeUseRefetchableFragment = MakeUseRefetchableFragment;\nexports.MakeUsePaginationFragment = MakeUsePaginationFragment;\nexports.MakeUseMutation = MakeUseMutation;\nexports.Context = Context;\nexports.EnvironmentNotFoundInContext = EnvironmentNotFoundInContext;\nexports.useEnvironmentFromContext = useEnvironmentFromContext;\nexports.Mutation_failed = Mutation_failed;\nexports.MakeCommitMutation = MakeCommitMutation;\nexports.commitLocalUpdate = commitLocalUpdate;\nexports.fetchQuery = fetchQuery;\nexports.MakeUseSubscription = MakeUseSubscription;\n/* _cleanObjectFromUndefined Not a pure module */\n"]},"metadata":{},"sourceType":"script"}