{"ast":null,"code":"'use strict';\n\nvar Caml_option = require(\"./caml_option.js\");\n\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [$$Error, e];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.caml_as_js_exn = caml_as_js_exn;\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/js/caml_js_exceptions.js"],"names":["Caml_option","require","Caml_exceptions","$$Error","create","internalToOCamlException","e","caml_is_extension","caml_as_js_exn","exn","some","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,sBAAD,CAA7B;;AAEA,IAAIE,OAAO,GAAGD,eAAe,CAACE,MAAhB,CAAuB,0BAAvB,CAAd;;AAEA,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AACnC,MAAIJ,eAAe,CAACK,iBAAhB,CAAkCD,CAAlC,CAAJ,EAA0C;AACxC,WAAOA,CAAP;AACD,GAFD,MAEO;AACL,WAAO,CACCH,OADD,EAECG,CAFD,CAAP;AAID;AACF;;AAED,SAASE,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAWN,OAAf,EAAwB;AACtB,WAAOH,WAAW,CAACU,IAAZ,CAAiBD,GAAG,CAAC,CAAD,CAApB,CAAP;AACD;AAEF;;AAEDE,OAAO,CAACR,OAAR,GAAkBA,OAAlB;AACAQ,OAAO,CAACN,wBAAR,GAAmCA,wBAAnC;AACAM,OAAO,CAACH,cAAR,GAAyBA,cAAzB;AACA","sourcesContent":["'use strict';\n\nvar Caml_option = require(\"./caml_option.js\");\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n  \n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.caml_as_js_exn = caml_as_js_exn;\n/* No side effect */\n"]},"metadata":{},"sourceType":"script"}