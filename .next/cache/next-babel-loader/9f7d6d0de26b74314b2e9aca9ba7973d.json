{"ast":null,"code":"import * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_sys_getenv(s) {\n  if (typeof process === \"undefined\" || process.env === undefined) {\n    throw Caml_builtin_exceptions.not_found;\n  }\n\n  var x = process.env[s];\n\n  if (x !== undefined) {\n    return x;\n  }\n\n  throw Caml_builtin_exceptions.not_found;\n}\n\nvar os_type = function os_type(_) {\n  if (typeof process !== 'undefined' && process.platform === 'win32') {\n    return \"Win32\";\n  } else {\n    return \"Unix\";\n  }\n};\n\nfunction caml_sys_time(param) {\n  if (typeof process === \"undefined\" || process.uptime === undefined) {\n    return -1;\n  } else {\n    return process.uptime();\n  }\n}\n\nfunction caml_sys_random_seed(param) {\n  return [((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command(_cmd) {\n  return 127;\n}\n\nvar caml_sys_getcwd = function caml_sys_getcwd(param) {\n  if (typeof process === \"undefined\" || process.cwd === undefined) {\n    return \"/\";\n  }\n\n  return process.cwd();\n};\n\nfunction caml_sys_get_argv(param) {\n  if (typeof process === \"undefined\") {\n    return (\n      /* tuple */\n      [\"\", [\"\"]]\n    );\n  }\n\n  var argv = process.argv;\n\n  if (argv == null) {\n    return (\n      /* tuple */\n      [\"\", [\"\"]]\n    );\n  } else {\n    return (\n      /* tuple */\n      [argv[0], argv]\n    );\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  if (typeof process !== \"undefined\") {\n    return process.exit(exit_code);\n  }\n}\n\nfunction caml_sys_is_directory(_s) {\n  throw [Caml_builtin_exceptions.failure, \"caml_sys_is_directory not implemented\"];\n}\n\nfunction caml_sys_file_exists(_s) {\n  throw [Caml_builtin_exceptions.failure, \"caml_sys_file_exists not implemented\"];\n}\n\nexport { caml_sys_getenv, caml_sys_time, os_type, caml_sys_random_seed, caml_sys_system_command, caml_sys_getcwd, caml_sys_get_argv, caml_sys_exit, caml_sys_is_directory, caml_sys_file_exists };\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/es6/caml_sys.js"],"names":["Caml_builtin_exceptions","caml_sys_getenv","s","process","env","undefined","not_found","x","os_type","_","platform","caml_sys_time","param","uptime","caml_sys_random_seed","Date","now","Math","random","caml_sys_system_command","_cmd","caml_sys_getcwd","cwd","caml_sys_get_argv","argv","caml_sys_exit","exit_code","exit","caml_sys_is_directory","_s","failure","caml_sys_file_exists"],"mappings":"AAEA,OAAO,KAAKA,uBAAZ,MAAyC,8BAAzC;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAAR,KAAgBC,SAAtD,EAAiE;AAC/D,UAAML,uBAAuB,CAACM,SAA9B;AACD;;AACD,MAAIC,CAAC,GAAGJ,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAR;;AACA,MAAIK,CAAC,KAAKF,SAAV,EAAqB;AACnB,WAAOE,CAAP;AACD;;AACD,QAAMP,uBAAuB,CAACM,SAA9B;AACD;;AAED,IAAIE,OAAO,GAAI,SAAXA,OAAW,CAASC,CAAT,EAAW;AACxB,MAAG,OAAON,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACO,QAAR,KAAqB,OAA1D,EAAkE;AAC5D,WAAO,OAAP;AACL,GAFD,MAGK;AACH,WAAO,MAAP;AACD;AACF,CAPD;;AASA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAI,OAAOT,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACU,MAAR,KAAmBR,SAAzD,EAAoE;AAClE,WAAO,CAAC,CAAR;AACD,GAFD,MAEO;AACL,WAAOF,OAAO,CAACU,MAAR,EAAP;AACD;AACF;;AAED,SAASC,oBAAT,CAA8BF,KAA9B,EAAqC;AACnC,SAAO,CAAC,CAAC,CAACG,IAAI,CAACC,GAAL,KAAa,CAAd,IAAmB,UAApB,IAAkCC,IAAI,CAACC,MAAL,EAAlC,GAAkD,CAAnD,CAAP;AACD;;AAED,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,SAAO,GAAP;AACD;;AAED,IAAIC,eAAe,GAAI,SAAnBA,eAAmB,CAAST,KAAT,EAAe;AAClC,MAAI,OAAOT,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACmB,GAAR,KAAgBjB,SAAtD,EAAgE;AAC9D,WAAO,GAAP;AACD;;AACD,SAAOF,OAAO,CAACmB,GAAR,EAAP;AACD,CALH;;AAOA,SAASC,iBAAT,CAA2BX,KAA3B,EAAkC;AAChC,MAAI,OAAOT,OAAP,KAAmB,WAAvB,EAAoC;AAClC;AAAO;AAAW,OACV,EADU,EAEV,CAAC,EAAD,CAFU;AAAlB;AAID;;AACD,MAAIqB,IAAI,GAAGrB,OAAO,CAACqB,IAAnB;;AACA,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AAAO;AAAW,OACV,EADU,EAEV,CAAC,EAAD,CAFU;AAAlB;AAID,GALD,MAKO;AACL;AAAO;AAAW,OACVA,IAAI,CAAC,CAAD,CADM,EAEVA,IAFU;AAAlB;AAID;AACF;;AAED,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,MAAI,OAAOvB,OAAP,KAAmB,WAAvB,EAAoC;AAClC,WAAOA,OAAO,CAACwB,IAAR,CAAaD,SAAb,CAAP;AACD;AAEF;;AAED,SAASE,qBAAT,CAA+BC,EAA/B,EAAmC;AACjC,QAAM,CACA7B,uBAAuB,CAAC8B,OADxB,EAEA,uCAFA,CAAN;AAID;;AAED,SAASC,oBAAT,CAA8BF,EAA9B,EAAkC;AAChC,QAAM,CACA7B,uBAAuB,CAAC8B,OADxB,EAEA,sCAFA,CAAN;AAID;;AAED,SACE7B,eADF,EAEEU,aAFF,EAGEH,OAHF,EAIEM,oBAJF,EAKEK,uBALF,EAMEE,eANF,EAOEE,iBAPF,EAQEE,aARF,EASEG,qBATF,EAUEG,oBAVF;AAaA","sourcesContent":["\n\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_sys_getenv(s) {\n  if (typeof process === \"undefined\" || process.env === undefined) {\n    throw Caml_builtin_exceptions.not_found;\n  }\n  var x = process.env[s];\n  if (x !== undefined) {\n    return x;\n  }\n  throw Caml_builtin_exceptions.not_found;\n}\n\nvar os_type = (function(_){\n  if(typeof process !== 'undefined' && process.platform === 'win32'){\n        return \"Win32\"    \n  }\n  else {\n    return \"Unix\"\n  }\n});\n\nfunction caml_sys_time(param) {\n  if (typeof process === \"undefined\" || process.uptime === undefined) {\n    return -1;\n  } else {\n    return process.uptime();\n  }\n}\n\nfunction caml_sys_random_seed(param) {\n  return [((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command(_cmd) {\n  return 127;\n}\n\nvar caml_sys_getcwd = (function(param){\n    if (typeof process === \"undefined\" || process.cwd === undefined){\n      return \"/\"  \n    }\n    return process.cwd()\n  });\n\nfunction caml_sys_get_argv(param) {\n  if (typeof process === \"undefined\") {\n    return /* tuple */[\n            \"\",\n            [\"\"]\n          ];\n  }\n  var argv = process.argv;\n  if (argv == null) {\n    return /* tuple */[\n            \"\",\n            [\"\"]\n          ];\n  } else {\n    return /* tuple */[\n            argv[0],\n            argv\n          ];\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  if (typeof process !== \"undefined\") {\n    return process.exit(exit_code);\n  }\n  \n}\n\nfunction caml_sys_is_directory(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_is_directory not implemented\"\n      ];\n}\n\nfunction caml_sys_file_exists(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_file_exists not implemented\"\n      ];\n}\n\nexport {\n  caml_sys_getenv ,\n  caml_sys_time ,\n  os_type ,\n  caml_sys_random_seed ,\n  caml_sys_system_command ,\n  caml_sys_getcwd ,\n  caml_sys_get_argv ,\n  caml_sys_exit ,\n  caml_sys_is_directory ,\n  caml_sys_file_exists ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}