{"ast":null,"code":"import * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  }\n\n  return x / y | 0;\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  }\n\n  return x % y;\n}\n\nfunction caml_bswap16(x) {\n  return (x & 255) << 8 | (x & 65280) >>> 8;\n}\n\nfunction caml_int32_bswap(x) {\n  return (x & 255) << 24 | (x & 65280) << 8 | (x & 16711680) >>> 8 | (x & 4278190080) >>> 24;\n}\n\nvar imul = Math.imul || function (x, y) {\n  y |= 0;\n  return ((x >> 16) * y << 16) + (x & 0xffff) * y | 0;\n};\n\nvar caml_nativeint_bswap = caml_int32_bswap;\nexport { div, mod_, caml_bswap16, caml_int32_bswap, caml_nativeint_bswap, imul };\n/* imul Not a pure module */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/es6/caml_int32.js"],"names":["Caml_builtin_exceptions","div","x","y","division_by_zero","mod_","caml_bswap16","caml_int32_bswap","imul","Math","caml_nativeint_bswap"],"mappings":"AAEA,OAAO,KAAKA,uBAAZ,MAAyC,8BAAzC;;AAEA,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,MAAIA,CAAC,KAAK,CAAV,EAAa;AACX,UAAMH,uBAAuB,CAACI,gBAA9B;AACD;;AACD,SAAOF,CAAC,GAAGC,CAAJ,GAAQ,CAAf;AACD;;AAED,SAASE,IAAT,CAAcH,CAAd,EAAiBC,CAAjB,EAAoB;AAClB,MAAIA,CAAC,KAAK,CAAV,EAAa;AACX,UAAMH,uBAAuB,CAACI,gBAA9B;AACD;;AACD,SAAOF,CAAC,GAAGC,CAAX;AACD;;AAED,SAASG,YAAT,CAAsBJ,CAAtB,EAAyB;AACvB,SAAQ,CAACA,CAAC,GAAG,GAAL,KAAa,CAAd,GAAoB,CAACA,CAAC,GAAG,KAAL,MAAgB,CAA3C;AACD;;AAED,SAASK,gBAAT,CAA0BL,CAA1B,EAA6B;AAC3B,SAAQ,CAACA,CAAC,GAAG,GAAL,KAAa,EAAd,GAAqB,CAACA,CAAC,GAAG,KAAL,KAAe,CAApC,GAA0C,CAACA,CAAC,GAAG,QAAL,MAAmB,CAA7D,GAAmE,CAACA,CAAC,GAAG,UAAL,MAAqB,EAA/F;AACD;;AAED,IAAIM,IAAI,GAAIC,IAAI,CAACD,IAAL,IAAa,UAAUN,CAAV,EAAYC,CAAZ,EAAe;AACtCA,EAAAA,CAAC,IAAI,CAAL;AAAQ,SAAQ,CAAE,CAACD,CAAC,IAAI,EAAN,IAAYC,CAAb,IAAmB,EAApB,IAA0B,CAACD,CAAC,GAAG,MAAL,IAAeC,CAA1C,GAA6C,CAApD;AACT,CAFD;;AAIA,IAAIO,oBAAoB,GAAGH,gBAA3B;AAEA,SACEN,GADF,EAEEI,IAFF,EAGEC,YAHF,EAIEC,gBAJF,EAKEG,oBALF,EAMEF,IANF;AASA","sourcesContent":["\n\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  }\n  return x / y | 0;\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  }\n  return x % y;\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = (Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n});\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexport {\n  div ,\n  mod_ ,\n  caml_bswap16 ,\n  caml_int32_bswap ,\n  caml_nativeint_bswap ,\n  imul ,\n  \n}\n/* imul Not a pure module */\n"]},"metadata":{},"sourceType":"module"}