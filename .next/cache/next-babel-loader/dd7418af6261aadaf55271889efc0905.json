{"ast":null,"code":"import * as Caml_int32 from \"./caml_int32.js\";\nimport * as Caml_primitive from \"./caml_primitive.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction mk(lo, hi) {\n  return (\n    /* Int64 */\n    [\n    /* hi */\n    hi,\n    /* lo */\n    lo >>> 0]\n  );\n}\n\nvar min_int =\n/* Int64 */\n[\n/* hi */\n-2147483648,\n/* lo */\n0];\nvar max_int =\n/* Int64 */\n[\n/* hi */\n2147483647,\n/* lo */\n4294967295];\nvar one =\n/* Int64 */\n[\n/* hi */\n0,\n/* lo */\n1];\nvar zero =\n/* Int64 */\n[\n/* hi */\n0,\n/* lo */\n0];\nvar neg_one =\n/* Int64 */\n[\n/* hi */\n-1,\n/* lo */\n4294967295];\n\nfunction neg_signed(x) {\n  return (x & 2147483648) !== 0;\n}\n\nfunction non_neg_signed(x) {\n  return (x & 2147483648) === 0;\n}\n\nfunction succ(param) {\n  var x_lo = param[\n  /* lo */\n  1];\n  var x_hi = param[\n  /* hi */\n  0];\n  var lo = x_lo + 1 | 0;\n  return mk(lo, x_hi + (lo === 0 ? 1 : 0) | 0);\n}\n\nfunction neg(param) {\n  var other_lo = (param[\n  /* lo */\n  1] ^ -1) + 1 | 0;\n  return mk(other_lo, (param[\n  /* hi */\n  0] ^ -1) + (other_lo === 0 ? 1 : 0) | 0);\n}\n\nfunction add_aux(param, y_lo, y_hi) {\n  var x_lo = param[\n  /* lo */\n  1];\n  var lo = x_lo + y_lo | 0;\n  var overflow = neg_signed(x_lo) && (neg_signed(y_lo) || non_neg_signed(lo)) || neg_signed(y_lo) && non_neg_signed(lo) ? 1 : 0;\n  return mk(lo, param[\n  /* hi */\n  0] + y_hi + overflow | 0);\n}\n\nfunction add(self, param) {\n  return add_aux(self, param[\n  /* lo */\n  1], param[\n  /* hi */\n  0]);\n}\n\nfunction eq(x, y) {\n  if (x[\n  /* hi */\n  0] === y[\n  /* hi */\n  0]) {\n    return x[\n    /* lo */\n    1] === y[\n    /* lo */\n    1];\n  } else {\n    return false;\n  }\n}\n\nfunction equal_null(x, y) {\n  if (y !== null) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_undefined(x, y) {\n  if (y !== undefined) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_nullable(x, y) {\n  if (y == null) {\n    return false;\n  } else {\n    return eq(x, y);\n  }\n}\n\nfunction sub_aux(x, lo, hi) {\n  var y_lo = (lo ^ -1) + 1 >>> 0;\n  var y_hi = (hi ^ -1) + (y_lo === 0 ? 1 : 0) | 0;\n  return add_aux(x, y_lo, y_hi);\n}\n\nfunction sub(self, param) {\n  return sub_aux(self, param[\n  /* lo */\n  1], param[\n  /* hi */\n  0]);\n}\n\nfunction lsl_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  }\n\n  var lo = x[\n  /* lo */\n  1];\n\n  if (numBits >= 32) {\n    return mk(0, lo << (numBits - 32 | 0));\n  } else {\n    return mk(lo << numBits, lo >>> (32 - numBits | 0) | x[\n    /* hi */\n    0] << numBits);\n  }\n}\n\nfunction lsr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  }\n\n  var hi = x[\n  /* hi */\n  0];\n  var offset = numBits - 32 | 0;\n\n  if (offset === 0) {\n    return mk(hi, 0);\n  } else if (offset > 0) {\n    return mk(hi >>> offset, 0);\n  } else {\n    return mk(hi << (-offset | 0) | x[\n    /* lo */\n    1] >>> numBits, hi >>> numBits);\n  }\n}\n\nfunction asr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  }\n\n  var hi = x[\n  /* hi */\n  0];\n\n  if (numBits < 32) {\n    return mk(hi << (32 - numBits | 0) | x[\n    /* lo */\n    1] >>> numBits, hi >> numBits);\n  } else {\n    return mk(hi >> (numBits - 32 | 0), hi >= 0 ? 0 : -1);\n  }\n}\n\nfunction is_zero(param) {\n  if (param[\n  /* hi */\n  0] !== 0 || param[\n  /* lo */\n  1] !== 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction mul(_this, _other) {\n  while (true) {\n    var other = _other;\n    var $$this = _this;\n    var lo;\n    var exit = 0;\n    var exit$1 = 0;\n\n    if ($$this[\n    /* hi */\n    0] !== 0) {\n      exit$1 = 3;\n    } else {\n      if ($$this[\n      /* lo */\n      1] === 0) {\n        return zero;\n      }\n\n      exit$1 = 3;\n    }\n\n    if (exit$1 === 3) {\n      if (other[\n      /* hi */\n      0] !== 0) {\n        exit = 2;\n      } else {\n        if (other[\n        /* lo */\n        1] === 0) {\n          return zero;\n        }\n\n        exit = 2;\n      }\n    }\n\n    if (exit === 2) {\n      var this_hi = $$this[\n      /* hi */\n      0];\n      var exit$2 = 0;\n\n      if (this_hi !== -2147483648 || $$this[\n      /* lo */\n      1] !== 0) {\n        exit$2 = 3;\n      } else {\n        lo = other[\n        /* lo */\n        1];\n      }\n\n      if (exit$2 === 3) {\n        var other_hi = other[\n        /* hi */\n        0];\n        var lo$1 = $$this[\n        /* lo */\n        1];\n        var exit$3 = 0;\n\n        if (other_hi !== -2147483648 || other[\n        /* lo */\n        1] !== 0) {\n          exit$3 = 4;\n        } else {\n          lo = lo$1;\n        }\n\n        if (exit$3 === 4) {\n          var other_lo = other[\n          /* lo */\n          1];\n\n          if (this_hi < 0) {\n            if (other_hi >= 0) {\n              return neg(mul(neg($$this), other));\n            }\n\n            _other = neg(other);\n            _this = neg($$this);\n            continue;\n          }\n\n          if (other_hi < 0) {\n            return neg(mul($$this, neg(other)));\n          }\n\n          var a48 = this_hi >>> 16;\n          var a32 = this_hi & 65535;\n          var a16 = lo$1 >>> 16;\n          var a00 = lo$1 & 65535;\n          var b48 = other_hi >>> 16;\n          var b32 = other_hi & 65535;\n          var b16 = other_lo >>> 16;\n          var b00 = other_lo & 65535;\n          var c48 = 0;\n          var c32 = 0;\n          var c16 = 0;\n          var c00 = a00 * b00;\n          c16 = (c00 >>> 16) + a16 * b00;\n          c32 = c16 >>> 16;\n          c16 = (c16 & 65535) + a00 * b16;\n          c32 = c32 + (c16 >>> 16) + a32 * b00;\n          c48 = c32 >>> 16;\n          c32 = (c32 & 65535) + a16 * b16;\n          c48 = c48 + (c32 >>> 16);\n          c32 = (c32 & 65535) + a00 * b32;\n          c48 = c48 + (c32 >>> 16);\n          c32 = c32 & 65535;\n          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;\n          return mk(c00 & 65535 | (c16 & 65535) << 16, c32 | c48 << 16);\n        }\n      }\n    }\n\n    if ((lo & 1) === 0) {\n      return zero;\n    } else {\n      return min_int;\n    }\n  }\n\n  ;\n}\n\nfunction swap(param) {\n  return mk(Caml_int32.caml_int32_bswap(param[\n  /* hi */\n  0]), Caml_int32.caml_int32_bswap(param[\n  /* lo */\n  1]));\n}\n\nfunction xor(param, param$1) {\n  return mk(param[\n  /* lo */\n  1] ^ param$1[\n  /* lo */\n  1], param[\n  /* hi */\n  0] ^ param$1[\n  /* hi */\n  0]);\n}\n\nfunction or_(param, param$1) {\n  return mk(param[\n  /* lo */\n  1] | param$1[\n  /* lo */\n  1], param[\n  /* hi */\n  0] | param$1[\n  /* hi */\n  0]);\n}\n\nfunction and_(param, param$1) {\n  return mk(param[\n  /* lo */\n  1] & param$1[\n  /* lo */\n  1], param[\n  /* hi */\n  0] & param$1[\n  /* hi */\n  0]);\n}\n\nfunction ge(param, param$1) {\n  var other_hi = param$1[\n  /* hi */\n  0];\n  var hi = param[\n  /* hi */\n  0];\n\n  if (hi > other_hi) {\n    return true;\n  } else if (hi < other_hi) {\n    return false;\n  } else {\n    return param[\n    /* lo */\n    1] >= param$1[\n    /* lo */\n    1];\n  }\n}\n\nfunction neq(x, y) {\n  return !eq(x, y);\n}\n\nfunction lt(x, y) {\n  return !ge(x, y);\n}\n\nfunction gt(x, y) {\n  if (x[\n  /* hi */\n  0] > y[\n  /* hi */\n  0]) {\n    return true;\n  } else if (x[\n  /* hi */\n  0] < y[\n  /* hi */\n  0]) {\n    return false;\n  } else {\n    return x[\n    /* lo */\n    1] > y[\n    /* lo */\n    1];\n  }\n}\n\nfunction le(x, y) {\n  return !gt(x, y);\n}\n\nfunction min(x, y) {\n  if (ge(x, y)) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction max(x, y) {\n  if (gt(x, y)) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction to_float(param) {\n  return param[\n  /* hi */\n  0] * 0x100000000 + param[\n  /* lo */\n  1];\n}\n\nfunction of_float(x) {\n  if (isNaN(x) || !isFinite(x)) {\n    return zero;\n  } else if (x <= -9.22337203685477581e+18) {\n    return min_int;\n  } else if (x + 1 >= 9.22337203685477581e+18) {\n    return max_int;\n  } else if (x < 0) {\n    return neg(of_float(-x));\n  } else {\n    return mk(x % 4294967296 | 0, x / 4294967296 | 0);\n  }\n}\n\nfunction isSafeInteger(param) {\n  var hi = param[\n  /* hi */\n  0];\n  var top11Bits = hi >> 21;\n\n  if (top11Bits === 0) {\n    return true;\n  } else if (top11Bits === -1) {\n    return !(param[\n    /* lo */\n    1] === 0 && hi === (4292870144 | 0));\n  } else {\n    return false;\n  }\n}\n\nfunction to_string(self) {\n  if (isSafeInteger(self)) {\n    return String(to_float(self));\n  }\n\n  if (self[\n  /* hi */\n  0] < 0) {\n    if (eq(self, min_int)) {\n      return \"-9223372036854775808\";\n    } else {\n      return \"-\" + to_string(neg(self));\n    }\n  }\n\n  var approx_div1 = of_float(Math.floor(to_float(self) / 10));\n  var lo = approx_div1[\n  /* lo */\n  1];\n  var hi = approx_div1[\n  /* hi */\n  0];\n  var match = sub_aux(sub_aux(self, lo << 3, lo >>> 29 | hi << 3), lo << 1, lo >>> 31 | hi << 1);\n  var rem_lo = match[\n  /* lo */\n  1];\n  var rem_hi = match[\n  /* hi */\n  0];\n\n  if (rem_lo === 0 && rem_hi === 0) {\n    return to_string(approx_div1) + \"0\";\n  }\n\n  if (rem_hi < 0) {\n    var rem_lo$1 = (rem_lo ^ -1) + 1 >>> 0;\n    var delta = Math.ceil(rem_lo$1 / 10);\n    var remainder = 10 * delta - rem_lo$1;\n    return to_string(sub_aux(approx_div1, delta | 0, 0)) + String(remainder | 0);\n  }\n\n  var rem_lo$2 = rem_lo;\n  var delta$1 = Math.floor(rem_lo$2 / 10);\n  var remainder$1 = rem_lo$2 - 10 * delta$1;\n  return to_string(add_aux(approx_div1, delta$1 | 0, 0)) + String(remainder$1 | 0);\n}\n\nfunction div(_self, _other) {\n  while (true) {\n    var other = _other;\n    var self = _self;\n    var exit = 0;\n    var exit$1 = 0;\n\n    if (other[\n    /* hi */\n    0] !== 0 || other[\n    /* lo */\n    1] !== 0) {\n      exit$1 = 3;\n    } else {\n      throw Caml_builtin_exceptions.division_by_zero;\n    }\n\n    if (exit$1 === 3) {\n      var match = self[\n      /* hi */\n      0];\n\n      if (match !== -2147483648) {\n        if (match !== 0) {\n          exit = 2;\n        } else {\n          if (self[\n          /* lo */\n          1] === 0) {\n            return zero;\n          }\n\n          exit = 2;\n        }\n      } else if (self[\n      /* lo */\n      1] !== 0) {\n        exit = 2;\n      } else {\n        if (eq(other, one) || eq(other, neg_one)) {\n          return self;\n        }\n\n        if (eq(other, min_int)) {\n          return one;\n        }\n\n        var half_this = asr_(self, 1);\n        var approx = lsl_(div(half_this, other), 1);\n        var exit$2 = 0;\n\n        if (approx[\n        /* hi */\n        0] !== 0) {\n          exit$2 = 4;\n        } else {\n          if (approx[\n          /* lo */\n          1] === 0) {\n            if (other[\n            /* hi */\n            0] < 0) {\n              return one;\n            } else {\n              return neg(one);\n            }\n          }\n\n          exit$2 = 4;\n        }\n\n        if (exit$2 === 4) {\n          var rem = sub(self, mul(other, approx));\n          return add(approx, div(rem, other));\n        }\n      }\n    }\n\n    if (exit === 2 && other[\n    /* hi */\n    0] === -2147483648 && other[\n    /* lo */\n    1] === 0) {\n      return zero;\n    }\n\n    var other_hi = other[\n    /* hi */\n    0];\n\n    if (self[\n    /* hi */\n    0] < 0) {\n      if (other_hi >= 0) {\n        return neg(div(neg(self), other));\n      }\n\n      _other = neg(other);\n      _self = neg(self);\n      continue;\n    }\n\n    if (other_hi < 0) {\n      return neg(div(self, neg(other)));\n    }\n\n    var res = zero;\n    var rem$1 = self;\n\n    while (ge(rem$1, other)) {\n      var approx$1 = Caml_primitive.caml_float_max(1, Math.floor(to_float(rem$1) / to_float(other)));\n      var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);\n      var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n      var approxRes = of_float(approx$1);\n      var approxRem = mul(approxRes, other);\n\n      while (approxRem[\n      /* hi */\n      0] < 0 || gt(approxRem, rem$1)) {\n        approx$1 = approx$1 - delta;\n        approxRes = of_float(approx$1);\n        approxRem = mul(approxRes, other);\n      }\n\n      ;\n\n      if (is_zero(approxRes)) {\n        approxRes = one;\n      }\n\n      res = add(res, approxRes);\n      rem$1 = sub(rem$1, approxRem);\n    }\n\n    ;\n    return res;\n  }\n\n  ;\n}\n\nfunction mod_(self, other) {\n  return sub(self, mul(div(self, other), other));\n}\n\nfunction div_mod(self, other) {\n  var quotient = div(self, other);\n  return (\n    /* tuple */\n    [quotient, sub(self, mul(quotient, other))]\n  );\n}\n\nfunction compare(self, other) {\n  var v = Caml_primitive.caml_nativeint_compare(self[\n  /* hi */\n  0], other[\n  /* hi */\n  0]);\n\n  if (v === 0) {\n    return Caml_primitive.caml_nativeint_compare(self[\n    /* lo */\n    1], other[\n    /* lo */\n    1]);\n  } else {\n    return v;\n  }\n}\n\nfunction of_int32(lo) {\n  return mk(lo, lo < 0 ? -1 : 0);\n}\n\nfunction to_int32(x) {\n  return x[\n  /* lo */\n  1] | 0;\n}\n\nfunction to_hex(x) {\n  var x_lo = x[\n  /* lo */\n  1];\n  var x_hi = x[\n  /* hi */\n  0];\n\n  var aux = function (v) {\n    return (v >>> 0).toString(16);\n  };\n\n  if (x_hi === 0 && x_lo === 0) {\n    return \"0\";\n  }\n\n  if (x_lo === 0) {\n    return aux(x_hi) + \"00000000\";\n  }\n\n  if (x_hi === 0) {\n    return aux(x_lo);\n  }\n\n  var lo = aux(x_lo);\n  var pad = 8 - lo.length | 0;\n\n  if (pad <= 0) {\n    return aux(x_hi) + lo;\n  } else {\n    return aux(x_hi) + (\"0\".repeat(pad) + lo);\n  }\n}\n\nfunction discard_sign(x) {\n  return (\n    /* Int64 */\n    [\n    /* hi */\n    2147483647 & x[\n    /* hi */\n    0],\n    /* lo */\n    x[\n    /* lo */\n    1]]\n  );\n}\n\nfunction float_of_bits(x) {\n  return function (lo, hi) {\n    return new Float64Array(new Int32Array([lo, hi]).buffer)[0];\n  }(x[\n  /* lo */\n  1], x[\n  /* hi */\n  0]);\n}\n\nfunction bits_of_float(x) {\n  var buf = function (x) {\n    return new Int32Array(new Float64Array([x]).buffer);\n  }(x);\n\n  return mk(buf[0], buf[1]);\n}\n\nexport { mk, succ, min_int, max_int, one, zero, neg_one, of_int32, to_int32, add, neg, sub, lsl_, lsr_, asr_, is_zero, mul, xor, or_, and_, swap, ge, eq, neq, lt, gt, le, equal_null, equal_undefined, equal_nullable, min, max, to_float, of_float, div, mod_, compare, float_of_bits, bits_of_float, div_mod, to_hex, discard_sign, to_string };\n/* Caml_int32 Not a pure module */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/es6/caml_int64.js"],"names":["Caml_int32","Caml_primitive","Caml_builtin_exceptions","mk","lo","hi","min_int","max_int","one","zero","neg_one","neg_signed","x","non_neg_signed","succ","param","x_lo","x_hi","neg","other_lo","add_aux","y_lo","y_hi","overflow","add","self","eq","y","equal_null","equal_undefined","undefined","equal_nullable","sub_aux","sub","lsl_","numBits","lsr_","offset","asr_","is_zero","mul","_this","_other","other","$$this","exit","exit$1","this_hi","exit$2","other_hi","lo$1","exit$3","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","swap","caml_int32_bswap","xor","param$1","or_","and_","ge","neq","lt","gt","le","min","max","to_float","of_float","isNaN","isFinite","isSafeInteger","top11Bits","to_string","String","approx_div1","Math","floor","match","rem_lo","rem_hi","rem_lo$1","delta","ceil","remainder","rem_lo$2","delta$1","remainder$1","div","_self","division_by_zero","half_this","approx","rem","res","rem$1","approx$1","caml_float_max","log2","log","LN2","pow","approxRes","approxRem","mod_","div_mod","quotient","compare","v","caml_nativeint_compare","of_int32","to_int32","to_hex","aux","toString","pad","length","repeat","discard_sign","float_of_bits","Float64Array","Int32Array","buffer","bits_of_float","buf"],"mappings":"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","sourcesContent":["\n\nimport * as Caml_int32 from \"./caml_int32.js\";\nimport * as Caml_primitive from \"./caml_primitive.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction mk(lo, hi) {\n  return /* Int64 */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nvar min_int = /* Int64 */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nvar max_int = /* Int64 */[\n  /* hi */2147483647,\n  /* lo */4294967295\n];\n\nvar one = /* Int64 */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar zero = /* Int64 */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar neg_one = /* Int64 */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nfunction neg_signed(x) {\n  return (x & 2147483648) !== 0;\n}\n\nfunction non_neg_signed(x) {\n  return (x & 2147483648) === 0;\n}\n\nfunction succ(param) {\n  var x_lo = param[/* lo */1];\n  var x_hi = param[/* hi */0];\n  var lo = x_lo + 1 | 0;\n  return mk(lo, x_hi + (\n              lo === 0 ? 1 : 0\n            ) | 0);\n}\n\nfunction neg(param) {\n  var other_lo = (param[/* lo */1] ^ -1) + 1 | 0;\n  return mk(other_lo, (param[/* hi */0] ^ -1) + (\n              other_lo === 0 ? 1 : 0\n            ) | 0);\n}\n\nfunction add_aux(param, y_lo, y_hi) {\n  var x_lo = param[/* lo */1];\n  var lo = x_lo + y_lo | 0;\n  var overflow = neg_signed(x_lo) && (neg_signed(y_lo) || non_neg_signed(lo)) || neg_signed(y_lo) && non_neg_signed(lo) ? 1 : 0;\n  return mk(lo, param[/* hi */0] + y_hi + overflow | 0);\n}\n\nfunction add(self, param) {\n  return add_aux(self, param[/* lo */1], param[/* hi */0]);\n}\n\nfunction eq(x, y) {\n  if (x[/* hi */0] === y[/* hi */0]) {\n    return x[/* lo */1] === y[/* lo */1];\n  } else {\n    return false;\n  }\n}\n\nfunction equal_null(x, y) {\n  if (y !== null) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_undefined(x, y) {\n  if (y !== undefined) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_nullable(x, y) {\n  if (y == null) {\n    return false;\n  } else {\n    return eq(x, y);\n  }\n}\n\nfunction sub_aux(x, lo, hi) {\n  var y_lo = ((lo ^ -1) + 1 >>> 0);\n  var y_hi = (hi ^ -1) + (\n    y_lo === 0 ? 1 : 0\n  ) | 0;\n  return add_aux(x, y_lo, y_hi);\n}\n\nfunction sub(self, param) {\n  return sub_aux(self, param[/* lo */1], param[/* hi */0]);\n}\n\nfunction lsl_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  }\n  var lo = x[/* lo */1];\n  if (numBits >= 32) {\n    return mk(0, (lo << (numBits - 32 | 0)));\n  } else {\n    return mk((lo << numBits), (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits));\n  }\n}\n\nfunction lsr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  }\n  var hi = x[/* hi */0];\n  var offset = numBits - 32 | 0;\n  if (offset === 0) {\n    return mk(hi, 0);\n  } else if (offset > 0) {\n    return mk((hi >>> offset), 0);\n  } else {\n    return mk((hi << (-offset | 0)) | (x[/* lo */1] >>> numBits), (hi >>> numBits));\n  }\n}\n\nfunction asr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  }\n  var hi = x[/* hi */0];\n  if (numBits < 32) {\n    return mk((hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits), (hi >> numBits));\n  } else {\n    return mk((hi >> (numBits - 32 | 0)), hi >= 0 ? 0 : -1);\n  }\n}\n\nfunction is_zero(param) {\n  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction mul(_this, _other) {\n  while(true) {\n    var other = _other;\n    var $$this = _this;\n    var lo;\n    var exit = 0;\n    var exit$1 = 0;\n    if ($$this[/* hi */0] !== 0) {\n      exit$1 = 3;\n    } else {\n      if ($$this[/* lo */1] === 0) {\n        return zero;\n      }\n      exit$1 = 3;\n    }\n    if (exit$1 === 3) {\n      if (other[/* hi */0] !== 0) {\n        exit = 2;\n      } else {\n        if (other[/* lo */1] === 0) {\n          return zero;\n        }\n        exit = 2;\n      }\n    }\n    if (exit === 2) {\n      var this_hi = $$this[/* hi */0];\n      var exit$2 = 0;\n      if (this_hi !== -2147483648 || $$this[/* lo */1] !== 0) {\n        exit$2 = 3;\n      } else {\n        lo = other[/* lo */1];\n      }\n      if (exit$2 === 3) {\n        var other_hi = other[/* hi */0];\n        var lo$1 = $$this[/* lo */1];\n        var exit$3 = 0;\n        if (other_hi !== -2147483648 || other[/* lo */1] !== 0) {\n          exit$3 = 4;\n        } else {\n          lo = lo$1;\n        }\n        if (exit$3 === 4) {\n          var other_lo = other[/* lo */1];\n          if (this_hi < 0) {\n            if (other_hi >= 0) {\n              return neg(mul(neg($$this), other));\n            }\n            _other = neg(other);\n            _this = neg($$this);\n            continue ;\n          }\n          if (other_hi < 0) {\n            return neg(mul($$this, neg(other)));\n          }\n          var a48 = (this_hi >>> 16);\n          var a32 = this_hi & 65535;\n          var a16 = (lo$1 >>> 16);\n          var a00 = lo$1 & 65535;\n          var b48 = (other_hi >>> 16);\n          var b32 = other_hi & 65535;\n          var b16 = (other_lo >>> 16);\n          var b00 = other_lo & 65535;\n          var c48 = 0;\n          var c32 = 0;\n          var c16 = 0;\n          var c00 = a00 * b00;\n          c16 = (c00 >>> 16) + a16 * b00;\n          c32 = (c16 >>> 16);\n          c16 = (c16 & 65535) + a00 * b16;\n          c32 = c32 + (c16 >>> 16) + a32 * b00;\n          c48 = (c32 >>> 16);\n          c32 = (c32 & 65535) + a16 * b16;\n          c48 = c48 + (c32 >>> 16);\n          c32 = (c32 & 65535) + a00 * b32;\n          c48 = c48 + (c32 >>> 16);\n          c32 = c32 & 65535;\n          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;\n          return mk(c00 & 65535 | ((c16 & 65535) << 16), c32 | (c48 << 16));\n        }\n        \n      }\n      \n    }\n    if ((lo & 1) === 0) {\n      return zero;\n    } else {\n      return min_int;\n    }\n  };\n}\n\nfunction swap(param) {\n  return mk(Caml_int32.caml_int32_bswap(param[/* hi */0]), Caml_int32.caml_int32_bswap(param[/* lo */1]));\n}\n\nfunction xor(param, param$1) {\n  return mk(param[/* lo */1] ^ param$1[/* lo */1], param[/* hi */0] ^ param$1[/* hi */0]);\n}\n\nfunction or_(param, param$1) {\n  return mk(param[/* lo */1] | param$1[/* lo */1], param[/* hi */0] | param$1[/* hi */0]);\n}\n\nfunction and_(param, param$1) {\n  return mk(param[/* lo */1] & param$1[/* lo */1], param[/* hi */0] & param$1[/* hi */0]);\n}\n\nfunction ge(param, param$1) {\n  var other_hi = param$1[/* hi */0];\n  var hi = param[/* hi */0];\n  if (hi > other_hi) {\n    return true;\n  } else if (hi < other_hi) {\n    return false;\n  } else {\n    return param[/* lo */1] >= param$1[/* lo */1];\n  }\n}\n\nfunction neq(x, y) {\n  return !eq(x, y);\n}\n\nfunction lt(x, y) {\n  return !ge(x, y);\n}\n\nfunction gt(x, y) {\n  if (x[/* hi */0] > y[/* hi */0]) {\n    return true;\n  } else if (x[/* hi */0] < y[/* hi */0]) {\n    return false;\n  } else {\n    return x[/* lo */1] > y[/* lo */1];\n  }\n}\n\nfunction le(x, y) {\n  return !gt(x, y);\n}\n\nfunction min(x, y) {\n  if (ge(x, y)) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction max(x, y) {\n  if (gt(x, y)) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction to_float(param) {\n  return param[/* hi */0] * 0x100000000 + param[/* lo */1];\n}\n\nfunction of_float(x) {\n  if (isNaN(x) || !isFinite(x)) {\n    return zero;\n  } else if (x <= -9.22337203685477581e+18) {\n    return min_int;\n  } else if (x + 1 >= 9.22337203685477581e+18) {\n    return max_int;\n  } else if (x < 0) {\n    return neg(of_float(-x));\n  } else {\n    return mk(x % 4294967296 | 0, x / 4294967296 | 0);\n  }\n}\n\nfunction isSafeInteger(param) {\n  var hi = param[/* hi */0];\n  var top11Bits = (hi >> 21);\n  if (top11Bits === 0) {\n    return true;\n  } else if (top11Bits === -1) {\n    return !(param[/* lo */1] === 0 && hi === (4292870144 | 0));\n  } else {\n    return false;\n  }\n}\n\nfunction to_string(self) {\n  if (isSafeInteger(self)) {\n    return String(to_float(self));\n  }\n  if (self[/* hi */0] < 0) {\n    if (eq(self, min_int)) {\n      return \"-9223372036854775808\";\n    } else {\n      return \"-\" + to_string(neg(self));\n    }\n  }\n  var approx_div1 = of_float(Math.floor(to_float(self) / 10));\n  var lo = approx_div1[/* lo */1];\n  var hi = approx_div1[/* hi */0];\n  var match = sub_aux(sub_aux(self, (lo << 3), (lo >>> 29) | (hi << 3)), (lo << 1), (lo >>> 31) | (hi << 1));\n  var rem_lo = match[/* lo */1];\n  var rem_hi = match[/* hi */0];\n  if (rem_lo === 0 && rem_hi === 0) {\n    return to_string(approx_div1) + \"0\";\n  }\n  if (rem_hi < 0) {\n    var rem_lo$1 = ((rem_lo ^ -1) + 1 >>> 0);\n    var delta = Math.ceil(rem_lo$1 / 10);\n    var remainder = 10 * delta - rem_lo$1;\n    return to_string(sub_aux(approx_div1, delta | 0, 0)) + String(remainder | 0);\n  }\n  var rem_lo$2 = rem_lo;\n  var delta$1 = Math.floor(rem_lo$2 / 10);\n  var remainder$1 = rem_lo$2 - 10 * delta$1;\n  return to_string(add_aux(approx_div1, delta$1 | 0, 0)) + String(remainder$1 | 0);\n}\n\nfunction div(_self, _other) {\n  while(true) {\n    var other = _other;\n    var self = _self;\n    var exit = 0;\n    var exit$1 = 0;\n    if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n      exit$1 = 3;\n    } else {\n      throw Caml_builtin_exceptions.division_by_zero;\n    }\n    if (exit$1 === 3) {\n      var match = self[/* hi */0];\n      if (match !== -2147483648) {\n        if (match !== 0) {\n          exit = 2;\n        } else {\n          if (self[/* lo */1] === 0) {\n            return zero;\n          }\n          exit = 2;\n        }\n      } else if (self[/* lo */1] !== 0) {\n        exit = 2;\n      } else {\n        if (eq(other, one) || eq(other, neg_one)) {\n          return self;\n        }\n        if (eq(other, min_int)) {\n          return one;\n        }\n        var half_this = asr_(self, 1);\n        var approx = lsl_(div(half_this, other), 1);\n        var exit$2 = 0;\n        if (approx[/* hi */0] !== 0) {\n          exit$2 = 4;\n        } else {\n          if (approx[/* lo */1] === 0) {\n            if (other[/* hi */0] < 0) {\n              return one;\n            } else {\n              return neg(one);\n            }\n          }\n          exit$2 = 4;\n        }\n        if (exit$2 === 4) {\n          var rem = sub(self, mul(other, approx));\n          return add(approx, div(rem, other));\n        }\n        \n      }\n    }\n    if (exit === 2 && other[/* hi */0] === -2147483648 && other[/* lo */1] === 0) {\n      return zero;\n    }\n    var other_hi = other[/* hi */0];\n    if (self[/* hi */0] < 0) {\n      if (other_hi >= 0) {\n        return neg(div(neg(self), other));\n      }\n      _other = neg(other);\n      _self = neg(self);\n      continue ;\n    }\n    if (other_hi < 0) {\n      return neg(div(self, neg(other)));\n    }\n    var res = zero;\n    var rem$1 = self;\n    while(ge(rem$1, other)) {\n      var approx$1 = Caml_primitive.caml_float_max(1, Math.floor(to_float(rem$1) / to_float(other)));\n      var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);\n      var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n      var approxRes = of_float(approx$1);\n      var approxRem = mul(approxRes, other);\n      while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {\n        approx$1 = approx$1 - delta;\n        approxRes = of_float(approx$1);\n        approxRem = mul(approxRes, other);\n      };\n      if (is_zero(approxRes)) {\n        approxRes = one;\n      }\n      res = add(res, approxRes);\n      rem$1 = sub(rem$1, approxRem);\n    };\n    return res;\n  };\n}\n\nfunction mod_(self, other) {\n  return sub(self, mul(div(self, other), other));\n}\n\nfunction div_mod(self, other) {\n  var quotient = div(self, other);\n  return /* tuple */[\n          quotient,\n          sub(self, mul(quotient, other))\n        ];\n}\n\nfunction compare(self, other) {\n  var v = Caml_primitive.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);\n  if (v === 0) {\n    return Caml_primitive.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);\n  } else {\n    return v;\n  }\n}\n\nfunction of_int32(lo) {\n  return mk(lo, lo < 0 ? -1 : 0);\n}\n\nfunction to_int32(x) {\n  return x[/* lo */1] | 0;\n}\n\nfunction to_hex(x) {\n  var x_lo = x[/* lo */1];\n  var x_hi = x[/* hi */0];\n  var aux = function (v) {\n    return (v >>> 0).toString(16);\n  };\n  if (x_hi === 0 && x_lo === 0) {\n    return \"0\";\n  }\n  if (x_lo === 0) {\n    return aux(x_hi) + \"00000000\";\n  }\n  if (x_hi === 0) {\n    return aux(x_lo);\n  }\n  var lo = aux(x_lo);\n  var pad = 8 - lo.length | 0;\n  if (pad <= 0) {\n    return aux(x_hi) + lo;\n  } else {\n    return aux(x_hi) + (\"0\".repeat(pad) + lo);\n  }\n}\n\nfunction discard_sign(x) {\n  return /* Int64 */[\n          /* hi */2147483647 & x[/* hi */0],\n          /* lo */x[/* lo */1]\n        ];\n}\n\nfunction float_of_bits(x) {\n  return (function(lo,hi){ return (new Float64Array(new Int32Array([lo,hi]).buffer))[0]})(x[/* lo */1], x[/* hi */0]);\n}\n\nfunction bits_of_float(x) {\n  var buf = (function(x){return new Int32Array(new Float64Array([x]).buffer)})(x);\n  return mk(buf[0], buf[1]);\n}\n\nexport {\n  mk ,\n  succ ,\n  min_int ,\n  max_int ,\n  one ,\n  zero ,\n  neg_one ,\n  of_int32 ,\n  to_int32 ,\n  add ,\n  neg ,\n  sub ,\n  lsl_ ,\n  lsr_ ,\n  asr_ ,\n  is_zero ,\n  mul ,\n  xor ,\n  or_ ,\n  and_ ,\n  swap ,\n  ge ,\n  eq ,\n  neq ,\n  lt ,\n  gt ,\n  le ,\n  equal_null ,\n  equal_undefined ,\n  equal_nullable ,\n  min ,\n  max ,\n  to_float ,\n  of_float ,\n  div ,\n  mod_ ,\n  compare ,\n  float_of_bits ,\n  bits_of_float ,\n  div_mod ,\n  to_hex ,\n  discard_sign ,\n  to_string ,\n  \n}\n/* Caml_int32 Not a pure module */\n"]},"metadata":{},"sourceType":"module"}