{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Caml_builtin_exceptions from \"bs-platform/lib/es6/caml_builtin_exceptions.js\";\nvar onUnhandledException = {\n  contents: function (exn) {\n    console.error(\"Unhandled exception in promise callback:\");\n    console.error(exn);\n  }\n};\n\nfunction NestedPromise(p) {\n  this.nested = p;\n}\n\n;\n\nfunction unbox(value) {\n  if (value instanceof NestedPromise) return value.nested;else return value;\n}\n\nfunction box(value) {\n  if (value != null && typeof value.then === 'function') return new NestedPromise(value);else return value;\n}\n\nfunction make(executor) {\n  return new Promise(function (resolve, reject) {\n    var boxingResolve = function (value) {\n      resolve(box(value));\n    };\n\n    executor(boxingResolve, reject);\n  });\n}\n\n;\n\nfunction resolved(value) {\n  return Promise.resolve(box(value));\n}\n\n;\n\nfunction then(promise, callback) {\n  return promise.then(function (value) {\n    try {\n      return callback(unbox(value));\n    } catch (exception) {\n      onUnhandledException.contents(exception);\n    }\n  });\n}\n\n;\n\nfunction catch_(promise, callback) {\n  var safeCallback = function (error) {\n    try {\n      return callback(error);\n    } catch (exception) {\n      onUnhandledException.contents(exception);\n    }\n  };\n\n  return promise.catch(safeCallback);\n}\n\n;\n\nfunction arrayToList(array) {\n  var list = 0;\n\n  for (var index = array.length - 1; index >= 0; --index) {\n    list = [array[index], list];\n  }\n\n  return list;\n}\n\n;\n\nfunction listToArray(list) {\n  var array = [];\n\n  while (list !== 0) {\n    array.push(list[0]);\n    list = list[1];\n  }\n\n  return array;\n}\n\n;\n\nfunction mapArray(f, a) {\n  return a.map(f);\n}\n\n;\n;\n\nfunction pending(param) {\n  var resolve = {\n    contents: function (prim) {}\n  };\n  var reject = {\n    contents: function (prim) {}\n  };\n  var p = make(function (resolve$prime, reject$prime) {\n    resolve.contents = resolve$prime;\n    reject.contents = reject$prime;\n  });\n  return (\n    /* tuple */\n    [p, resolve.contents, reject.contents]\n  );\n}\n\nfunction map(promise, callback) {\n  return then(promise, function (v) {\n    return resolved(Curry._1(callback, v));\n  });\n}\n\nfunction get(promise, callback) {\n  map(promise, callback);\n}\n\nfunction tap(promise, callback) {\n  map(promise, callback);\n  return promise;\n}\n\nfunction allArray(promises) {\n  return map(Promise.all(promises), function (param) {\n    return mapArray(function (prim) {\n      return unbox(prim);\n    }, param);\n  });\n}\n\nfunction all(promises) {\n  return map(allArray(listToArray(promises)), function (results) {\n    return arrayToList(results);\n  });\n}\n\nfunction all2(p1, p2) {\n  return Promise.all(\n  /* tuple */\n  [p1, p2]);\n}\n\nfunction all3(p1, p2, p3) {\n  return Promise.all(\n  /* tuple */\n  [p1, p2, p3]);\n}\n\nfunction all4(p1, p2, p3, p4) {\n  return Promise.all(\n  /* tuple */\n  [p1, p2, p3, p4]);\n}\n\nfunction all5(p1, p2, p3, p4, p5) {\n  return Promise.all(\n  /* tuple */\n  [p1, p2, p3, p4, p5]);\n}\n\nfunction all6(p1, p2, p3, p4, p5, p6) {\n  return Promise.all(\n  /* tuple */\n  [p1, p2, p3, p4, p5, p6]);\n}\n\nfunction race(promises) {\n  if (promises ===\n  /* [] */\n  0) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Promise.race([]) would be pending forever\"];\n  }\n\n  return Promise.race(listToArray(promises));\n}\n\nfunction toResult(promise) {\n  return catch_(map(promise, function (v) {\n    return (\n      /* Ok */\n      Block.__(0, [v])\n    );\n  }), function (e) {\n    return resolved(\n    /* Error */\n    Block.__(1, [e]));\n  });\n}\n\nfunction fromResult(promise) {\n  return then(promise, function (v) {\n    if (v.tag) {\n      return Promise.reject(v[0]);\n    } else {\n      return resolved(v[0]);\n    }\n  });\n}\n\nfunction pending$1(param) {\n  var match = pending(undefined);\n  return (\n    /* tuple */\n    [match[0], match[1]]\n  );\n}\n\nfunction exec(executor) {\n  var match = pending$1(undefined);\n\n  Curry._1(executor, match[1]);\n\n  return match[0];\n}\n\nfunction resolved$1(prim) {\n  return resolved(prim);\n}\n\nfunction flatMap(prim, prim$1) {\n  return then(prim, prim$1);\n}\n\nfunction flatMapOk(promise, callback) {\n  return then(promise, function (result) {\n    if (result.tag) {\n      return resolved(result);\n    } else {\n      return Curry._1(callback, result[0]);\n    }\n  });\n}\n\nfunction flatMapError(promise, callback) {\n  return then(promise, function (result) {\n    if (result.tag) {\n      return Curry._1(callback, result[0]);\n    } else {\n      return resolved(result);\n    }\n  });\n}\n\nfunction mapOk(promise, callback) {\n  return map(promise, function (result) {\n    if (result.tag) {\n      return result;\n    } else {\n      return (\n        /* Ok */\n        Block.__(0, [Curry._1(callback, result[0])])\n      );\n    }\n  });\n}\n\nfunction mapError(promise, callback) {\n  return map(promise, function (result) {\n    if (result.tag) {\n      return (\n        /* Error */\n        Block.__(1, [Curry._1(callback, result[0])])\n      );\n    } else {\n      return result;\n    }\n  });\n}\n\nfunction getOk(promise, callback) {\n  return get(promise, function (result) {\n    if (result.tag) {\n      return;\n    } else {\n      return Curry._1(callback, result[0]);\n    }\n  });\n}\n\nfunction getError(promise, callback) {\n  return get(promise, function (result) {\n    if (result.tag) {\n      return Curry._1(callback, result[0]);\n    }\n  });\n}\n\nfunction tapOk(promise, callback) {\n  getOk(promise, callback);\n  return promise;\n}\n\nfunction tapError(promise, callback) {\n  getError(promise, callback);\n  return promise;\n}\n\nvar Operators = {\n  $great$pipe$eq: mapOk,\n  $great$great$eq: flatMapOk\n};\n\nfunction flatMapSome(promise, callback) {\n  return then(promise, function (option) {\n    if (option !== undefined) {\n      return Curry._1(callback, Caml_option.valFromOption(option));\n    } else {\n      return resolved(undefined);\n    }\n  });\n}\n\nfunction mapSome(promise, callback) {\n  return map(promise, function (option) {\n    if (option !== undefined) {\n      return Caml_option.some(Curry._1(callback, Caml_option.valFromOption(option)));\n    }\n  });\n}\n\nfunction getSome(promise, callback) {\n  return get(promise, function (option) {\n    if (option !== undefined) {\n      return Curry._1(callback, Caml_option.valFromOption(option));\n    }\n  });\n}\n\nfunction tapSome(promise, callback) {\n  getSome(promise, callback);\n  return promise;\n}\n\nvar PipeFirst = {};\n\nfunction Js_resolved(prim) {\n  return resolved(prim);\n}\n\nfunction Js_rejected(prim) {\n  return Promise.reject(prim);\n}\n\nfunction Js_flatMap(prim, prim$1) {\n  return then(prim, prim$1);\n}\n\nfunction Js_catch(prim, prim$1) {\n  return catch_(prim, prim$1);\n}\n\nfunction Js_relax(prim) {\n  return prim;\n}\n\nfunction Js_fromBsPromise(prim) {\n  return prim;\n}\n\nfunction Js_toBsPromise(prim) {\n  return prim;\n}\n\nvar Js = {\n  pending: pending,\n  resolved: Js_resolved,\n  rejected: Js_rejected,\n  get: get,\n  tap: tap,\n  map: map,\n  flatMap: Js_flatMap,\n  $$catch: Js_catch,\n  all: all,\n  race: race,\n  relax: Js_relax,\n  toResult: toResult,\n  fromResult: fromResult,\n  fromBsPromise: Js_fromBsPromise,\n  toBsPromise: Js_toBsPromise\n};\nexport { pending$1 as pending, resolved$1 as resolved, exec, get, tap, map, flatMap, getOk, tapOk, mapOk, flatMapOk, getError, tapError, mapError, flatMapError, Operators, getSome, tapSome, mapSome, flatMapSome, race, all, allArray, all2, all3, all4, all5, all6, Js, PipeFirst, onUnhandledException };\n/*  Not a pure module */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/reason-promise/src/js/promise.js"],"names":["Block","Curry","Caml_option","Caml_builtin_exceptions","onUnhandledException","contents","exn","console","error","NestedPromise","p","nested","unbox","value","box","then","make","executor","Promise","resolve","reject","boxingResolve","resolved","promise","callback","exception","catch_","safeCallback","catch","arrayToList","array","list","index","length","listToArray","push","mapArray","f","a","map","pending","param","prim","resolve$prime","reject$prime","v","_1","get","tap","allArray","promises","all","results","all2","p1","p2","all3","p3","all4","p4","all5","p5","all6","p6","race","invalid_argument","toResult","__","e","fromResult","tag","pending$1","match","undefined","exec","resolved$1","flatMap","prim$1","flatMapOk","result","flatMapError","mapOk","mapError","getOk","getError","tapOk","tapError","Operators","$great$pipe$eq","$great$great$eq","flatMapSome","option","valFromOption","mapSome","some","getSome","tapSome","PipeFirst","Js_resolved","Js_rejected","Js_flatMap","Js_catch","Js_relax","Js_fromBsPromise","Js_toBsPromise","Js","rejected","$$catch","relax","fromBsPromise","toBsPromise"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n\nimport * as Block from \"bs-platform/lib/es6/block.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as Caml_builtin_exceptions from \"bs-platform/lib/es6/caml_builtin_exceptions.js\";\n\nvar onUnhandledException = {\n  contents: (function (exn) {\n      console.error(\"Unhandled exception in promise callback:\");\n      console.error(exn);\n      \n    })\n};\n\nfunction NestedPromise(p) {\n    this.nested = p;\n};\n\nfunction unbox(value) {\n    if (value instanceof NestedPromise)\n        return value.nested;\n    else\n        return value;\n}\n\nfunction box(value) {\n    if (value != null && typeof value.then === 'function')\n        return new NestedPromise(value);\n    else\n        return value;\n}\n\nfunction make(executor) {\n    return new Promise(function (resolve, reject) {\n        var boxingResolve = function(value) {\n            resolve(box(value));\n        };\n        executor(boxingResolve, reject);\n    });\n};\n\nfunction resolved(value) {\n    return Promise.resolve(box(value));\n};\n\nfunction then(promise, callback) {\n    return promise.then(function (value) {\n        try {\n            return callback(unbox(value));\n        }\n        catch (exception) {\n            onUnhandledException.contents(exception);\n        }\n    });\n};\n\nfunction catch_(promise, callback) {\n    var safeCallback = function (error) {\n        try {\n            return callback(error);\n        }\n        catch (exception) {\n            onUnhandledException.contents(exception);\n        }\n    };\n\n    return promise.catch(safeCallback);\n};\n\nfunction arrayToList(array) {\n  var list = 0;\n  for (var index = array.length - 1; index >= 0; --index) {\n    list = [array[index], list];\n  }\n  return list;\n};\n\nfunction listToArray(list) {\n  var array = [];\n  while (list !== 0) {\n    array.push(list[0]);\n    list = list[1];\n  }\n  return array;\n};\n\nfunction mapArray(f, a) {\n  return a.map(f);\n};\n;\n\nfunction pending(param) {\n  var resolve = {\n    contents: (function (prim) {\n        \n      })\n  };\n  var reject = {\n    contents: (function (prim) {\n        \n      })\n  };\n  var p = make((function (resolve$prime, reject$prime) {\n          resolve.contents = resolve$prime;\n          reject.contents = reject$prime;\n          \n        }));\n  return /* tuple */[\n          p,\n          resolve.contents,\n          reject.contents\n        ];\n}\n\nfunction map(promise, callback) {\n  return then(promise, (function (v) {\n                return resolved(Curry._1(callback, v));\n              }));\n}\n\nfunction get(promise, callback) {\n  map(promise, callback);\n  \n}\n\nfunction tap(promise, callback) {\n  map(promise, callback);\n  return promise;\n}\n\nfunction allArray(promises) {\n  return map(Promise.all(promises), (function (param) {\n                return mapArray((function (prim) {\n                              return unbox(prim);\n                            }), param);\n              }));\n}\n\nfunction all(promises) {\n  return map(allArray(listToArray(promises)), (function (results) {\n                return arrayToList(results);\n              }));\n}\n\nfunction all2(p1, p2) {\n  return Promise.all(/* tuple */[\n              p1,\n              p2\n            ]);\n}\n\nfunction all3(p1, p2, p3) {\n  return Promise.all(/* tuple */[\n              p1,\n              p2,\n              p3\n            ]);\n}\n\nfunction all4(p1, p2, p3, p4) {\n  return Promise.all(/* tuple */[\n              p1,\n              p2,\n              p3,\n              p4\n            ]);\n}\n\nfunction all5(p1, p2, p3, p4, p5) {\n  return Promise.all(/* tuple */[\n              p1,\n              p2,\n              p3,\n              p4,\n              p5\n            ]);\n}\n\nfunction all6(p1, p2, p3, p4, p5, p6) {\n  return Promise.all(/* tuple */[\n              p1,\n              p2,\n              p3,\n              p4,\n              p5,\n              p6\n            ]);\n}\n\nfunction race(promises) {\n  if (promises === /* [] */0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Promise.race([]) would be pending forever\"\n        ];\n  }\n  return Promise.race(listToArray(promises));\n}\n\nfunction toResult(promise) {\n  return catch_(map(promise, (function (v) {\n                    return /* Ok */Block.__(0, [v]);\n                  })), (function (e) {\n                return resolved(/* Error */Block.__(1, [e]));\n              }));\n}\n\nfunction fromResult(promise) {\n  return then(promise, (function (v) {\n                if (v.tag) {\n                  return Promise.reject(v[0]);\n                } else {\n                  return resolved(v[0]);\n                }\n              }));\n}\n\nfunction pending$1(param) {\n  var match = pending(undefined);\n  return /* tuple */[\n          match[0],\n          match[1]\n        ];\n}\n\nfunction exec(executor) {\n  var match = pending$1(undefined);\n  Curry._1(executor, match[1]);\n  return match[0];\n}\n\nfunction resolved$1(prim) {\n  return resolved(prim);\n}\n\nfunction flatMap(prim, prim$1) {\n  return then(prim, prim$1);\n}\n\nfunction flatMapOk(promise, callback) {\n  return then(promise, (function (result) {\n                if (result.tag) {\n                  return resolved(result);\n                } else {\n                  return Curry._1(callback, result[0]);\n                }\n              }));\n}\n\nfunction flatMapError(promise, callback) {\n  return then(promise, (function (result) {\n                if (result.tag) {\n                  return Curry._1(callback, result[0]);\n                } else {\n                  return resolved(result);\n                }\n              }));\n}\n\nfunction mapOk(promise, callback) {\n  return map(promise, (function (result) {\n                if (result.tag) {\n                  return result;\n                } else {\n                  return /* Ok */Block.__(0, [Curry._1(callback, result[0])]);\n                }\n              }));\n}\n\nfunction mapError(promise, callback) {\n  return map(promise, (function (result) {\n                if (result.tag) {\n                  return /* Error */Block.__(1, [Curry._1(callback, result[0])]);\n                } else {\n                  return result;\n                }\n              }));\n}\n\nfunction getOk(promise, callback) {\n  return get(promise, (function (result) {\n                if (result.tag) {\n                  return ;\n                } else {\n                  return Curry._1(callback, result[0]);\n                }\n              }));\n}\n\nfunction getError(promise, callback) {\n  return get(promise, (function (result) {\n                if (result.tag) {\n                  return Curry._1(callback, result[0]);\n                }\n                \n              }));\n}\n\nfunction tapOk(promise, callback) {\n  getOk(promise, callback);\n  return promise;\n}\n\nfunction tapError(promise, callback) {\n  getError(promise, callback);\n  return promise;\n}\n\nvar Operators = {\n  $great$pipe$eq: mapOk,\n  $great$great$eq: flatMapOk\n};\n\nfunction flatMapSome(promise, callback) {\n  return then(promise, (function (option) {\n                if (option !== undefined) {\n                  return Curry._1(callback, Caml_option.valFromOption(option));\n                } else {\n                  return resolved(undefined);\n                }\n              }));\n}\n\nfunction mapSome(promise, callback) {\n  return map(promise, (function (option) {\n                if (option !== undefined) {\n                  return Caml_option.some(Curry._1(callback, Caml_option.valFromOption(option)));\n                }\n                \n              }));\n}\n\nfunction getSome(promise, callback) {\n  return get(promise, (function (option) {\n                if (option !== undefined) {\n                  return Curry._1(callback, Caml_option.valFromOption(option));\n                }\n                \n              }));\n}\n\nfunction tapSome(promise, callback) {\n  getSome(promise, callback);\n  return promise;\n}\n\nvar PipeFirst = { };\n\nfunction Js_resolved(prim) {\n  return resolved(prim);\n}\n\nfunction Js_rejected(prim) {\n  return Promise.reject(prim);\n}\n\nfunction Js_flatMap(prim, prim$1) {\n  return then(prim, prim$1);\n}\n\nfunction Js_catch(prim, prim$1) {\n  return catch_(prim, prim$1);\n}\n\nfunction Js_relax(prim) {\n  return prim;\n}\n\nfunction Js_fromBsPromise(prim) {\n  return prim;\n}\n\nfunction Js_toBsPromise(prim) {\n  return prim;\n}\n\nvar Js = {\n  pending: pending,\n  resolved: Js_resolved,\n  rejected: Js_rejected,\n  get: get,\n  tap: tap,\n  map: map,\n  flatMap: Js_flatMap,\n  $$catch: Js_catch,\n  all: all,\n  race: race,\n  relax: Js_relax,\n  toResult: toResult,\n  fromResult: fromResult,\n  fromBsPromise: Js_fromBsPromise,\n  toBsPromise: Js_toBsPromise\n};\n\nexport {\n  pending$1 as pending,\n  resolved$1 as resolved,\n  exec ,\n  get ,\n  tap ,\n  map ,\n  flatMap ,\n  getOk ,\n  tapOk ,\n  mapOk ,\n  flatMapOk ,\n  getError ,\n  tapError ,\n  mapError ,\n  flatMapError ,\n  Operators ,\n  getSome ,\n  tapSome ,\n  mapSome ,\n  flatMapSome ,\n  race ,\n  all ,\n  allArray ,\n  all2 ,\n  all3 ,\n  all4 ,\n  all5 ,\n  all6 ,\n  Js ,\n  PipeFirst ,\n  onUnhandledException ,\n  \n}\n/*  Not a pure module */\n"]},"metadata":{},"sourceType":"module"}