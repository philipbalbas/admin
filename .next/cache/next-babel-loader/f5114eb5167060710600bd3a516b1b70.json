{"ast":null,"code":"import * as Antd from \"antd\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as GetCategoryQuery_graphql$NextjsDefault from \"../common/__generated__/GetCategoryQuery_graphql.bs.js\";\nvar convertResponse = GetCategoryQuery_graphql$NextjsDefault.Internal.convertResponse;\nvar convertVariables = GetCategoryQuery_graphql$NextjsDefault.Internal.convertVariables;\nvar UseQuery = ReasonRelay.MakeUseQuery({\n  query: GetCategoryQuery_graphql$NextjsDefault.node,\n  convertResponse: convertResponse,\n  convertVariables: convertVariables\n});\nvar use = UseQuery.use;\nvar Query_makeVariables = GetCategoryQuery_graphql$NextjsDefault.Utils.makeVariables;\nvar Query_fetch = UseQuery.$$fetch;\nvar Query_fetchPromised = UseQuery.fetchPromised;\nvar Query_preload = UseQuery.preload;\nvar Query_usePreloaded = UseQuery.usePreloaded;\nvar Query = {\n  Operation: undefined,\n  makeVariables: Query_makeVariables,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction GetCategory(Props) {\n  var idOpt = Props.id;\n  var id = idOpt !== undefined ? idOpt : \"\";\n\n  var queryData = Curry._6(use, {\n    id: id\n  }, undefined, undefined, undefined, undefined, undefined);\n\n  var category = queryData.getCategory;\n  var content;\n\n  if (category !== undefined) {\n    var mods = category.modules;\n    var dataSource = mods !== undefined ? mods : [];\n    var columns = [{\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: function render(text, row, otherWut) {\n        console.log(row.id);\n        return React.createElement(\"a\", undefined, text);\n      }\n    }, {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n      render: undefined\n    }];\n    content = React.createElement(\"div\", undefined, category.name, React.createElement(\"div\", undefined, React.createElement(Antd.Table, {\n      columns: columns,\n      dataSource: dataSource,\n      pagination: false\n    })));\n  } else {\n    content = null;\n  }\n\n  return React.createElement(React.Fragment, undefined, content);\n}\n\n_c = GetCategory;\nvar make = GetCategory;\nexport { Query, make };\n/* UseQuery Not a pure module */\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCategory\");","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/components/GetCategory.bs.js"],"names":["Antd","Curry","React","ReasonRelay","GetCategoryQuery_graphql$NextjsDefault","convertResponse","Internal","convertVariables","UseQuery","MakeUseQuery","query","node","use","Query_makeVariables","Utils","makeVariables","Query_fetch","$$fetch","Query_fetchPromised","fetchPromised","Query_preload","preload","Query_usePreloaded","usePreloaded","Query","Operation","undefined","Types","GetCategory","Props","idOpt","id","queryData","_6","category","getCategory","content","mods","modules","dataSource","columns","title","dataIndex","key","render","text","row","otherWut","console","log","createElement","name","Table","pagination","Fragment","make"],"mappings":"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","sourcesContent":["\n\nimport * as Antd from \"antd\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as GetCategoryQuery_graphql$NextjsDefault from \"../common/__generated__/GetCategoryQuery_graphql.bs.js\";\n\nvar convertResponse = GetCategoryQuery_graphql$NextjsDefault.Internal.convertResponse;\n\nvar convertVariables = GetCategoryQuery_graphql$NextjsDefault.Internal.convertVariables;\n\nvar UseQuery = ReasonRelay.MakeUseQuery({\n      query: GetCategoryQuery_graphql$NextjsDefault.node,\n      convertResponse: convertResponse,\n      convertVariables: convertVariables\n    });\n\nvar use = UseQuery.use;\n\nvar Query_makeVariables = GetCategoryQuery_graphql$NextjsDefault.Utils.makeVariables;\n\nvar Query_fetch = UseQuery.$$fetch;\n\nvar Query_fetchPromised = UseQuery.fetchPromised;\n\nvar Query_preload = UseQuery.preload;\n\nvar Query_usePreloaded = UseQuery.usePreloaded;\n\nvar Query = {\n  Operation: undefined,\n  makeVariables: Query_makeVariables,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction GetCategory(Props) {\n  var idOpt = Props.id;\n  var id = idOpt !== undefined ? idOpt : \"\";\n  var queryData = Curry._6(use, {\n        id: id\n      }, undefined, undefined, undefined, undefined, undefined);\n  var category = queryData.getCategory;\n  var content;\n  if (category !== undefined) {\n    var mods = category.modules;\n    var dataSource = mods !== undefined ? mods : [];\n    var columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        render: (function (text, row, otherWut) {\n            console.log(row.id);\n            return React.createElement(\"a\", undefined, text);\n          })\n      },\n      {\n        title: \"Description\",\n        dataIndex: \"description\",\n        key: \"description\",\n        render: undefined\n      }\n    ];\n    content = React.createElement(\"div\", undefined, category.name, React.createElement(\"div\", undefined, React.createElement(Antd.Table, {\n                  columns: columns,\n                  dataSource: dataSource,\n                  pagination: false\n                })));\n  } else {\n    content = null;\n  }\n  return React.createElement(React.Fragment, undefined, content);\n}\n\nvar make = GetCategory;\n\nexport {\n  Query ,\n  make ,\n  \n}\n/* UseQuery Not a pure module */\n"]},"metadata":{},"sourceType":"module"}