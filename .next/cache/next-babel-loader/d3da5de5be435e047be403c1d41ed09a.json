{"ast":null,"code":"'use strict';\n\nvar Curry = require(\"./curry.js\");\n\nvar Caml_obj = require(\"./caml_obj.js\");\n\nvar Caml_array = require(\"./caml_array.js\");\n\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\n\nvar Caml_js_exceptions = require(\"./caml_js_exceptions.js\");\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nvar make_float = Caml_array.caml_make_float_vect;\nvar Floatarray = {};\n\nfunction init(l, f) {\n  if (l === 0) {\n    return [];\n  }\n\n  if (l < 0) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Array.init\"];\n  }\n\n  var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n\n  for (var i = 1; i < l; ++i) {\n    res[i] = Curry._1(f, i);\n  }\n\n  return res;\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, []);\n\n  for (var x = 0; x < sx; ++x) {\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n\n  if (l === 0) {\n    return [];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Array.sub\"];\n  }\n\n  return Caml_array.caml_array_sub(a, ofs, len);\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Array.fill\"];\n  }\n\n  for (var i = ofs, i_finish = ofs + len | 0; i < i_finish; ++i) {\n    a[i] = v;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Array.blit\"];\n  }\n\n  return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n}\n\nfunction iter(f, a) {\n  for (var i = 0, i_finish = a.length; i < i_finish; ++i) {\n    Curry._1(f, a[i]);\n  }\n}\n\nfunction iter2(f, a, b) {\n  if (a.length !== b.length) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Array.iter2: arrays must have the same length\"];\n  }\n\n  for (var i = 0, i_finish = a.length; i < i_finish; ++i) {\n    Curry._2(f, a[i], b[i]);\n  }\n}\n\nfunction map(f, a) {\n  var l = a.length;\n\n  if (l === 0) {\n    return [];\n  }\n\n  var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n\n  for (var i = 1; i < l; ++i) {\n    r[i] = Curry._1(f, a[i]);\n  }\n\n  return r;\n}\n\nfunction map2(f, a, b) {\n  var la = a.length;\n  var lb = b.length;\n\n  if (la !== lb) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Array.map2: arrays must have the same length\"];\n  }\n\n  if (la === 0) {\n    return [];\n  }\n\n  var r = Caml_array.caml_make_vect(la, Curry._2(f, a[0], b[0]));\n\n  for (var i = 1; i < la; ++i) {\n    r[i] = Curry._2(f, a[i], b[i]);\n  }\n\n  return r;\n}\n\nfunction iteri(f, a) {\n  for (var i = 0, i_finish = a.length; i < i_finish; ++i) {\n    Curry._2(f, i, a[i]);\n  }\n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n\n  if (l === 0) {\n    return [];\n  }\n\n  var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n\n  for (var i = 1; i < l; ++i) {\n    r[i] = Curry._2(f, i, a[i]);\n  }\n\n  return r;\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n\n  var _res =\n  /* [] */\n  0;\n\n  while (true) {\n    var res = _res;\n    var i = _i;\n\n    if (i < 0) {\n      return res;\n    }\n\n    _res =\n    /* :: */\n    [a[i], res];\n    _i = i - 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction list_length(_accu, _param) {\n  while (true) {\n    var param = _param;\n    var accu = _accu;\n\n    if (!param) {\n      return accu;\n    }\n\n    _param = param[1];\n    _accu = accu + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction of_list(l) {\n  if (!l) {\n    return [];\n  }\n\n  var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n  var _i = 1;\n  var _param = l[1];\n\n  while (true) {\n    var param = _param;\n    var i = _i;\n\n    if (!param) {\n      return a;\n    }\n\n    a[i] = param[0];\n    _param = param[1];\n    _i = i + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n\n  for (var i = 0, i_finish = a.length; i < i_finish; ++i) {\n    r = Curry._2(f, r, a[i]);\n  }\n\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n\n  for (var i = a.length - 1 | 0; i >= 0; --i) {\n    r = Curry._2(f, a[i], r);\n  }\n\n  return r;\n}\n\nfunction exists(p, a) {\n  var n = a.length;\n  var _i = 0;\n\n  while (true) {\n    var i = _i;\n\n    if (i === n) {\n      return false;\n    }\n\n    if (Curry._1(p, a[i])) {\n      return true;\n    }\n\n    _i = i + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction for_all(p, a) {\n  var n = a.length;\n  var _i = 0;\n\n  while (true) {\n    var i = _i;\n\n    if (i === n) {\n      return true;\n    }\n\n    if (!Curry._1(p, a[i])) {\n      return false;\n    }\n\n    _i = i + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction mem(x, a) {\n  var n = a.length;\n  var _i = 0;\n\n  while (true) {\n    var i = _i;\n\n    if (i === n) {\n      return false;\n    }\n\n    if (Caml_obj.caml_equal(a[i], x)) {\n      return true;\n    }\n\n    _i = i + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nfunction memq(x, a) {\n  var n = a.length;\n  var _i = 0;\n\n  while (true) {\n    var i = _i;\n\n    if (i === n) {\n      return false;\n    }\n\n    if (x === a[i]) {\n      return true;\n    }\n\n    _i = i + 1 | 0;\n    continue;\n  }\n\n  ;\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function maxson(l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n\n      return x;\n    }\n\n    if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    }\n\n    if (i31 < l) {\n      return i31;\n    }\n\n    throw [Bottom, i];\n  };\n\n  var trickle = function trickle(l, i, e) {\n    try {\n      var _i = i;\n\n      while (true) {\n        var i$1 = _i;\n        var j = maxson(l, i$1);\n\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e) <= 0) {\n          return Caml_array.caml_array_set(a, i$1, e);\n        }\n\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue;\n      }\n\n      ;\n    } catch (raw_i) {\n      var i$2 = Caml_js_exceptions.internalToOCamlException(raw_i);\n\n      if (i$2[0] === Bottom) {\n        return Caml_array.caml_array_set(a, i$2[1], e);\n      }\n\n      throw i$2;\n    }\n  };\n\n  var bubble = function bubble(l, i) {\n    try {\n      var _i = i;\n\n      while (true) {\n        var i$1 = _i;\n        var j = maxson(l, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue;\n      }\n\n      ;\n    } catch (raw_i) {\n      var i$2 = Caml_js_exceptions.internalToOCamlException(raw_i);\n\n      if (i$2[0] === Bottom) {\n        return i$2[1];\n      }\n\n      throw i$2;\n    }\n  };\n\n  var trickleup = function trickleup(_i, e) {\n    while (true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n\n      if (i === father) {\n        throw [Caml_builtin_exceptions.assert_failure,\n        /* tuple */\n        [\"array.ml\", 238, 4]];\n      }\n\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) >= 0) {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n\n      Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n\n      if (father <= 0) {\n        return Caml_array.caml_array_set(a, 0, e);\n      }\n\n      _i = father;\n      continue;\n    }\n\n    ;\n  };\n\n  var l = a.length;\n\n  for (var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i) {\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n\n  for (var i$1 = l - 1 | 0; i$1 >= 2; --i$1) {\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n\n  if (l <= 1) {\n    return;\n  }\n\n  var e$1 = Caml_array.caml_array_get(a, 1);\n  Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n  return Caml_array.caml_array_set(a, 0, e$1);\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function merge(src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n\n    var _i2 = src2ofs;\n\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n\n    var _d = dstofs;\n\n    while (true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n\n        if (i1$1 >= src1r) {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n\n        _d = d + 1 | 0;\n        _s1 = Caml_array.caml_array_get(a, i1$1);\n        _i1 = i1$1;\n        continue;\n      }\n\n      Caml_array.caml_array_set(dst, d, s2);\n      var i2$1 = i2 + 1 | 0;\n\n      if (i2$1 >= src2r) {\n        return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n      }\n\n      _d = d + 1 | 0;\n      _s2 = Caml_array.caml_array_get(src2, i2$1);\n      _i2 = i2$1;\n      continue;\n    }\n\n    ;\n  };\n\n  var isortto = function isortto(srcofs, dst, dstofs, len) {\n    for (var i = 0; i < len; ++i) {\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n\n      while (j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      }\n\n      ;\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n  };\n\n  var sortto = function sortto(srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    }\n\n    var l1 = len / 2 | 0;\n    var l2 = len - l1 | 0;\n    sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n    sortto(srcofs, a, srcofs + l2 | 0, l1);\n    return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n  };\n\n  var l = a.length;\n\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  }\n\n  var l1 = l / 2 | 0;\n  var l2 = l - l1 | 0;\n  var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n  sortto(l1, t, 0, l2);\n  sortto(0, a, l2, l1);\n  return merge(l2, l1, t, 0, l2, a, 0);\n}\n\nvar create_matrix = make_matrix;\nvar concat = Caml_array.caml_array_concat;\nvar fast_sort = stable_sort;\nexports.make_float = make_float;\nexports.init = init;\nexports.make_matrix = make_matrix;\nexports.create_matrix = create_matrix;\nexports.append = append;\nexports.concat = concat;\nexports.sub = sub;\nexports.copy = copy;\nexports.fill = fill;\nexports.blit = blit;\nexports.to_list = to_list;\nexports.of_list = of_list;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.iter2 = iter2;\nexports.map2 = map2;\nexports.for_all = for_all;\nexports.exists = exists;\nexports.mem = mem;\nexports.memq = memq;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\nexports.Floatarray = Floatarray;\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/js/array.js"],"names":["Curry","require","Caml_obj","Caml_array","Caml_exceptions","Caml_js_exceptions","Caml_builtin_exceptions","make_float","caml_make_float_vect","Floatarray","init","l","f","invalid_argument","res","caml_make_vect","_1","i","make_matrix","sx","sy","x","copy","a","length","caml_array_sub","append","a1","a2","l1","concat","sub","ofs","len","fill","v","i_finish","blit","ofs1","ofs2","caml_array_blit","iter","iter2","b","_2","map","r","map2","la","lb","iteri","mapi","to_list","_i","_res","list_length","_accu","_param","param","accu","of_list","fold_left","fold_right","exists","p","n","for_all","mem","caml_equal","memq","Bottom","create","sort","cmp","maxson","i31","caml_array_get","trickle","e","i$1","j","caml_array_set","raw_i","i$2","internalToOCamlException","bubble","trickleup","father","assert_failure","e$1","stable_sort","merge","src1ofs","src1len","src2","src2ofs","src2len","dst","dstofs","src1r","src2r","_i1","_s1","_i2","_s2","_d","d","s2","i2","s1","i1","i1$1","i2$1","isortto","srcofs","sortto","l2","t","create_matrix","caml_array_concat","fast_sort","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAIG,eAAe,GAAGH,OAAO,CAAC,sBAAD,CAA7B;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,yBAAD,CAAhC;;AACA,IAAIK,uBAAuB,GAAGL,OAAO,CAAC,8BAAD,CAArC;;AAEA,IAAIM,UAAU,GAAGJ,UAAU,CAACK,oBAA5B;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAClB,MAAID,CAAC,KAAK,CAAV,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAIA,CAAC,GAAG,CAAR,EAAW;AACT,UAAM,CACAL,uBAAuB,CAACO,gBADxB,EAEA,YAFA,CAAN;AAID;;AACD,MAAIC,GAAG,GAAGX,UAAU,CAACY,cAAX,CAA0BJ,CAA1B,EAA6BX,KAAK,CAACgB,EAAN,CAASJ,CAAT,EAAY,CAAZ,CAA7B,CAAV;;AACA,OAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,CAAnB,EAAsB,EAAEM,CAAxB,EAA0B;AACxBH,IAAAA,GAAG,CAACG,CAAD,CAAH,GAASjB,KAAK,CAACgB,EAAN,CAASJ,CAAT,EAAYK,CAAZ,CAAT;AACD;;AACD,SAAOH,GAAP;AACD;;AAED,SAASI,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6BV,IAA7B,EAAmC;AACjC,MAAII,GAAG,GAAGX,UAAU,CAACY,cAAX,CAA0BI,EAA1B,EAA8B,EAA9B,CAAV;;AACA,OAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,EAAnB,EAAuB,EAAEE,CAAzB,EAA2B;AACzBP,IAAAA,GAAG,CAACO,CAAD,CAAH,GAASlB,UAAU,CAACY,cAAX,CAA0BK,EAA1B,EAA8BV,IAA9B,CAAT;AACD;;AACD,SAAOI,GAAP;AACD;;AAED,SAASQ,IAAT,CAAcC,CAAd,EAAiB;AACf,MAAIZ,CAAC,GAAGY,CAAC,CAACC,MAAV;;AACA,MAAIb,CAAC,KAAK,CAAV,EAAa;AACX,WAAO,EAAP;AACD,GAFD,MAEO;AACL,WAAOR,UAAU,CAACsB,cAAX,CAA0BF,CAA1B,EAA6B,CAA7B,EAAgCZ,CAAhC,CAAP;AACD;AACF;;AAED,SAASe,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AACtB,MAAIC,EAAE,GAAGF,EAAE,CAACH,MAAZ;;AACA,MAAIK,EAAE,KAAK,CAAX,EAAc;AACZ,WAAOP,IAAI,CAACM,EAAD,CAAX;AACD,GAFD,MAEO,IAAIA,EAAE,CAACJ,MAAH,KAAc,CAAlB,EAAqB;AAC1B,WAAOrB,UAAU,CAACsB,cAAX,CAA0BE,EAA1B,EAA8B,CAA9B,EAAiCE,EAAjC,CAAP;AACD,GAFM,MAEA;AACL,WAAOF,EAAE,CAACG,MAAH,CAAUF,EAAV,CAAP;AACD;AACF;;AAED,SAASG,GAAT,CAAaR,CAAb,EAAgBS,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,MAAID,GAAG,GAAG,CAAN,IAAWC,GAAG,GAAG,CAAjB,IAAsBD,GAAG,IAAIT,CAAC,CAACC,MAAF,GAAWS,GAAX,GAAiB,CAArB,CAA7B,EAAsD;AACpD,UAAM,CACA3B,uBAAuB,CAACO,gBADxB,EAEA,WAFA,CAAN;AAID;;AACD,SAAOV,UAAU,CAACsB,cAAX,CAA0BF,CAA1B,EAA6BS,GAA7B,EAAkCC,GAAlC,CAAP;AACD;;AAED,SAASC,IAAT,CAAcX,CAAd,EAAiBS,GAAjB,EAAsBC,GAAtB,EAA2BE,CAA3B,EAA8B;AAC5B,MAAIH,GAAG,GAAG,CAAN,IAAWC,GAAG,GAAG,CAAjB,IAAsBD,GAAG,IAAIT,CAAC,CAACC,MAAF,GAAWS,GAAX,GAAiB,CAArB,CAA7B,EAAsD;AACpD,UAAM,CACA3B,uBAAuB,CAACO,gBADxB,EAEA,YAFA,CAAN;AAID;;AACD,OAAI,IAAII,CAAC,GAAGe,GAAR,EAAaI,QAAQ,GAAGJ,GAAG,GAAGC,GAAN,GAAY,CAAxC,EAA2ChB,CAAC,GAAGmB,QAA/C,EAAyD,EAAEnB,CAA3D,EAA6D;AAC3DM,IAAAA,CAAC,CAACN,CAAD,CAAD,GAAOkB,CAAP;AACD;AAEF;;AAED,SAASE,IAAT,CAAcV,EAAd,EAAkBW,IAAlB,EAAwBV,EAAxB,EAA4BW,IAA5B,EAAkCN,GAAlC,EAAuC;AACrC,MAAIA,GAAG,GAAG,CAAN,IAAWK,IAAI,GAAG,CAAlB,IAAuBA,IAAI,IAAIX,EAAE,CAACH,MAAH,GAAYS,GAAZ,GAAkB,CAAtB,CAA3B,IAAuDM,IAAI,GAAG,CAA9D,IAAmEA,IAAI,IAAIX,EAAE,CAACJ,MAAH,GAAYS,GAAZ,GAAkB,CAAtB,CAA3E,EAAqG;AACnG,UAAM,CACA3B,uBAAuB,CAACO,gBADxB,EAEA,YAFA,CAAN;AAID;;AACD,SAAOV,UAAU,CAACqC,eAAX,CAA2Bb,EAA3B,EAA+BW,IAA/B,EAAqCV,EAArC,EAAyCW,IAAzC,EAA+CN,GAA/C,CAAP;AACD;;AAED,SAASQ,IAAT,CAAc7B,CAAd,EAAiBW,CAAjB,EAAoB;AAClB,OAAI,IAAIN,CAAC,GAAG,CAAR,EAAWmB,QAAQ,GAAGb,CAAC,CAACC,MAA5B,EAAoCP,CAAC,GAAGmB,QAAxC,EAAkD,EAAEnB,CAApD,EAAsD;AACpDjB,IAAAA,KAAK,CAACgB,EAAN,CAASJ,CAAT,EAAYW,CAAC,CAACN,CAAD,CAAb;AACD;AAEF;;AAED,SAASyB,KAAT,CAAe9B,CAAf,EAAkBW,CAAlB,EAAqBoB,CAArB,EAAwB;AACtB,MAAIpB,CAAC,CAACC,MAAF,KAAamB,CAAC,CAACnB,MAAnB,EAA2B;AACzB,UAAM,CACAlB,uBAAuB,CAACO,gBADxB,EAEA,+CAFA,CAAN;AAID;;AACD,OAAI,IAAII,CAAC,GAAG,CAAR,EAAWmB,QAAQ,GAAGb,CAAC,CAACC,MAA5B,EAAoCP,CAAC,GAAGmB,QAAxC,EAAkD,EAAEnB,CAApD,EAAsD;AACpDjB,IAAAA,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYW,CAAC,CAACN,CAAD,CAAb,EAAkB0B,CAAC,CAAC1B,CAAD,CAAnB;AACD;AAEF;;AAED,SAAS4B,GAAT,CAAajC,CAAb,EAAgBW,CAAhB,EAAmB;AACjB,MAAIZ,CAAC,GAAGY,CAAC,CAACC,MAAV;;AACA,MAAIb,CAAC,KAAK,CAAV,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAImC,CAAC,GAAG3C,UAAU,CAACY,cAAX,CAA0BJ,CAA1B,EAA6BX,KAAK,CAACgB,EAAN,CAASJ,CAAT,EAAYW,CAAC,CAAC,CAAD,CAAb,CAA7B,CAAR;;AACA,OAAI,IAAIN,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,CAAnB,EAAsB,EAAEM,CAAxB,EAA0B;AACxB6B,IAAAA,CAAC,CAAC7B,CAAD,CAAD,GAAOjB,KAAK,CAACgB,EAAN,CAASJ,CAAT,EAAYW,CAAC,CAACN,CAAD,CAAb,CAAP;AACD;;AACD,SAAO6B,CAAP;AACD;;AAED,SAASC,IAAT,CAAcnC,CAAd,EAAiBW,CAAjB,EAAoBoB,CAApB,EAAuB;AACrB,MAAIK,EAAE,GAAGzB,CAAC,CAACC,MAAX;AACA,MAAIyB,EAAE,GAAGN,CAAC,CAACnB,MAAX;;AACA,MAAIwB,EAAE,KAAKC,EAAX,EAAe;AACb,UAAM,CACA3C,uBAAuB,CAACO,gBADxB,EAEA,8CAFA,CAAN;AAID;;AACD,MAAImC,EAAE,KAAK,CAAX,EAAc;AACZ,WAAO,EAAP;AACD;;AACD,MAAIF,CAAC,GAAG3C,UAAU,CAACY,cAAX,CAA0BiC,EAA1B,EAA8BhD,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYW,CAAC,CAAC,CAAD,CAAb,EAAkBoB,CAAC,CAAC,CAAD,CAAnB,CAA9B,CAAR;;AACA,OAAI,IAAI1B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG+B,EAAnB,EAAuB,EAAE/B,CAAzB,EAA2B;AACzB6B,IAAAA,CAAC,CAAC7B,CAAD,CAAD,GAAOjB,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYW,CAAC,CAACN,CAAD,CAAb,EAAkB0B,CAAC,CAAC1B,CAAD,CAAnB,CAAP;AACD;;AACD,SAAO6B,CAAP;AACD;;AAED,SAASI,KAAT,CAAetC,CAAf,EAAkBW,CAAlB,EAAqB;AACnB,OAAI,IAAIN,CAAC,GAAG,CAAR,EAAWmB,QAAQ,GAAGb,CAAC,CAACC,MAA5B,EAAoCP,CAAC,GAAGmB,QAAxC,EAAkD,EAAEnB,CAApD,EAAsD;AACpDjB,IAAAA,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYK,CAAZ,EAAeM,CAAC,CAACN,CAAD,CAAhB;AACD;AAEF;;AAED,SAASkC,IAAT,CAAcvC,CAAd,EAAiBW,CAAjB,EAAoB;AAClB,MAAIZ,CAAC,GAAGY,CAAC,CAACC,MAAV;;AACA,MAAIb,CAAC,KAAK,CAAV,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAImC,CAAC,GAAG3C,UAAU,CAACY,cAAX,CAA0BJ,CAA1B,EAA6BX,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAY,CAAZ,EAAeW,CAAC,CAAC,CAAD,CAAhB,CAA7B,CAAR;;AACA,OAAI,IAAIN,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,CAAnB,EAAsB,EAAEM,CAAxB,EAA0B;AACxB6B,IAAAA,CAAC,CAAC7B,CAAD,CAAD,GAAOjB,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYK,CAAZ,EAAeM,CAAC,CAACN,CAAD,CAAhB,CAAP;AACD;;AACD,SAAO6B,CAAP;AACD;;AAED,SAASM,OAAT,CAAiB7B,CAAjB,EAAoB;AAClB,MAAI8B,EAAE,GAAG9B,CAAC,CAACC,MAAF,GAAW,CAAX,GAAe,CAAxB;;AACA,MAAI8B,IAAI;AAAG;AAAQ,GAAnB;;AACA,SAAM,IAAN,EAAY;AACV,QAAIxC,GAAG,GAAGwC,IAAV;AACA,QAAIrC,CAAC,GAAGoC,EAAR;;AACA,QAAIpC,CAAC,GAAG,CAAR,EAAW;AACT,aAAOH,GAAP;AACD;;AACDwC,IAAAA,IAAI;AAAG;AAAQ,KACb/B,CAAC,CAACN,CAAD,CADY,EAEbH,GAFa,CAAf;AAIAuC,IAAAA,EAAE,GAAGpC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACA;AACD;;AAAA;AACF;;AAED,SAASsC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,SAAM,IAAN,EAAY;AACV,QAAIC,KAAK,GAAGD,MAAZ;AACA,QAAIE,IAAI,GAAGH,KAAX;;AACA,QAAI,CAACE,KAAL,EAAY;AACV,aAAOC,IAAP;AACD;;AACDF,IAAAA,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAd;AACAF,IAAAA,KAAK,GAAGG,IAAI,GAAG,CAAP,GAAW,CAAnB;AACA;AACD;;AAAA;AACF;;AAED,SAASC,OAAT,CAAiBjD,CAAjB,EAAoB;AAClB,MAAI,CAACA,CAAL,EAAQ;AACN,WAAO,EAAP;AACD;;AACD,MAAIY,CAAC,GAAGpB,UAAU,CAACY,cAAX,CAA0BwC,WAAW,CAAC,CAAD,EAAI5C,CAAJ,CAArC,EAA6CA,CAAC,CAAC,CAAD,CAA9C,CAAR;AACA,MAAI0C,EAAE,GAAG,CAAT;AACA,MAAII,MAAM,GAAG9C,CAAC,CAAC,CAAD,CAAd;;AACA,SAAM,IAAN,EAAY;AACV,QAAI+C,KAAK,GAAGD,MAAZ;AACA,QAAIxC,CAAC,GAAGoC,EAAR;;AACA,QAAI,CAACK,KAAL,EAAY;AACV,aAAOnC,CAAP;AACD;;AACDA,IAAAA,CAAC,CAACN,CAAD,CAAD,GAAOyC,KAAK,CAAC,CAAD,CAAZ;AACAD,IAAAA,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAd;AACAL,IAAAA,EAAE,GAAGpC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACA;AACD;;AAAA;AACF;;AAED,SAAS4C,SAAT,CAAmBjD,CAAnB,EAAsBS,CAAtB,EAAyBE,CAAzB,EAA4B;AAC1B,MAAIuB,CAAC,GAAGzB,CAAR;;AACA,OAAI,IAAIJ,CAAC,GAAG,CAAR,EAAWmB,QAAQ,GAAGb,CAAC,CAACC,MAA5B,EAAoCP,CAAC,GAAGmB,QAAxC,EAAkD,EAAEnB,CAApD,EAAsD;AACpD6B,IAAAA,CAAC,GAAG9C,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYkC,CAAZ,EAAevB,CAAC,CAACN,CAAD,CAAhB,CAAJ;AACD;;AACD,SAAO6B,CAAP;AACD;;AAED,SAASgB,UAAT,CAAoBlD,CAApB,EAAuBW,CAAvB,EAA0BF,CAA1B,EAA6B;AAC3B,MAAIyB,CAAC,GAAGzB,CAAR;;AACA,OAAI,IAAIJ,CAAC,GAAGM,CAAC,CAACC,MAAF,GAAW,CAAX,GAAe,CAA3B,EAA8BP,CAAC,IAAI,CAAnC,EAAsC,EAAEA,CAAxC,EAA0C;AACxC6B,IAAAA,CAAC,GAAG9C,KAAK,CAAC4C,EAAN,CAAShC,CAAT,EAAYW,CAAC,CAACN,CAAD,CAAb,EAAkB6B,CAAlB,CAAJ;AACD;;AACD,SAAOA,CAAP;AACD;;AAED,SAASiB,MAAT,CAAgBC,CAAhB,EAAmBzC,CAAnB,EAAsB;AACpB,MAAI0C,CAAC,GAAG1C,CAAC,CAACC,MAAV;AACA,MAAI6B,EAAE,GAAG,CAAT;;AACA,SAAM,IAAN,EAAY;AACV,QAAIpC,CAAC,GAAGoC,EAAR;;AACA,QAAIpC,CAAC,KAAKgD,CAAV,EAAa;AACX,aAAO,KAAP;AACD;;AACD,QAAIjE,KAAK,CAACgB,EAAN,CAASgD,CAAT,EAAYzC,CAAC,CAACN,CAAD,CAAb,CAAJ,EAAuB;AACrB,aAAO,IAAP;AACD;;AACDoC,IAAAA,EAAE,GAAGpC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACA;AACD;;AAAA;AACF;;AAED,SAASiD,OAAT,CAAiBF,CAAjB,EAAoBzC,CAApB,EAAuB;AACrB,MAAI0C,CAAC,GAAG1C,CAAC,CAACC,MAAV;AACA,MAAI6B,EAAE,GAAG,CAAT;;AACA,SAAM,IAAN,EAAY;AACV,QAAIpC,CAAC,GAAGoC,EAAR;;AACA,QAAIpC,CAAC,KAAKgD,CAAV,EAAa;AACX,aAAO,IAAP;AACD;;AACD,QAAI,CAACjE,KAAK,CAACgB,EAAN,CAASgD,CAAT,EAAYzC,CAAC,CAACN,CAAD,CAAb,CAAL,EAAwB;AACtB,aAAO,KAAP;AACD;;AACDoC,IAAAA,EAAE,GAAGpC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACA;AACD;;AAAA;AACF;;AAED,SAASkD,GAAT,CAAa9C,CAAb,EAAgBE,CAAhB,EAAmB;AACjB,MAAI0C,CAAC,GAAG1C,CAAC,CAACC,MAAV;AACA,MAAI6B,EAAE,GAAG,CAAT;;AACA,SAAM,IAAN,EAAY;AACV,QAAIpC,CAAC,GAAGoC,EAAR;;AACA,QAAIpC,CAAC,KAAKgD,CAAV,EAAa;AACX,aAAO,KAAP;AACD;;AACD,QAAI/D,QAAQ,CAACkE,UAAT,CAAoB7C,CAAC,CAACN,CAAD,CAArB,EAA0BI,CAA1B,CAAJ,EAAkC;AAChC,aAAO,IAAP;AACD;;AACDgC,IAAAA,EAAE,GAAGpC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACA;AACD;;AAAA;AACF;;AAED,SAASoD,IAAT,CAAchD,CAAd,EAAiBE,CAAjB,EAAoB;AAClB,MAAI0C,CAAC,GAAG1C,CAAC,CAACC,MAAV;AACA,MAAI6B,EAAE,GAAG,CAAT;;AACA,SAAM,IAAN,EAAY;AACV,QAAIpC,CAAC,GAAGoC,EAAR;;AACA,QAAIpC,CAAC,KAAKgD,CAAV,EAAa;AACX,aAAO,KAAP;AACD;;AACD,QAAI5C,CAAC,KAAKE,CAAC,CAACN,CAAD,CAAX,EAAgB;AACd,aAAO,IAAP;AACD;;AACDoC,IAAAA,EAAE,GAAGpC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACA;AACD;;AAAA;AACF;;AAED,IAAIqD,MAAM,GAAGlE,eAAe,CAACmE,MAAhB,CAAuB,cAAvB,CAAb;;AAEA,SAASC,IAAT,CAAcC,GAAd,EAAmBlD,CAAnB,EAAsB;AACpB,MAAImD,MAAM,GAAG,SAATA,MAAS,CAAU/D,CAAV,EAAaM,CAAb,EAAgB;AAC3B,QAAI0D,GAAG,GAAG,CAAC,CAAC1D,CAAC,GAAGA,CAAJ,GAAQ,CAAT,IAAcA,CAAd,GAAkB,CAAnB,IAAwB,CAAxB,GAA4B,CAAtC;AACA,QAAII,CAAC,GAAGsD,GAAR;;AACA,QAAI,CAACA,GAAG,GAAG,CAAN,GAAU,CAAX,IAAgBhE,CAApB,EAAuB;AACrB,UAAIX,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAActE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BoD,GAA7B,CAAd,EAAiDxE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BoD,GAAG,GAAG,CAAN,GAAU,CAAvC,CAAjD,IAA8F,CAAlG,EAAqG;AACnGtD,QAAAA,CAAC,GAAGsD,GAAG,GAAG,CAAN,GAAU,CAAd;AACD;;AACD,UAAI3E,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAActE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BF,CAA7B,CAAd,EAA+ClB,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BoD,GAAG,GAAG,CAAN,GAAU,CAAvC,CAA/C,IAA4F,CAAhG,EAAmG;AACjGtD,QAAAA,CAAC,GAAGsD,GAAG,GAAG,CAAN,GAAU,CAAd;AACD;;AACD,aAAOtD,CAAP;AACD;;AACD,QAAI,CAACsD,GAAG,GAAG,CAAN,GAAU,CAAX,IAAgBhE,CAAhB,IAAqBX,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAActE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BoD,GAA7B,CAAd,EAAiDxE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BoD,GAAG,GAAG,CAAN,GAAU,CAAvC,CAAjD,IAA8F,CAAvH,EAA0H;AACxH,aAAOA,GAAG,GAAG,CAAN,GAAU,CAAjB;AACD;;AACD,QAAIA,GAAG,GAAGhE,CAAV,EAAa;AACX,aAAOgE,GAAP;AACD;;AACD,UAAM,CACAL,MADA,EAEArD,CAFA,CAAN;AAID,GAtBD;;AAuBA,MAAI4D,OAAO,GAAG,SAAVA,OAAU,CAAUlE,CAAV,EAAaM,CAAb,EAAgB6D,CAAhB,EAAmB;AAC/B,QAAI;AACF,UAAIzB,EAAE,GAAGpC,CAAT;;AACA,aAAM,IAAN,EAAY;AACV,YAAI8D,GAAG,GAAG1B,EAAV;AACA,YAAI2B,CAAC,GAAGN,MAAM,CAAC/D,CAAD,EAAIoE,GAAJ,CAAd;;AACA,YAAI/E,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAActE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6ByD,CAA7B,CAAd,EAA+CF,CAA/C,KAAqD,CAAzD,EAA4D;AAC1D,iBAAO3E,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6BwD,GAA7B,EAAkCD,CAAlC,CAAP;AACD;;AACD3E,QAAAA,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6BwD,GAA7B,EAAkC5E,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6ByD,CAA7B,CAAlC;AACA3B,QAAAA,EAAE,GAAG2B,CAAL;AACA;AACD;;AAAA;AACF,KAZD,CAaA,OAAOE,KAAP,EAAa;AACX,UAAIC,GAAG,GAAG9E,kBAAkB,CAAC+E,wBAAnB,CAA4CF,KAA5C,CAAV;;AACA,UAAIC,GAAG,CAAC,CAAD,CAAH,KAAWb,MAAf,EAAuB;AACrB,eAAOnE,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6B4D,GAAG,CAAC,CAAD,CAAhC,EAAqCL,CAArC,CAAP;AACD;;AACD,YAAMK,GAAN;AACD;AACF,GArBD;;AAsBA,MAAIE,MAAM,GAAG,SAATA,MAAS,CAAU1E,CAAV,EAAaM,CAAb,EAAgB;AAC3B,QAAI;AACF,UAAIoC,EAAE,GAAGpC,CAAT;;AACA,aAAM,IAAN,EAAY;AACV,YAAI8D,GAAG,GAAG1B,EAAV;AACA,YAAI2B,CAAC,GAAGN,MAAM,CAAC/D,CAAD,EAAIoE,GAAJ,CAAd;AACA5E,QAAAA,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6BwD,GAA7B,EAAkC5E,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6ByD,CAA7B,CAAlC;AACA3B,QAAAA,EAAE,GAAG2B,CAAL;AACA;AACD;;AAAA;AACF,KATD,CAUA,OAAOE,KAAP,EAAa;AACX,UAAIC,GAAG,GAAG9E,kBAAkB,CAAC+E,wBAAnB,CAA4CF,KAA5C,CAAV;;AACA,UAAIC,GAAG,CAAC,CAAD,CAAH,KAAWb,MAAf,EAAuB;AACrB,eAAOa,GAAG,CAAC,CAAD,CAAV;AACD;;AACD,YAAMA,GAAN;AACD;AACF,GAlBD;;AAmBA,MAAIG,SAAS,GAAG,SAAZA,SAAY,CAAUjC,EAAV,EAAcyB,CAAd,EAAiB;AAC/B,WAAM,IAAN,EAAY;AACV,UAAI7D,CAAC,GAAGoC,EAAR;AACA,UAAIkC,MAAM,GAAG,CAACtE,CAAC,GAAG,CAAJ,GAAQ,CAAT,IAAc,CAAd,GAAkB,CAA/B;;AACA,UAAIA,CAAC,KAAKsE,MAAV,EAAkB;AAChB,cAAM,CACAjF,uBAAuB,CAACkF,cADxB;AAEA;AAAW,SACT,UADS,EAET,GAFS,EAGT,CAHS,CAFX,CAAN;AAQD;;AACD,UAAIxF,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAActE,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BgE,MAA7B,CAAd,EAAoDT,CAApD,KAA0D,CAA9D,EAAiE;AAC/D,eAAO3E,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6BN,CAA7B,EAAgC6D,CAAhC,CAAP;AACD;;AACD3E,MAAAA,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6BN,CAA7B,EAAgCd,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BgE,MAA7B,CAAhC;;AACA,UAAIA,MAAM,IAAI,CAAd,EAAiB;AACf,eAAOpF,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6B,CAA7B,EAAgCuD,CAAhC,CAAP;AACD;;AACDzB,MAAAA,EAAE,GAAGkC,MAAL;AACA;AACD;;AAAA;AACF,GAxBD;;AAyBA,MAAI5E,CAAC,GAAGY,CAAC,CAACC,MAAV;;AACA,OAAI,IAAIP,CAAC,GAAG,CAAC,CAACN,CAAC,GAAG,CAAJ,GAAQ,CAAT,IAAc,CAAd,GAAkB,CAAnB,IAAwB,CAAxB,GAA4B,CAAxC,EAA2CM,CAAC,IAAI,CAAhD,EAAmD,EAAEA,CAArD,EAAuD;AACrD4D,IAAAA,OAAO,CAAClE,CAAD,EAAIM,CAAJ,EAAOd,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BN,CAA7B,CAAP,CAAP;AACD;;AACD,OAAI,IAAI8D,GAAG,GAAGpE,CAAC,GAAG,CAAJ,GAAQ,CAAtB,EAAyBoE,GAAG,IAAI,CAAhC,EAAmC,EAAEA,GAArC,EAAyC;AACvC,QAAID,CAAC,GAAG3E,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BwD,GAA7B,CAAR;AACA5E,IAAAA,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6BwD,GAA7B,EAAkC5E,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6B,CAA7B,CAAlC;AACA+D,IAAAA,SAAS,CAACD,MAAM,CAACN,GAAD,EAAM,CAAN,CAAP,EAAiBD,CAAjB,CAAT;AACD;;AACD,MAAInE,CAAC,IAAI,CAAT,EAAY;AACV;AACD;;AACD,MAAI8E,GAAG,GAAGtF,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6B,CAA7B,CAAV;AACApB,EAAAA,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6B,CAA7B,EAAgCpB,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6B,CAA7B,CAAhC;AACA,SAAOpB,UAAU,CAAC8E,cAAX,CAA0B1D,CAA1B,EAA6B,CAA7B,EAAgCkE,GAAhC,CAAP;AACD;;AAED,SAASC,WAAT,CAAqBjB,GAArB,EAA0BlD,CAA1B,EAA6B;AAC3B,MAAIoE,KAAK,GAAG,SAARA,KAAQ,CAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,OAA3C,EAAoDC,GAApD,EAAyDC,MAAzD,EAAiE;AAC3E,QAAIC,KAAK,GAAGP,OAAO,GAAGC,OAAV,GAAoB,CAAhC;AACA,QAAIO,KAAK,GAAGL,OAAO,GAAGC,OAAV,GAAoB,CAAhC;AACA,QAAIK,GAAG,GAAGT,OAAV;;AACA,QAAIU,GAAG,GAAGnG,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BqE,OAA7B,CAAV;;AACA,QAAIW,GAAG,GAAGR,OAAV;;AACA,QAAIS,GAAG,GAAGrG,UAAU,CAACyE,cAAX,CAA0BkB,IAA1B,EAAgCC,OAAhC,CAAV;;AACA,QAAIU,EAAE,GAAGP,MAAT;;AACA,WAAM,IAAN,EAAY;AACV,UAAIQ,CAAC,GAAGD,EAAR;AACA,UAAIE,EAAE,GAAGH,GAAT;AACA,UAAII,EAAE,GAAGL,GAAT;AACA,UAAIM,EAAE,GAAGP,GAAT;AACA,UAAIQ,EAAE,GAAGT,GAAT;;AACA,UAAIrG,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAAcoC,EAAd,EAAkBF,EAAlB,KAAyB,CAA7B,EAAgC;AAC9BxG,QAAAA,UAAU,CAAC8E,cAAX,CAA0BgB,GAA1B,EAA+BS,CAA/B,EAAkCG,EAAlC;AACA,YAAIE,IAAI,GAAGD,EAAE,GAAG,CAAL,GAAS,CAApB;;AACA,YAAIC,IAAI,IAAIZ,KAAZ,EAAmB;AACjB,iBAAO9D,IAAI,CAACyD,IAAD,EAAOc,EAAP,EAAWX,GAAX,EAAgBS,CAAC,GAAG,CAAJ,GAAQ,CAAxB,EAA2BN,KAAK,GAAGQ,EAAR,GAAa,CAAxC,CAAX;AACD;;AACDH,QAAAA,EAAE,GAAGC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACAJ,QAAAA,GAAG,GAAGnG,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6BwF,IAA7B,CAAN;AACAV,QAAAA,GAAG,GAAGU,IAAN;AACA;AACD;;AACD5G,MAAAA,UAAU,CAAC8E,cAAX,CAA0BgB,GAA1B,EAA+BS,CAA/B,EAAkCC,EAAlC;AACA,UAAIK,IAAI,GAAGJ,EAAE,GAAG,CAAL,GAAS,CAApB;;AACA,UAAII,IAAI,IAAIZ,KAAZ,EAAmB;AACjB,eAAO/D,IAAI,CAACd,CAAD,EAAIuF,EAAJ,EAAQb,GAAR,EAAaS,CAAC,GAAG,CAAJ,GAAQ,CAArB,EAAwBP,KAAK,GAAGW,EAAR,GAAa,CAArC,CAAX;AACD;;AACDL,MAAAA,EAAE,GAAGC,CAAC,GAAG,CAAJ,GAAQ,CAAb;AACAF,MAAAA,GAAG,GAAGrG,UAAU,CAACyE,cAAX,CAA0BkB,IAA1B,EAAgCkB,IAAhC,CAAN;AACAT,MAAAA,GAAG,GAAGS,IAAN;AACA;AACD;;AAAA;AACF,GAnCD;;AAoCA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,MAAV,EAAkBjB,GAAlB,EAAuBC,MAAvB,EAA+BjE,GAA/B,EAAoC;AAChD,SAAI,IAAIhB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgB,GAAnB,EAAwB,EAAEhB,CAA1B,EAA4B;AAC1B,UAAI6D,CAAC,GAAG3E,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6B2F,MAAM,GAAGjG,CAAT,GAAa,CAA1C,CAAR;AACA,UAAI+D,CAAC,GAAG,CAACkB,MAAM,GAAGjF,CAAT,GAAa,CAAd,IAAmB,CAAnB,GAAuB,CAA/B;;AACA,aAAM+D,CAAC,IAAIkB,MAAL,IAAelG,KAAK,CAAC4C,EAAN,CAAS6B,GAAT,EAActE,UAAU,CAACyE,cAAX,CAA0BqB,GAA1B,EAA+BjB,CAA/B,CAAd,EAAiDF,CAAjD,IAAsD,CAA3E,EAA8E;AAC5E3E,QAAAA,UAAU,CAAC8E,cAAX,CAA0BgB,GAA1B,EAA+BjB,CAAC,GAAG,CAAJ,GAAQ,CAAvC,EAA0C7E,UAAU,CAACyE,cAAX,CAA0BqB,GAA1B,EAA+BjB,CAA/B,CAA1C;AACAA,QAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAZ;AACD;;AAAA;AACD7E,MAAAA,UAAU,CAAC8E,cAAX,CAA0BgB,GAA1B,EAA+BjB,CAAC,GAAG,CAAJ,GAAQ,CAAvC,EAA0CF,CAA1C;AACD;AAEF,GAXD;;AAYA,MAAIqC,MAAM,GAAG,SAATA,MAAS,CAAUD,MAAV,EAAkBjB,GAAlB,EAAuBC,MAAvB,EAA+BjE,GAA/B,EAAoC;AAC/C,QAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,aAAOgF,OAAO,CAACC,MAAD,EAASjB,GAAT,EAAcC,MAAd,EAAsBjE,GAAtB,CAAd;AACD;;AACD,QAAIJ,EAAE,GAAGI,GAAG,GAAG,CAAN,GAAU,CAAnB;AACA,QAAImF,EAAE,GAAGnF,GAAG,GAAGJ,EAAN,GAAW,CAApB;AACAsF,IAAAA,MAAM,CAACD,MAAM,GAAGrF,EAAT,GAAc,CAAf,EAAkBoE,GAAlB,EAAuBC,MAAM,GAAGrE,EAAT,GAAc,CAArC,EAAwCuF,EAAxC,CAAN;AACAD,IAAAA,MAAM,CAACD,MAAD,EAAS3F,CAAT,EAAY2F,MAAM,GAAGE,EAAT,GAAc,CAA1B,EAA6BvF,EAA7B,CAAN;AACA,WAAO8D,KAAK,CAACuB,MAAM,GAAGE,EAAT,GAAc,CAAf,EAAkBvF,EAAlB,EAAsBoE,GAAtB,EAA2BC,MAAM,GAAGrE,EAAT,GAAc,CAAzC,EAA4CuF,EAA5C,EAAgDnB,GAAhD,EAAqDC,MAArD,CAAZ;AACD,GATD;;AAUA,MAAIvF,CAAC,GAAGY,CAAC,CAACC,MAAV;;AACA,MAAIb,CAAC,IAAI,CAAT,EAAY;AACV,WAAOsG,OAAO,CAAC,CAAD,EAAI1F,CAAJ,EAAO,CAAP,EAAUZ,CAAV,CAAd;AACD;;AACD,MAAIkB,EAAE,GAAGlB,CAAC,GAAG,CAAJ,GAAQ,CAAjB;AACA,MAAIyG,EAAE,GAAGzG,CAAC,GAAGkB,EAAJ,GAAS,CAAlB;AACA,MAAIwF,CAAC,GAAGlH,UAAU,CAACY,cAAX,CAA0BqG,EAA1B,EAA8BjH,UAAU,CAACyE,cAAX,CAA0BrD,CAA1B,EAA6B,CAA7B,CAA9B,CAAR;AACA4F,EAAAA,MAAM,CAACtF,EAAD,EAAKwF,CAAL,EAAQ,CAAR,EAAWD,EAAX,CAAN;AACAD,EAAAA,MAAM,CAAC,CAAD,EAAI5F,CAAJ,EAAO6F,EAAP,EAAWvF,EAAX,CAAN;AACA,SAAO8D,KAAK,CAACyB,EAAD,EAAKvF,EAAL,EAASwF,CAAT,EAAY,CAAZ,EAAeD,EAAf,EAAmB7F,CAAnB,EAAsB,CAAtB,CAAZ;AACD;;AAED,IAAI+F,aAAa,GAAGpG,WAApB;AAEA,IAAIY,MAAM,GAAG3B,UAAU,CAACoH,iBAAxB;AAEA,IAAIC,SAAS,GAAG9B,WAAhB;AAEA+B,OAAO,CAAClH,UAAR,GAAqBA,UAArB;AACAkH,OAAO,CAAC/G,IAAR,GAAeA,IAAf;AACA+G,OAAO,CAACvG,WAAR,GAAsBA,WAAtB;AACAuG,OAAO,CAACH,aAAR,GAAwBA,aAAxB;AACAG,OAAO,CAAC/F,MAAR,GAAiBA,MAAjB;AACA+F,OAAO,CAAC3F,MAAR,GAAiBA,MAAjB;AACA2F,OAAO,CAAC1F,GAAR,GAAcA,GAAd;AACA0F,OAAO,CAACnG,IAAR,GAAeA,IAAf;AACAmG,OAAO,CAACvF,IAAR,GAAeA,IAAf;AACAuF,OAAO,CAACpF,IAAR,GAAeA,IAAf;AACAoF,OAAO,CAACrE,OAAR,GAAkBA,OAAlB;AACAqE,OAAO,CAAC7D,OAAR,GAAkBA,OAAlB;AACA6D,OAAO,CAAChF,IAAR,GAAeA,IAAf;AACAgF,OAAO,CAACvE,KAAR,GAAgBA,KAAhB;AACAuE,OAAO,CAAC5E,GAAR,GAAcA,GAAd;AACA4E,OAAO,CAACtE,IAAR,GAAeA,IAAf;AACAsE,OAAO,CAAC5D,SAAR,GAAoBA,SAApB;AACA4D,OAAO,CAAC3D,UAAR,GAAqBA,UAArB;AACA2D,OAAO,CAAC/E,KAAR,GAAgBA,KAAhB;AACA+E,OAAO,CAAC1E,IAAR,GAAeA,IAAf;AACA0E,OAAO,CAACvD,OAAR,GAAkBA,OAAlB;AACAuD,OAAO,CAAC1D,MAAR,GAAiBA,MAAjB;AACA0D,OAAO,CAACtD,GAAR,GAAcA,GAAd;AACAsD,OAAO,CAACpD,IAAR,GAAeA,IAAf;AACAoD,OAAO,CAACjD,IAAR,GAAeA,IAAf;AACAiD,OAAO,CAAC/B,WAAR,GAAsBA,WAAtB;AACA+B,OAAO,CAACD,SAAR,GAAoBA,SAApB;AACAC,OAAO,CAAChH,UAAR,GAAqBA,UAArB;AACA","sourcesContent":["'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Caml_obj = require(\"./caml_obj.js\");\nvar Caml_array = require(\"./caml_array.js\");\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\nvar Caml_js_exceptions = require(\"./caml_js_exceptions.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nvar make_float = Caml_array.caml_make_float_vect;\n\nvar Floatarray = { };\n\nfunction init(l, f) {\n  if (l === 0) {\n    return [];\n  }\n  if (l < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.init\"\n        ];\n  }\n  var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n  for(var i = 1; i < l; ++i){\n    res[i] = Curry._1(f, i);\n  }\n  return res;\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, []);\n  for(var x = 0; x < sx; ++x){\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n  if (l === 0) {\n    return [];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.sub\"\n        ];\n  }\n  return Caml_array.caml_array_sub(a, ofs, len);\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.fill\"\n        ];\n  }\n  for(var i = ofs ,i_finish = ofs + len | 0; i < i_finish; ++i){\n    a[i] = v;\n  }\n  \n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.blit\"\n        ];\n  }\n  return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length; i < i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  \n}\n\nfunction iter2(f, a, b) {\n  if (a.length !== b.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.iter2: arrays must have the same length\"\n        ];\n  }\n  for(var i = 0 ,i_finish = a.length; i < i_finish; ++i){\n    Curry._2(f, a[i], b[i]);\n  }\n  \n}\n\nfunction map(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return [];\n  }\n  var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n  for(var i = 1; i < l; ++i){\n    r[i] = Curry._1(f, a[i]);\n  }\n  return r;\n}\n\nfunction map2(f, a, b) {\n  var la = a.length;\n  var lb = b.length;\n  if (la !== lb) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.map2: arrays must have the same length\"\n        ];\n  }\n  if (la === 0) {\n    return [];\n  }\n  var r = Caml_array.caml_make_vect(la, Curry._2(f, a[0], b[0]));\n  for(var i = 1; i < la; ++i){\n    r[i] = Curry._2(f, a[i], b[i]);\n  }\n  return r;\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length; i < i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  \n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return [];\n  }\n  var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n  for(var i = 1; i < l; ++i){\n    r[i] = Curry._2(f, i, a[i]);\n  }\n  return r;\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n  var _res = /* [] */0;\n  while(true) {\n    var res = _res;\n    var i = _i;\n    if (i < 0) {\n      return res;\n    }\n    _res = /* :: */[\n      a[i],\n      res\n    ];\n    _i = i - 1 | 0;\n    continue ;\n  };\n}\n\nfunction list_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (!param) {\n      return accu;\n    }\n    _param = param[1];\n    _accu = accu + 1 | 0;\n    continue ;\n  };\n}\n\nfunction of_list(l) {\n  if (!l) {\n    return [];\n  }\n  var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n  var _i = 1;\n  var _param = l[1];\n  while(true) {\n    var param = _param;\n    var i = _i;\n    if (!param) {\n      return a;\n    }\n    a[i] = param[0];\n    _param = param[1];\n    _i = i + 1 | 0;\n    continue ;\n  };\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length; i < i_finish; ++i){\n    r = Curry._2(f, r, a[i]);\n  }\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = Curry._2(f, a[i], r);\n  }\n  return r;\n}\n\nfunction exists(p, a) {\n  var n = a.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i === n) {\n      return false;\n    }\n    if (Curry._1(p, a[i])) {\n      return true;\n    }\n    _i = i + 1 | 0;\n    continue ;\n  };\n}\n\nfunction for_all(p, a) {\n  var n = a.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i === n) {\n      return true;\n    }\n    if (!Curry._1(p, a[i])) {\n      return false;\n    }\n    _i = i + 1 | 0;\n    continue ;\n  };\n}\n\nfunction mem(x, a) {\n  var n = a.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i === n) {\n      return false;\n    }\n    if (Caml_obj.caml_equal(a[i], x)) {\n      return true;\n    }\n    _i = i + 1 | 0;\n    continue ;\n  };\n}\n\nfunction memq(x, a) {\n  var n = a.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i === n) {\n      return false;\n    }\n    if (x === a[i]) {\n      return true;\n    }\n    _i = i + 1 | 0;\n    continue ;\n  };\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function (l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n      return x;\n    }\n    if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    }\n    if (i31 < l) {\n      return i31;\n    }\n    throw [\n          Bottom,\n          i\n        ];\n  };\n  var trickle = function (l, i, e) {\n    try {\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l, i$1);\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e) <= 0) {\n          return Caml_array.caml_array_set(a, i$1, e);\n        }\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_i){\n      var i$2 = Caml_js_exceptions.internalToOCamlException(raw_i);\n      if (i$2[0] === Bottom) {\n        return Caml_array.caml_array_set(a, i$2[1], e);\n      }\n      throw i$2;\n    }\n  };\n  var bubble = function (l, i) {\n    try {\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_i){\n      var i$2 = Caml_js_exceptions.internalToOCamlException(raw_i);\n      if (i$2[0] === Bottom) {\n        return i$2[1];\n      }\n      throw i$2;\n    }\n  };\n  var trickleup = function (_i, e) {\n    while(true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n      if (i === father) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"array.ml\",\n                238,\n                4\n              ]\n            ];\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) >= 0) {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n      Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n      if (father <= 0) {\n        return Caml_array.caml_array_set(a, 0, e);\n      }\n      _i = father;\n      continue ;\n    };\n  };\n  var l = a.length;\n  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n  if (l <= 1) {\n    return ;\n  }\n  var e$1 = Caml_array.caml_array_get(a, 1);\n  Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n  return Caml_array.caml_array_set(a, 0, e$1);\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n    var _i2 = src2ofs;\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n    var _d = dstofs;\n    while(true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n        if (i1$1 >= src1r) {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n        _d = d + 1 | 0;\n        _s1 = Caml_array.caml_array_get(a, i1$1);\n        _i1 = i1$1;\n        continue ;\n      }\n      Caml_array.caml_array_set(dst, d, s2);\n      var i2$1 = i2 + 1 | 0;\n      if (i2$1 >= src2r) {\n        return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n      }\n      _d = d + 1 | 0;\n      _s2 = Caml_array.caml_array_get(src2, i2$1);\n      _i2 = i2$1;\n      continue ;\n    };\n  };\n  var isortto = function (srcofs, dst, dstofs, len) {\n    for(var i = 0; i < len; ++i){\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      };\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n    \n  };\n  var sortto = function (srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    }\n    var l1 = len / 2 | 0;\n    var l2 = len - l1 | 0;\n    sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n    sortto(srcofs, a, srcofs + l2 | 0, l1);\n    return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n  };\n  var l = a.length;\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  }\n  var l1 = l / 2 | 0;\n  var l2 = l - l1 | 0;\n  var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n  sortto(l1, t, 0, l2);\n  sortto(0, a, l2, l1);\n  return merge(l2, l1, t, 0, l2, a, 0);\n}\n\nvar create_matrix = make_matrix;\n\nvar concat = Caml_array.caml_array_concat;\n\nvar fast_sort = stable_sort;\n\nexports.make_float = make_float;\nexports.init = init;\nexports.make_matrix = make_matrix;\nexports.create_matrix = create_matrix;\nexports.append = append;\nexports.concat = concat;\nexports.sub = sub;\nexports.copy = copy;\nexports.fill = fill;\nexports.blit = blit;\nexports.to_list = to_list;\nexports.of_list = of_list;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.iter2 = iter2;\nexports.map2 = map2;\nexports.for_all = for_all;\nexports.exists = exists;\nexports.mem = mem;\nexports.memq = memq;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\nexports.Floatarray = Floatarray;\n/* No side effect */\n"]},"metadata":{},"sourceType":"script"}