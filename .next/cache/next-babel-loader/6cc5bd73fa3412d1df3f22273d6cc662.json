{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar Block = require(\"./block.js\");\n\nvar setupChromeDebugger = function setupChromeDebugger(_) {\n  // I don't know how to directly refer to the classes that chrome's built-in\n  // formatters use. adding \"class\": \"foo\" doesn't seem to work\n  // tree-outline\n  var olStyle = {\n    \"style\": \"list-style-type: none; padding-left: 12px; margin: 0\"\n  }; // object-properties-section-separator\n\n  var colonStyle = {\n    \"style\": \"flex-shrink: 0; padding-right: 5px\"\n  };\n\n  var showObject = function showObject(value) {\n    if (value == undefined) {\n      return value + '';\n    } else {\n      return [\"object\", {\n        \"object\": value\n      }];\n    }\n  };\n\n  var listToArray = function listToArray(data) {\n    var result = [];\n    var cur = data;\n    var index = 0;\n\n    while (typeof cur !== \"number\") {\n      result.push([\"li\", {}, [\"span\", {\n        \"style\": \"color: rgb(227, 110, 236)\"\n      }, index], [\"span\", colonStyle, \":\"], showObject(cur[0])]);\n      cur = cur[1];\n      index++;\n    }\n\n    return result;\n  };\n\n  var variantCustomFormatter = function variantCustomFormatter(data, recordVariant) {\n    if (recordVariant === \"::\") {\n      return [\"ol\", olStyle].concat(_toConsumableArray(listToArray(data)));\n    } else {\n      var spacedData = [];\n      data.forEach(function (cur) {\n        spacedData.push([\"span\", {\n          \"style\": \"margin-right: 12px\"\n        }, showObject(cur)]);\n      });\n      return [\"ol\", olStyle].concat(spacedData);\n    }\n  };\n\n  var variantPreview = function variantPreview(x, recordVariant) {\n    if (recordVariant === \"::\") {\n      // show the length, just like for array\n      var length = listToArray(x).length;\n      return ['span', {}, \"list(\".concat(length, \")\")];\n    }\n\n    return ['span', {}, \"\".concat(recordVariant, \"(\\u2026)\")];\n  };\n\n  var isOCamlExceptionOrExtensionHead = function isOCamlExceptionOrExtensionHead(x) {\n    return Array.isArray(x) && x.tag === 248 && typeof x[0] === \"string\";\n  };\n\n  var isOCamlExceptionOrExtension = function isOCamlExceptionOrExtension(x) {\n    return Array.isArray(x) && x[0] !== undefined && isOCamlExceptionOrExtensionHead(x[0]);\n  };\n\n  var formatter = {\n    header: function header(x) {\n      var recordVariant;\n      var recordPolyVar;\n\n      if ((recordVariant = x[Symbol[\"for\"]('BsVariant')]) !== undefined) {\n        return variantPreview(x, recordVariant);\n      } else if (isOCamlExceptionOrExtension(x)) {\n        return ['div', {}, \"\".concat(x[0][0], \"(\\u2026)\")];\n      } else if ((recordPolyVar = x[Symbol[\"for\"]('BsPolyVar')]) !== undefined) {\n        return ['div', {}, \"`\".concat(recordPolyVar, \"#\").concat(x[0])];\n      }\n\n      return null;\n    },\n    hasBody: function hasBody(x) {\n      var recordVariant;\n      var recordPolyVar;\n\n      if ((recordVariant = x[Symbol[\"for\"]('BsVariant')]) !== undefined) {\n        return recordVariant;\n      } else if (isOCamlExceptionOrExtension(x)) {\n        return true;\n      } else if ((recordPolyVar = x[Symbol[\"for\"]('BsPolyVar')]) !== undefined) {\n        return true;\n      }\n\n      return false;\n    },\n    body: function body(x) {\n      var recordVariant;\n      var recordPolyVar;\n\n      if ((recordVariant = x[Symbol[\"for\"]('BsVariant')]) !== undefined) {\n        return variantCustomFormatter(x, recordVariant);\n      } else if ((recordPolyVar = x[Symbol[\"for\"]('BsPolyVar')]) !== undefined) {\n        return showObject(x[1]);\n      } else if (isOCamlExceptionOrExtension(x)) {\n        return [\"ol\", olStyle].concat(_toConsumableArray(x.slice(1).map(function (cur) {\n          return showObject(cur);\n        })));\n      }\n    }\n  };\n\n  if (false) {\n    global.devtoolsFormatters = [formatter];\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n};\n\nvar setup = {\n  contents: false\n};\n\nfunction setupOnce(param) {\n  if (!setup.contents) {\n    setup.contents = true;\n    return setupChromeDebugger(undefined);\n  }\n}\n\nfunction variant(meta, tag, xs) {\n  setupOnce(undefined);\n  xs.tag = tag;\n  return Object.defineProperty(xs, Symbol[\"for\"](\"BsVariant\"), {\n    value: meta\n  });\n}\n\nfunction simpleVariant(meta, xs) {\n  setupOnce(undefined);\n  return Object.defineProperty(xs, Symbol[\"for\"](\"BsVariant\"), {\n    value: meta\n  });\n}\n\nfunction polyVar(meta, xs) {\n  setupOnce(undefined);\n  return Object.defineProperty(xs, Symbol[\"for\"](\"BsPolyVar\"), {\n    value: meta\n  });\n}\n\nvar __ = Block.__;\nexports.__ = __;\nexports.variant = variant;\nexports.simpleVariant = simpleVariant;\nexports.polyVar = polyVar;\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/js/caml_chrome_debugger.js"],"names":["Block","require","setupChromeDebugger","_","olStyle","colonStyle","showObject","value","undefined","listToArray","data","result","cur","index","push","variantCustomFormatter","recordVariant","spacedData","forEach","variantPreview","x","length","isOCamlExceptionOrExtensionHead","Array","isArray","tag","isOCamlExceptionOrExtension","formatter","header","recordPolyVar","Symbol","hasBody","body","slice","map","global","devtoolsFormatters","window","setup","contents","setupOnce","param","variant","meta","xs","Object","defineProperty","simpleVariant","polyVar","__","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Block = require(\"./block.js\");\n\nvar setupChromeDebugger = (function(_){\n \n // I don't know how to directly refer to the classes that chrome's built-in\n // formatters use. adding \"class\": \"foo\" doesn't seem to work\n // tree-outline\n var olStyle = {\"style\": \"list-style-type: none; padding-left: 12px; margin: 0\"}\n // object-properties-section-separator\n var colonStyle = {\"style\": \"flex-shrink: 0; padding-right: 5px\"}\n \n\n var showObject = function (value) {\n   if (value == undefined) {\n     return value + ''\n   } else {\n     return [\"object\", {\"object\": value}]\n   }\n }\n \n\nvar listToArray = function (data){\n var result = []\n var cur = data\n var index = 0\n while(typeof cur !== \"number\"){\n   result.push([\n     \"li\",\n     {},\n     [\"span\", {\"style\": \"color: rgb(227, 110, 236)\"}, index],\n     [\"span\", colonStyle, \":\"],\n     showObject(cur[0])\n   ]);\n   cur = cur[1]\n   index++\n }\n return result\n};\n\nvar variantCustomFormatter = function (data,recordVariant){\n if(recordVariant === \"::\"){\n   return [\n     \"ol\",\n     olStyle,\n     ... listToArray(data)\n   ]\n } else {\n    let spacedData = [];\n    data.forEach(cur => {\n      spacedData.push([\"span\", {\"style\": \"margin-right: 12px\"}, showObject(cur)]);\n    })\n     return [\"ol\", olStyle, ...spacedData]\n }\n\n};\n\nvar variantPreview = function (x, recordVariant){\n if(recordVariant === \"::\") {\n   // show the length, just like for array\n   var length = listToArray(x).length;\n   return ['span', {}, `list(${length})`]\n }\n return ['span', {}, `${recordVariant}(…)`]\n};\nvar isOCamlExceptionOrExtensionHead = function(x){\n return Array.isArray(x) && x.tag === 248 && typeof x[0] === \"string\"\n}\nvar isOCamlExceptionOrExtension = function(x){\n return Array.isArray(x) &&\n       x[0] !== undefined &&\n       isOCamlExceptionOrExtensionHead(x[0])\n}\nvar formatter = {\n header: function (x) {\n     var recordVariant\n     var recordPolyVar\n     if ((recordVariant =  x[Symbol.for('BsVariant')]) !== undefined){\n         return variantPreview(x, recordVariant)\n     } else if (isOCamlExceptionOrExtension(x)){\n       return ['div',{}, `${x[0][0]}(…)`]     \n     } else if ((recordPolyVar = x[Symbol.for('BsPolyVar')] ) !== undefined){\n       return ['div', {}, `\\`${recordPolyVar}#${x[0]}`]\n     }\n     return null\n },\n hasBody: function (x) {\n     var recordVariant\n     var recordPolyVar\n     if ((recordVariant = x[Symbol.for('BsVariant')] ) !== undefined){\n         return recordVariant\n     } else if(isOCamlExceptionOrExtension(x)){\n       return true\n     } else if( (recordPolyVar = x[Symbol.for('BsPolyVar')]) !== undefined){\n       return true\n     }\n     return false\n },\n body: function (x) {\n     var recordVariant\n     var recordPolyVar\n     if ((recordVariant = x[Symbol.for('BsVariant')]) !== undefined) {\n             return variantCustomFormatter(x,recordVariant)\n     }\n     else if ((recordPolyVar = x [Symbol.for('BsPolyVar')]) !== undefined){\n       return showObject(x[1])\n     }\n     else if(isOCamlExceptionOrExtension(x)){\n       return [\"ol\", olStyle, ... x.slice(1).map(cur => showObject(cur))]\n     }\n\n }\n\n}\nif (typeof window === \"undefined\"){\n global.devtoolsFormatters = [formatter]\n} else {\n window.devtoolsFormatters = [formatter]\n}\n});\n\nvar setup = {\n  contents: false\n};\n\nfunction setupOnce(param) {\n  if (!setup.contents) {\n    setup.contents = true;\n    return setupChromeDebugger(undefined);\n  }\n  \n}\n\nfunction variant(meta, tag, xs) {\n  setupOnce(undefined);\n  xs.tag = tag;\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction simpleVariant(meta, xs) {\n  setupOnce(undefined);\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction polyVar(meta, xs) {\n  setupOnce(undefined);\n  return Object.defineProperty(xs, Symbol.for(\"BsPolyVar\"), {\n              value: meta\n            });\n}\n\nvar __ = Block.__;\n\nexports.__ = __;\nexports.variant = variant;\nexports.simpleVariant = simpleVariant;\nexports.polyVar = polyVar;\n/* No side effect */\n"]},"metadata":{},"sourceType":"script"}