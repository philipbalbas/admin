{"ast":null,"code":"import * as Caml_option from \"./caml_option.js\";\nimport * as Caml_exceptions from \"./caml_exceptions.js\";\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [$$Error, e];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n}\n\nexport { $$Error, internalToOCamlException, caml_as_js_exn };\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/es6/caml_js_exceptions.js"],"names":["Caml_option","Caml_exceptions","$$Error","create","internalToOCamlException","e","caml_is_extension","caml_as_js_exn","exn","some"],"mappings":"AAEA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,OAAO,KAAKC,eAAZ,MAAiC,sBAAjC;AAEA,IAAIC,OAAO,GAAGD,eAAe,CAACE,MAAhB,CAAuB,0BAAvB,CAAd;;AAEA,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AACnC,MAAIJ,eAAe,CAACK,iBAAhB,CAAkCD,CAAlC,CAAJ,EAA0C;AACxC,WAAOA,CAAP;AACD,GAFD,MAEO;AACL,WAAO,CACCH,OADD,EAECG,CAFD,CAAP;AAID;AACF;;AAED,SAASE,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAWN,OAAf,EAAwB;AACtB,WAAOF,WAAW,CAACS,IAAZ,CAAiBD,GAAG,CAAC,CAAD,CAApB,CAAP;AACD;AAEF;;AAED,SACEN,OADF,EAEEE,wBAFF,EAGEG,cAHF;AAMA","sourcesContent":["\n\nimport * as Caml_option from \"./caml_option.js\";\nimport * as Caml_exceptions from \"./caml_exceptions.js\";\n\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n  \n}\n\nexport {\n  $$Error ,\n  internalToOCamlException ,\n  caml_as_js_exn ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}