{"ast":null,"code":"import * as Block from \"./block.js\";\nimport * as Caml_primitive from \"./caml_primitive.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nvar for_in = function for_in(o, foo) {\n  for (var x in o) {\n    foo(x);\n  }\n};\n\nfunction caml_obj_block(tag, size) {\n  var v = new Array(size);\n  v.tag = tag;\n  return v;\n}\n\nfunction caml_obj_dup(x) {\n  if (!Array.isArray(x)) {\n    return Object.assign({}, x);\n  }\n\n  var len = x.length | 0;\n  var v = new Array(len);\n\n  for (var i = 0; i < len; ++i) {\n    v[i] = x[i];\n  }\n\n  v.tag = x.tag | 0;\n  return v;\n}\n\nfunction caml_obj_truncate(x, new_size) {\n  var len = x.length | 0;\n\n  if (new_size <= 0 || new_size > len) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Obj.truncate\"];\n  }\n\n  if (len === new_size) {\n    return;\n  }\n\n  for (var i = new_size; i < len; ++i) {\n    x[i] = 0;\n  }\n\n  x.length = new_size;\n}\n\nfunction caml_lazy_make_forward(x) {\n  return Block.__(250, [x]);\n}\n\nfunction caml_lazy_make(fn) {\n  var block = [fn];\n  block.tag = 246;\n  return block;\n}\n\nvar caml_update_dummy = function caml_update_dummy(x, y) {\n  var k;\n\n  if (Array.isArray(y)) {\n    for (k = 0; k < y.length; ++k) {\n      x[k] = y[k];\n    }\n\n    if (y.tag !== undefined) {\n      x.tag = y.tag;\n    }\n  } else {\n    for (var k in y) {\n      x[k] = y[k];\n    }\n  }\n};\n\nfunction caml_compare(_a, _b) {\n  while (true) {\n    var b = _b;\n    var a = _a;\n\n    if (a === b) {\n      return 0;\n    }\n\n    var a_type = typeof a;\n    var b_type = typeof b;\n\n    switch (a_type) {\n      case \"boolean\":\n        if (b_type === \"boolean\") {\n          return Caml_primitive.caml_bool_compare(a, b);\n        }\n\n        break;\n\n      case \"function\":\n        if (b_type === \"function\") {\n          throw [Caml_builtin_exceptions.invalid_argument, \"compare: functional value\"];\n        }\n\n        break;\n\n      case \"number\":\n        if (b_type === \"number\") {\n          return Caml_primitive.caml_int_compare(a, b);\n        }\n\n        break;\n\n      case \"string\":\n        if (b_type === \"string\") {\n          return Caml_primitive.caml_string_compare(a, b);\n        } else {\n          return 1;\n        }\n\n      case \"undefined\":\n        return -1;\n\n      default:\n    }\n\n    switch (b_type) {\n      case \"string\":\n        return -1;\n\n      case \"undefined\":\n        return 1;\n\n      default:\n        if (a_type === \"boolean\") {\n          return 1;\n        }\n\n        if (b_type === \"boolean\") {\n          return -1;\n        }\n\n        if (a_type === \"function\") {\n          return 1;\n        }\n\n        if (b_type === \"function\") {\n          return -1;\n        }\n\n        if (a_type === \"number\") {\n          if (b === null || b.tag === 256) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n\n        if (b_type === \"number\") {\n          if (a === null || a.tag === 256) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n\n        if (a === null) {\n          if (b.tag === 256) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n\n        if (b === null) {\n          if (a.tag === 256) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n\n        var tag_a = a.tag | 0;\n        var tag_b = b.tag | 0;\n\n        if (tag_a === 250) {\n          _a = a[0];\n          continue;\n        }\n\n        if (tag_b === 250) {\n          _b = b[0];\n          continue;\n        }\n\n        if (tag_a === 256) {\n          if (tag_b === 256) {\n            return Caml_primitive.caml_int_compare(a[1], b[1]);\n          } else {\n            return -1;\n          }\n        }\n\n        if (tag_a === 248) {\n          return Caml_primitive.caml_int_compare(a[1], b[1]);\n        }\n\n        if (tag_a === 251) {\n          throw [Caml_builtin_exceptions.invalid_argument, \"equal: abstract value\"];\n        }\n\n        if (tag_a !== tag_b) {\n          if (tag_a < tag_b) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n\n        var len_a = a.length | 0;\n        var len_b = b.length | 0;\n\n        if (len_a === len_b) {\n          if (Array.isArray(a)) {\n            var _i = 0;\n\n            while (true) {\n              var i = _i;\n\n              if (i === len_a) {\n                return 0;\n              }\n\n              var res = caml_compare(a[i], b[i]);\n\n              if (res !== 0) {\n                return res;\n              }\n\n              _i = i + 1 | 0;\n              continue;\n            }\n\n            ;\n          } else if (a instanceof Date && b instanceof Date) {\n            return a - b;\n          } else {\n            var min_key_lhs = {\n              contents: undefined\n            };\n            var min_key_rhs = {\n              contents: undefined\n            };\n\n            var do_key = function do_key(param, key) {\n              var min_key = param[2];\n              var b = param[1];\n\n              if (!(!b.hasOwnProperty(key) || caml_compare(param[0][key], b[key]) > 0)) {\n                return;\n              }\n\n              var mk = min_key.contents;\n\n              if (mk !== undefined && key >= mk) {\n                return;\n              } else {\n                min_key.contents = key;\n                return;\n              }\n            };\n\n            var partial_arg =\n            /* tuple */\n            [a, b, min_key_rhs];\n\n            var do_key_a = function (partial_arg) {\n              return function do_key_a(param) {\n                return do_key(partial_arg, param);\n              };\n            }(partial_arg);\n\n            var partial_arg$1 =\n            /* tuple */\n            [b, a, min_key_lhs];\n\n            var do_key_b = function (partial_arg$1) {\n              return function do_key_b(param) {\n                return do_key(partial_arg$1, param);\n              };\n            }(partial_arg$1);\n\n            for_in(a, do_key_a);\n            for_in(b, do_key_b);\n            var match = min_key_lhs.contents;\n            var match$1 = min_key_rhs.contents;\n\n            if (match !== undefined) {\n              if (match$1 !== undefined) {\n                return Caml_primitive.caml_string_compare(match, match$1);\n              } else {\n                return -1;\n              }\n            } else if (match$1 !== undefined) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }\n        } else if (len_a < len_b) {\n          var _i$1 = 0;\n\n          while (true) {\n            var i$1 = _i$1;\n\n            if (i$1 === len_a) {\n              return -1;\n            }\n\n            var res$1 = caml_compare(a[i$1], b[i$1]);\n\n            if (res$1 !== 0) {\n              return res$1;\n            }\n\n            _i$1 = i$1 + 1 | 0;\n            continue;\n          }\n\n          ;\n        } else {\n          var _i$2 = 0;\n\n          while (true) {\n            var i$2 = _i$2;\n\n            if (i$2 === len_b) {\n              return 1;\n            }\n\n            var res$2 = caml_compare(a[i$2], b[i$2]);\n\n            if (res$2 !== 0) {\n              return res$2;\n            }\n\n            _i$2 = i$2 + 1 | 0;\n            continue;\n          }\n\n          ;\n        }\n\n    }\n  }\n\n  ;\n}\n\nfunction caml_equal(_a, _b) {\n  while (true) {\n    var b = _b;\n    var a = _a;\n\n    if (a === b) {\n      return true;\n    }\n\n    var a_type = typeof a;\n\n    if (a_type === \"string\" || a_type === \"number\" || a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n      return false;\n    }\n\n    var b_type = typeof b;\n\n    if (a_type === \"function\" || b_type === \"function\") {\n      throw [Caml_builtin_exceptions.invalid_argument, \"equal: functional value\"];\n    }\n\n    if (b_type === \"number\" || b_type === \"undefined\" || b === null) {\n      return false;\n    }\n\n    var tag_a = a.tag | 0;\n    var tag_b = b.tag | 0;\n\n    if (tag_a === 250) {\n      _a = a[0];\n      continue;\n    }\n\n    if (tag_b === 250) {\n      _b = b[0];\n      continue;\n    }\n\n    if (tag_a === 248) {\n      return a[1] === b[1];\n    }\n\n    if (tag_a === 251) {\n      throw [Caml_builtin_exceptions.invalid_argument, \"equal: abstract value\"];\n    }\n\n    if (tag_a !== tag_b) {\n      return false;\n    }\n\n    if (tag_a === 256) {\n      return a[1] === b[1];\n    }\n\n    var len_a = a.length | 0;\n    var len_b = b.length | 0;\n\n    if (len_a === len_b) {\n      if (Array.isArray(a)) {\n        var _i = 0;\n\n        while (true) {\n          var i = _i;\n\n          if (i === len_a) {\n            return true;\n          }\n\n          if (!caml_equal(a[i], b[i])) {\n            return false;\n          }\n\n          _i = i + 1 | 0;\n          continue;\n        }\n\n        ;\n      } else if (a instanceof Date && b instanceof Date) {\n        return !(a > b || a < b);\n      } else {\n        var result = {\n          contents: true\n        };\n\n        var do_key_a = function (b, result) {\n          return function do_key_a(key) {\n            if (!b.hasOwnProperty(key)) {\n              result.contents = false;\n              return;\n            }\n          };\n        }(b, result);\n\n        var do_key_b = function (a, b, result) {\n          return function do_key_b(key) {\n            if (!a.hasOwnProperty(key) || !caml_equal(b[key], a[key])) {\n              result.contents = false;\n              return;\n            }\n          };\n        }(a, b, result);\n\n        for_in(a, do_key_a);\n\n        if (result.contents) {\n          for_in(b, do_key_b);\n        }\n\n        return result.contents;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ;\n}\n\nfunction caml_equal_null(x, y) {\n  if (y !== null) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_undefined(x, y) {\n  if (y !== undefined) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_nullable(x, y) {\n  if (y == null) {\n    return x === y;\n  } else {\n    return caml_equal(x, y);\n  }\n}\n\nfunction caml_notequal(a, b) {\n  return !caml_equal(a, b);\n}\n\nfunction caml_greaterequal(a, b) {\n  return caml_compare(a, b) >= 0;\n}\n\nfunction caml_greaterthan(a, b) {\n  return caml_compare(a, b) > 0;\n}\n\nfunction caml_lessequal(a, b) {\n  return caml_compare(a, b) <= 0;\n}\n\nfunction caml_lessthan(a, b) {\n  return caml_compare(a, b) < 0;\n}\n\nfunction caml_min(x, y) {\n  if (caml_compare(x, y) <= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_max(x, y) {\n  if (caml_compare(x, y) >= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_obj_set_tag(prim, prim$1) {\n  prim.tag = prim$1;\n}\n\nexport { caml_obj_block, caml_obj_dup, caml_obj_truncate, caml_lazy_make_forward, caml_lazy_make, caml_update_dummy, caml_compare, caml_equal, caml_equal_null, caml_equal_undefined, caml_equal_nullable, caml_notequal, caml_greaterequal, caml_greaterthan, caml_lessthan, caml_lessequal, caml_min, caml_max, caml_obj_set_tag };\n/* No side effect */","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/node_modules/bs-platform/lib/es6/caml_obj.js"],"names":["Block","Caml_primitive","Caml_builtin_exceptions","for_in","o","foo","x","caml_obj_block","tag","size","v","Array","caml_obj_dup","isArray","Object","assign","len","length","i","caml_obj_truncate","new_size","invalid_argument","caml_lazy_make_forward","__","caml_lazy_make","fn","block","caml_update_dummy","y","k","undefined","caml_compare","_a","_b","b","a","a_type","b_type","caml_bool_compare","caml_int_compare","caml_string_compare","tag_a","tag_b","len_a","len_b","_i","res","Date","min_key_lhs","contents","min_key_rhs","do_key","param","key","min_key","hasOwnProperty","mk","partial_arg","do_key_a","partial_arg$1","do_key_b","match","match$1","_i$1","i$1","res$1","_i$2","i$2","res$2","caml_equal","result","caml_equal_null","caml_equal_undefined","caml_equal_nullable","caml_notequal","caml_greaterequal","caml_greaterthan","caml_lessequal","caml_lessthan","caml_min","caml_max","caml_obj_set_tag","prim","prim$1"],"mappings":"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","sourcesContent":["\n\nimport * as Block from \"./block.js\";\nimport * as Caml_primitive from \"./caml_primitive.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nvar for_in = (function(o,foo){\n        for (var x in o) { foo(x) }});\n\nfunction caml_obj_block(tag, size) {\n  var v = new Array(size);\n  v.tag = tag;\n  return v;\n}\n\nfunction caml_obj_dup(x) {\n  if (!Array.isArray(x)) {\n    return Object.assign(({}), x);\n  }\n  var len = x.length | 0;\n  var v = new Array(len);\n  for(var i = 0; i < len; ++i){\n    v[i] = x[i];\n  }\n  v.tag = x.tag | 0;\n  return v;\n}\n\nfunction caml_obj_truncate(x, new_size) {\n  var len = x.length | 0;\n  if (new_size <= 0 || new_size > len) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Obj.truncate\"\n        ];\n  }\n  if (len === new_size) {\n    return ;\n  }\n  for(var i = new_size; i < len; ++i){\n    x[i] = 0;\n  }\n  x.length = new_size;\n  \n}\n\nfunction caml_lazy_make_forward(x) {\n  return Block.__(250, [x]);\n}\n\nfunction caml_lazy_make(fn) {\n  var block = [fn];\n  block.tag = 246;\n  return block;\n}\n\nvar caml_update_dummy = (function(x,y){\n  var k  \n  if(Array.isArray(y)){\n    for(k = 0; k < y.length ; ++k){\n      x[k] = y[k]\n    }\n    if(y.tag !== undefined){\n      x.tag = y.tag\n    }\n  } else {\n    for (var k in y){\n      x[k] = y[k]\n    }\n  }\n});\n\nfunction caml_compare(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return 0;\n    }\n    var a_type = typeof a;\n    var b_type = typeof b;\n    switch (a_type) {\n      case \"boolean\" :\n          if (b_type === \"boolean\") {\n            return Caml_primitive.caml_bool_compare(a, b);\n          }\n          break;\n      case \"function\" :\n          if (b_type === \"function\") {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"compare: functional value\"\n                ];\n          }\n          break;\n      case \"number\" :\n          if (b_type === \"number\") {\n            return Caml_primitive.caml_int_compare(a, b);\n          }\n          break;\n      case \"string\" :\n          if (b_type === \"string\") {\n            return Caml_primitive.caml_string_compare(a, b);\n          } else {\n            return 1;\n          }\n      case \"undefined\" :\n          return -1;\n      default:\n        \n    }\n    switch (b_type) {\n      case \"string\" :\n          return -1;\n      case \"undefined\" :\n          return 1;\n      default:\n        if (a_type === \"boolean\") {\n          return 1;\n        }\n        if (b_type === \"boolean\") {\n          return -1;\n        }\n        if (a_type === \"function\") {\n          return 1;\n        }\n        if (b_type === \"function\") {\n          return -1;\n        }\n        if (a_type === \"number\") {\n          if (b === null || b.tag === 256) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n        if (b_type === \"number\") {\n          if (a === null || a.tag === 256) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n        if (a === null) {\n          if (b.tag === 256) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n        if (b === null) {\n          if (a.tag === 256) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n        var tag_a = a.tag | 0;\n        var tag_b = b.tag | 0;\n        if (tag_a === 250) {\n          _a = a[0];\n          continue ;\n        }\n        if (tag_b === 250) {\n          _b = b[0];\n          continue ;\n        }\n        if (tag_a === 256) {\n          if (tag_b === 256) {\n            return Caml_primitive.caml_int_compare(a[1], b[1]);\n          } else {\n            return -1;\n          }\n        }\n        if (tag_a === 248) {\n          return Caml_primitive.caml_int_compare(a[1], b[1]);\n        }\n        if (tag_a === 251) {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"equal: abstract value\"\n              ];\n        }\n        if (tag_a !== tag_b) {\n          if (tag_a < tag_b) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }\n        var len_a = a.length | 0;\n        var len_b = b.length | 0;\n        if (len_a === len_b) {\n          if (Array.isArray(a)) {\n            var _i = 0;\n            while(true) {\n              var i = _i;\n              if (i === len_a) {\n                return 0;\n              }\n              var res = caml_compare(a[i], b[i]);\n              if (res !== 0) {\n                return res;\n              }\n              _i = i + 1 | 0;\n              continue ;\n            };\n          } else if ((a instanceof Date && b instanceof Date)) {\n            return (a - b);\n          } else {\n            var min_key_lhs = {\n              contents: undefined\n            };\n            var min_key_rhs = {\n              contents: undefined\n            };\n            var do_key = function (param, key) {\n              var min_key = param[2];\n              var b = param[1];\n              if (!(!b.hasOwnProperty(key) || caml_compare(param[0][key], b[key]) > 0)) {\n                return ;\n              }\n              var mk = min_key.contents;\n              if (mk !== undefined && key >= mk) {\n                return ;\n              } else {\n                min_key.contents = key;\n                return ;\n              }\n            };\n            var partial_arg = /* tuple */[\n              a,\n              b,\n              min_key_rhs\n            ];\n            var do_key_a = (function(partial_arg){\n            return function do_key_a(param) {\n              return do_key(partial_arg, param);\n            }\n            }(partial_arg));\n            var partial_arg$1 = /* tuple */[\n              b,\n              a,\n              min_key_lhs\n            ];\n            var do_key_b = (function(partial_arg$1){\n            return function do_key_b(param) {\n              return do_key(partial_arg$1, param);\n            }\n            }(partial_arg$1));\n            for_in(a, do_key_a);\n            for_in(b, do_key_b);\n            var match = min_key_lhs.contents;\n            var match$1 = min_key_rhs.contents;\n            if (match !== undefined) {\n              if (match$1 !== undefined) {\n                return Caml_primitive.caml_string_compare(match, match$1);\n              } else {\n                return -1;\n              }\n            } else if (match$1 !== undefined) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }\n        } else if (len_a < len_b) {\n          var _i$1 = 0;\n          while(true) {\n            var i$1 = _i$1;\n            if (i$1 === len_a) {\n              return -1;\n            }\n            var res$1 = caml_compare(a[i$1], b[i$1]);\n            if (res$1 !== 0) {\n              return res$1;\n            }\n            _i$1 = i$1 + 1 | 0;\n            continue ;\n          };\n        } else {\n          var _i$2 = 0;\n          while(true) {\n            var i$2 = _i$2;\n            if (i$2 === len_b) {\n              return 1;\n            }\n            var res$2 = caml_compare(a[i$2], b[i$2]);\n            if (res$2 !== 0) {\n              return res$2;\n            }\n            _i$2 = i$2 + 1 | 0;\n            continue ;\n          };\n        }\n    }\n  };\n}\n\nfunction caml_equal(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return true;\n    }\n    var a_type = typeof a;\n    if (a_type === \"string\" || a_type === \"number\" || a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n      return false;\n    }\n    var b_type = typeof b;\n    if (a_type === \"function\" || b_type === \"function\") {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"equal: functional value\"\n          ];\n    }\n    if (b_type === \"number\" || b_type === \"undefined\" || b === null) {\n      return false;\n    }\n    var tag_a = a.tag | 0;\n    var tag_b = b.tag | 0;\n    if (tag_a === 250) {\n      _a = a[0];\n      continue ;\n    }\n    if (tag_b === 250) {\n      _b = b[0];\n      continue ;\n    }\n    if (tag_a === 248) {\n      return a[1] === b[1];\n    }\n    if (tag_a === 251) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"equal: abstract value\"\n          ];\n    }\n    if (tag_a !== tag_b) {\n      return false;\n    }\n    if (tag_a === 256) {\n      return a[1] === b[1];\n    }\n    var len_a = a.length | 0;\n    var len_b = b.length | 0;\n    if (len_a === len_b) {\n      if (Array.isArray(a)) {\n        var _i = 0;\n        while(true) {\n          var i = _i;\n          if (i === len_a) {\n            return true;\n          }\n          if (!caml_equal(a[i], b[i])) {\n            return false;\n          }\n          _i = i + 1 | 0;\n          continue ;\n        };\n      } else if ((a instanceof Date && b instanceof Date)) {\n        return !(a > b || a < b);\n      } else {\n        var result = {\n          contents: true\n        };\n        var do_key_a = (function(b,result){\n        return function do_key_a(key) {\n          if (!b.hasOwnProperty(key)) {\n            result.contents = false;\n            return ;\n          }\n          \n        }\n        }(b,result));\n        var do_key_b = (function(a,b,result){\n        return function do_key_b(key) {\n          if (!a.hasOwnProperty(key) || !caml_equal(b[key], a[key])) {\n            result.contents = false;\n            return ;\n          }\n          \n        }\n        }(a,b,result));\n        for_in(a, do_key_a);\n        if (result.contents) {\n          for_in(b, do_key_b);\n        }\n        return result.contents;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction caml_equal_null(x, y) {\n  if (y !== null) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_undefined(x, y) {\n  if (y !== undefined) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_nullable(x, y) {\n  if (y == null) {\n    return x === y;\n  } else {\n    return caml_equal(x, y);\n  }\n}\n\nfunction caml_notequal(a, b) {\n  return !caml_equal(a, b);\n}\n\nfunction caml_greaterequal(a, b) {\n  return caml_compare(a, b) >= 0;\n}\n\nfunction caml_greaterthan(a, b) {\n  return caml_compare(a, b) > 0;\n}\n\nfunction caml_lessequal(a, b) {\n  return caml_compare(a, b) <= 0;\n}\n\nfunction caml_lessthan(a, b) {\n  return caml_compare(a, b) < 0;\n}\n\nfunction caml_min(x, y) {\n  if (caml_compare(x, y) <= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_max(x, y) {\n  if (caml_compare(x, y) >= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_obj_set_tag(prim, prim$1) {\n  prim.tag = prim$1;\n  \n}\n\nexport {\n  caml_obj_block ,\n  caml_obj_dup ,\n  caml_obj_truncate ,\n  caml_lazy_make_forward ,\n  caml_lazy_make ,\n  caml_update_dummy ,\n  caml_compare ,\n  caml_equal ,\n  caml_equal_null ,\n  caml_equal_undefined ,\n  caml_equal_nullable ,\n  caml_notequal ,\n  caml_greaterequal ,\n  caml_greaterthan ,\n  caml_lessthan ,\n  caml_lessequal ,\n  caml_min ,\n  caml_max ,\n  caml_obj_set_tag ,\n  \n}\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}