{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as Router from \"next/router\";\nimport * as GetCategoryQuery_graphql$NextjsDefault from \"../common/__generated__/GetCategoryQuery_graphql.bs.js\";\nvar convertResponse = GetCategoryQuery_graphql$NextjsDefault.Internal.convertResponse;\nvar convertVariables = GetCategoryQuery_graphql$NextjsDefault.Internal.convertVariables;\nvar UseQuery = ReasonRelay.MakeUseQuery({\n  query: GetCategoryQuery_graphql$NextjsDefault.node,\n  convertResponse: convertResponse,\n  convertVariables: convertVariables\n});\nvar Query_makeVariables = GetCategoryQuery_graphql$NextjsDefault.Utils.makeVariables;\nvar Query_use = UseQuery.use;\nvar Query_fetch = UseQuery.$$fetch;\nvar Query_fetchPromised = UseQuery.fetchPromised;\nvar Query_preload = UseQuery.preload;\nvar Query_usePreloaded = UseQuery.usePreloaded;\nvar Query = {\n  Operation: undefined,\n  makeVariables: Query_makeVariables,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: Query_use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction GetCategory(Props) {\n  _s();\n\n  Props.id;\n  var router = Router.useRouter();\n  var categoryId = router.query.categoryId;\n  var categoryIdAvailable = categoryId == null;\n\n  if (categoryIdAvailable) {\n    console.log(\"This is the query\", router.query);\n    console.log(\"This is the asPath\", router.asPath);\n    console.log(\"This is the route\", router.route);\n    return React.createElement(\"div\", undefined, \"Data heere\");\n  } else {\n    return React.createElement(\"div\", undefined, \"Nada\");\n  }\n}\n\n_s(GetCategory, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [Router.useRouter];\n});\n\n_c = GetCategory;\nvar make = GetCategory;\nexport { Query, make };\n/* UseQuery Not a pure module */\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCategory\");","map":{"version":3,"sources":["/Users/Yves/Projects/Concenix/AdminPanel/components/GetCategory.bs.js"],"names":["React","ReasonRelay","Router","GetCategoryQuery_graphql$NextjsDefault","convertResponse","Internal","convertVariables","UseQuery","MakeUseQuery","query","node","Query_makeVariables","Utils","makeVariables","Query_use","use","Query_fetch","$$fetch","Query_fetchPromised","fetchPromised","Query_preload","preload","Query_usePreloaded","usePreloaded","Query","Operation","undefined","Types","GetCategory","Props","id","router","useRouter","categoryId","categoryIdAvailable","console","log","asPath","route","createElement","make"],"mappings":";;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAO,KAAKC,sCAAZ,MAAwD,wDAAxD;AAEA,IAAIC,eAAe,GAAGD,sCAAsC,CAACE,QAAvC,CAAgDD,eAAtE;AAEA,IAAIE,gBAAgB,GAAGH,sCAAsC,CAACE,QAAvC,CAAgDC,gBAAvE;AAEA,IAAIC,QAAQ,GAAGN,WAAW,CAACO,YAAZ,CAAyB;AAClCC,EAAAA,KAAK,EAAEN,sCAAsC,CAACO,IADZ;AAElCN,EAAAA,eAAe,EAAEA,eAFiB;AAGlCE,EAAAA,gBAAgB,EAAEA;AAHgB,CAAzB,CAAf;AAMA,IAAIK,mBAAmB,GAAGR,sCAAsC,CAACS,KAAvC,CAA6CC,aAAvE;AAEA,IAAIC,SAAS,GAAGP,QAAQ,CAACQ,GAAzB;AAEA,IAAIC,WAAW,GAAGT,QAAQ,CAACU,OAA3B;AAEA,IAAIC,mBAAmB,GAAGX,QAAQ,CAACY,aAAnC;AAEA,IAAIC,aAAa,GAAGb,QAAQ,CAACc,OAA7B;AAEA,IAAIC,kBAAkB,GAAGf,QAAQ,CAACgB,YAAlC;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAEC,SADD;AAEVb,EAAAA,aAAa,EAAEF,mBAFL;AAGVgB,EAAAA,KAAK,EAAED,SAHG;AAIVnB,EAAAA,QAAQ,EAAEA,QAJA;AAKVQ,EAAAA,GAAG,EAAED,SALK;AAMVG,EAAAA,OAAO,EAAED,WANC;AAOVG,EAAAA,aAAa,EAAED,mBAPL;AAQVG,EAAAA,OAAO,EAAED,aARC;AASVG,EAAAA,YAAY,EAAED;AATJ,CAAZ;;AAYA,SAASM,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1BA,EAAAA,KAAK,CAACC,EAAN;AACA,MAAIC,MAAM,GAAG7B,MAAM,CAAC8B,SAAP,EAAb;AACA,MAAIC,UAAU,GAAGF,MAAM,CAACtB,KAAP,CAAawB,UAA9B;AACA,MAAIC,mBAAmB,GAAID,UAAU,IAAI,IAAzC;;AACA,MAAIC,mBAAJ,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,MAAM,CAACtB,KAAxC;AACA0B,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,MAAM,CAACM,MAAzC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,MAAM,CAACO,KAAxC;AACA,WAAOtC,KAAK,CAACuC,aAAN,CAAoB,KAApB,EAA2Bb,SAA3B,EAAsC,YAAtC,CAAP;AACD,GALD,MAKO;AACL,WAAO1B,KAAK,CAACuC,aAAN,CAAoB,KAApB,EAA2Bb,SAA3B,EAAsC,MAAtC,CAAP;AACD;AACF;;GAbQE,W;UAEM1B,MAAM,CAAC8B,S;;;KAFbJ,W;AAeT,IAAIY,IAAI,GAAGZ,WAAX;AAEA,SACEJ,KADF,EAEEgB,IAFF;AAKA","sourcesContent":["\n\nimport * as React from \"react\";\nimport * as ReasonRelay from \"reason-relay/src/ReasonRelay.bs.js\";\nimport * as Router from \"next/router\";\nimport * as GetCategoryQuery_graphql$NextjsDefault from \"../common/__generated__/GetCategoryQuery_graphql.bs.js\";\n\nvar convertResponse = GetCategoryQuery_graphql$NextjsDefault.Internal.convertResponse;\n\nvar convertVariables = GetCategoryQuery_graphql$NextjsDefault.Internal.convertVariables;\n\nvar UseQuery = ReasonRelay.MakeUseQuery({\n      query: GetCategoryQuery_graphql$NextjsDefault.node,\n      convertResponse: convertResponse,\n      convertVariables: convertVariables\n    });\n\nvar Query_makeVariables = GetCategoryQuery_graphql$NextjsDefault.Utils.makeVariables;\n\nvar Query_use = UseQuery.use;\n\nvar Query_fetch = UseQuery.$$fetch;\n\nvar Query_fetchPromised = UseQuery.fetchPromised;\n\nvar Query_preload = UseQuery.preload;\n\nvar Query_usePreloaded = UseQuery.usePreloaded;\n\nvar Query = {\n  Operation: undefined,\n  makeVariables: Query_makeVariables,\n  Types: undefined,\n  UseQuery: UseQuery,\n  use: Query_use,\n  $$fetch: Query_fetch,\n  fetchPromised: Query_fetchPromised,\n  preload: Query_preload,\n  usePreloaded: Query_usePreloaded\n};\n\nfunction GetCategory(Props) {\n  Props.id;\n  var router = Router.useRouter();\n  var categoryId = router.query.categoryId;\n  var categoryIdAvailable = (categoryId == null);\n  if (categoryIdAvailable) {\n    console.log(\"This is the query\", router.query);\n    console.log(\"This is the asPath\", router.asPath);\n    console.log(\"This is the route\", router.route);\n    return React.createElement(\"div\", undefined, \"Data heere\");\n  } else {\n    return React.createElement(\"div\", undefined, \"Nada\");\n  }\n}\n\nvar make = GetCategory;\n\nexport {\n  Query ,\n  make ,\n  \n}\n/* UseQuery Not a pure module */\n"]},"metadata":{},"sourceType":"module"}